{"version":3,"sources":["config.ts","Actions/Utils.ts","Reducers/ReceiptReducer.ts","Components/ReceiptDetails.tsx","Components/ReceiptSummary.tsx","Components/ReceiptView.tsx","Components/TopMenuButton.tsx","Reducers/ShiftReducer.ts","Reducers/ProductReducer.ts","Reducers/PaymentReducer.ts","Components/TopMenu.tsx","Components/TillManagement.tsx","Components/BottomMenu.tsx","Components/ProductList.tsx","Components/ChangeQuantity.tsx","Components/DeleteReceipt.tsx","Components/PaymentView.tsx","Components/MainView.tsx","Reducers/Index.ts","App.tsx","Stores/AppStore.ts","serviceWorker.ts","Theme.tsx","index.tsx"],"names":["config","FAILURE","a","REJECTED","SUCCESS","FULFILLED","initialState","items","selectedReceiptItem","selectedReceiptItemQuantity","receiptTotal","isLoading","canCancelReceipt","canRemoveItem","canChangeQuantity","canPay","id","isCancelled","isClosed","isOpen","showQuantityDialog","showReceiptCancelDialog","ACTIONS","deleteReceiptCancel","createAction","deleteReceiptShow","changeQuantityShow","changeQuantityCancel","selectReceiptItem","selectNextReceiptItem","selectPrevReceiptItem","getCurrentReceipt","axios","post","get","removeItemFromReceipt","receiptId","receiptItemId","delete","addItemToReceipt","ean","dispatch","getState","product","products","findIndex","element","type","payload","deleteReceiptSubmit","changeQuantitySubmit","quantity","ReceiptDetails","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hot_keys","handleNext","event","handlePrev","el","createRef","state","selectedId","rows","length","newProps","setState","current","scrollIntoView","_this2","_this3","_this$props","c","classes","react_default","createElement","index_es","className","table","headerCell","map","row","key","hover","onClick","selectRow","bind","selected","cell","ordinalNumber","component","scope","name","unit","price","value","ref","React","Component","mapDispatchToProps","compose","withStyles","theme","createStyles","paddingLeft","spacing","paddingRight","fontSize","position","top","zIndex","backgroundColor","connect","store","receipt","ReceiptSummary","container","item","md","variant","ReceiptView","selectedEan","detailsGrid","Components_ReceiptDetails","summaryGrid","Components_ReceiptSummary","borderLeft","padding","minHeight","maxHeight","overflowY","objectSpread","TopMenuButton","fullWidth","size","button","disabled","children","text","height","marginTop","marginBottom","endMoney","startMoney","startDeposit","numberOfReceipts","cancelledReceiptsCount","removedItemsCount","sales","isCreated","showStartShift","showEndShift","showDialog","canOpenShift","canCloseShift","startShiftShow","Axios","getCurrentShift","startShiftSubmit","depositAmount","shiftId","startShiftShowCancel","endShiftShow","endShiftShowCancel","endShiftSubmit","startShiftExistingShow","showProductDialog","errorMessage","selectedProduct","canSearchProduct","searchEan","productFetch","productDialogClose","productDialogShow","showPayDialog","amount","amountPayed","change","payShowDialog","payCancelDialog","TopMenu","shift","mainGrid","Components_TopMenuButton","handleProductList","icons_index_es","icon","handleChangeQuantity","handlePay","handleRemoveReceiptItem","handleCancelReceipt","handleCloseShift","handleOpenShift","marginRight","Transition","assign","direction","TillManagement","open","dialog","TransitionComponent","maxWidth","autoFocus","margin","label","onKeyDown","handleEnter","onChange","handleChangeAmount","color","handleSubmitStartShift","handleCancelStartShift","handleSubmitCloseShift","handleCancelCloseShift","preventDefault","target","Number","startShift","minWidth","BottomMenu","defineProperty","handlePickProduct","textField","InputProps","inputField","InputLabelProps","onKeyPress","handleEnterKey","handleEanChange","marginLeft","typography","h4","eanValue","columns","options","filter","sort","ProductList","rowData","rowMeta","filterType","responsive","download","print","selectableRows","onRowClick","handleRowClick","elevation","grid","handleTextChange","handleSubmit","handleCancel","dist_default","title","data","tax","ChangeQuantity","q","isNaN","select","nextProps","onFocus","handleFocus","PaymentView","amountString","paper","handleKeys","handleChange","lib_index_es","style","currency","paySubmit","paymentId","then","response","payment","keyMap","PRODUCTS","QUANTITY","REMOVE_ITEM","REMOVE_RECEIPT","PAY","MainView","handlers","handle","layout","react_hotkeys_index_es","Components_TopMenu","Components_ReceiptView","Components_BottomMenu","Components_TillManagement","Components_ProductList","Components_ChangeQuantity","DeleteReceipt","Components_PaymentView","width","breakpoints","up","divider","rootReducer","combineReducers","arguments","undefined","action","newIndex","selectedIndex","find","PENDING","createStore","composeWithDevTools","applyMiddleware","promise","logger","thunk","initStore","App","root","es","locale","defaultLocale","BrowserRouter","Route","path","flexGrow","Boolean","window","location","hostname","match","createMuiTheme","palette","primary","main","secondary","error","ReactDOM","render","core_styles","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uaAAaA,EAC2C,uCCK3CC,EAAU,SAACC,GACpB,OAAOA,EAAI,IAAMC,KAGRC,EAAU,SAACF,GACpB,OAAOA,EAAI,IAAMG,KCHfC,EAAe,CACjBC,MAAO,GACPC,qBAAsB,EACtBC,4BAA6B,EAC7BC,aAAc,YACdC,WAAW,EACXC,kBAAkB,EAClBC,eAAe,EACfC,mBAAmB,EACnBC,QAAQ,EACRC,GAAI,EACJC,aAAa,EACbC,UAAU,EACVC,QAAQ,EACRC,oBAAoB,EACpBC,yBAAyB,GAGvBC,EACQ,mBADRA,EAEoB,+BAFpBA,EAGiB,4BAHjBA,EAIW,sBAJXA,EAKoB,+BALpBA,EAMkB,6BANlBA,EAOqB,gCAPrBA,EAQmB,8BARnBA,EASiB,4BATjBA,EAUqB,gCAVrBA,EAWoB,+BAXpBA,EAYqB,gCAZrBA,EAaqB,gCAbrBA,EAcK,gBAEEC,EAAsBC,YAAaF,GACnCG,EAAoBD,YAAaF,GACjCI,EAAqBF,YAAaF,GAClCK,EAAuBH,YAAaF,GACpCM,EAAoBJ,YAAaF,EAA2B,SAACN,GAAD,OAAiBA,IAC7Ea,EAAwBL,YAAaF,GACrCQ,EAAwBN,YAAaF,GAIrCS,GAHsBP,YAAaF,EAA8B,WAC1E,OAAOU,IAAMC,KAAKjC,EAAoB,iBAETwB,YAAaF,EAA2B,WACrE,OAAOU,IAAME,IAAIlC,EAAoB,kBAE5BmC,EAAwBX,YAAaF,EAAqB,SAACc,EAAoBC,GACxF,OAAOL,IAAMM,OAAOtC,EAAoB,eAAiBoC,EAAY,IAAMC,KAIlEE,EAAmB,SAACC,GAAD,OAAkB,SAACC,EAAUC,GAMrDD,EALWC,IAAWC,QAAQC,SACbC,UAAU,SAACC,GAC5B,OAAOA,EAAQN,KAAOA,KACpB,EAEO,CACLO,KAAMzB,EACN0B,QAAShB,IAAMC,KAAKjC,EAAoB,eAAiBwC,IAGpD,CAACO,KAAM,oCAGXE,EAAsBzB,YAAaF,EAA8B,SAACc,GAC3E,OAAOJ,IAAMM,OAAOtC,EAAoB,eAAiBoC,KAEhDc,EAAuB1B,YAAaF,EAA+B,SAACN,EAAamC,GAC1F,OAAOnB,IAAMC,KAAKjC,EAAoB,qBAAsB,CACxDgB,GAAIA,EACJmC,SAAUA,MCjDZC,eAEF,SAAAA,EAAYC,GAAW,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACnBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAFVQ,cACuB,EAAAP,EAcvBQ,WAAa,SAACC,GACVT,EAAKD,MAAMxB,yBAfQyB,EAiBvBU,WAAa,SAACD,GACVT,EAAKD,MAAMvB,yBAlBQwB,EAiCvBW,GAAKC,sBA/BDZ,EAAKa,MAAQ,CACTC,WAAYd,EAAKD,MAAMgB,KAAKC,QAAU,MAHvBhB,yFAMGiB,GACjBA,IAAad,KAAKJ,QACfI,KAAKJ,MAAMgB,MAAQZ,KAAKJ,MAAMgB,KAAKC,OAAS,EAC5Cb,KAAKe,SAAS,CAACJ,WAAYX,KAAKJ,MAAMgB,KAAKC,SAE3Cb,KAAKe,SAAS,CAACJ,WAAY,oDAU/BX,KAAKQ,IAAMR,KAAKQ,GAAGQ,SACnBhB,KAAKQ,GAAGQ,QAAQC,8DAGhBjB,KAAKQ,IAAMR,KAAKQ,GAAGQ,SACnBhB,KAAKQ,GAAGQ,QAAQC,mDAEd1D,GAAY,IAAA2D,EAAAlB,KAClB,OAAO,SAACM,GACJY,EAAKtB,MAAMzB,kBAAkBZ,qCAI5B,IAAA4D,EAAAnB,KAAAoB,EACqBpB,KAAKJ,MAAvBgB,EADHQ,EACGR,KACFS,EAFDD,EACSE,SACO,GACrB,OAAOC,EAAA9E,EAAA+E,cAAA,WAAKD,EAAA9E,EAAA+E,cAACC,EAAA,MAAD,CAAOC,UAAWL,EAAEM,OAC5BJ,EAAA9E,EAAA+E,cAACC,EAAA,UAAD,KACIF,EAAA9E,EAAA+E,cAACC,EAAA,SAAD,KACIF,EAAA9E,EAAA+E,cAACC,EAAA,UAAD,CAAWC,UAAWL,EAAEO,YAAxB,OACAL,EAAA9E,EAAA+E,cAACC,EAAA,UAAD,CAAWC,UAAWL,EAAEO,YAAxB,OACAL,EAAA9E,EAAA+E,cAACC,EAAA,UAAD,CAAWC,UAAWL,EAAEO,YAAxB,SACAL,EAAA9E,EAAA+E,cAACC,EAAA,UAAD,CAAWC,UAAWL,EAAEO,YAAxB,mBACAL,EAAA9E,EAAA+E,cAACC,EAAA,UAAD,CAAWC,UAAWL,EAAEO,YAAxB,MACAL,EAAA9E,EAAA+E,cAACC,EAAA,UAAD,CAAWC,UAAWL,EAAEO,YAAxB,QACAL,EAAA9E,EAAA+E,cAACC,EAAA,UAAD,CAAWC,UAAWL,EAAEO,YAAxB,uBAGRL,EAAA9E,EAAA+E,cAACC,EAAA,UAAD,KACKb,GAAQA,EAAKiB,IAAI,SAACC,GACf,OACIP,EAAA9E,EAAA+E,cAACC,EAAA,SAAD,CAAUM,IAAKD,EAAIvE,GAAIyE,OAAO,EAAMC,QAASd,EAAKe,UAAUJ,EAAIvE,IAAI4E,KAAKhB,GAAOiB,SAAUjB,EAAKvB,MAAM7C,qBAAuB+E,EAAIvE,IAC5HgE,EAAA9E,EAAA+E,cAACC,EAAA,UAAD,CAAWC,UAAWL,EAAEgB,MAAOP,EAAIQ,cAAgB,KACnDf,EAAA9E,EAAA+E,cAACC,EAAA,UAAD,CAAWC,UAAWL,EAAEgB,KAAME,UAAU,KAAKC,MAAM,OAAOV,EAAI/C,KAC9DwC,EAAA9E,EAAA+E,cAACC,EAAA,UAAD,CAAWC,UAAWL,EAAEgB,MAAOP,EAAIW,MACnClB,EAAA9E,EAAA+E,cAACC,EAAA,UAAD,CAAWC,UAAWL,EAAEgB,MAAOP,EAAIpC,UACnC6B,EAAA9E,EAAA+E,cAACC,EAAA,UAAD,CAAWC,UAAWL,EAAEgB,MAAOP,EAAIY,MACnCnB,EAAA9E,EAAA+E,cAACC,EAAA,UAAD,CAAWC,UAAWL,EAAEgB,MAAOP,EAAIa,OACnCpB,EAAA9E,EAAA+E,cAACC,EAAA,UAAD,CAAWC,UAAWL,EAAEgB,MAAOP,EAAIc,YAMvDrB,EAAA9E,EAAA+E,cAAA,OAAKqB,IAAK7C,KAAKQ,aAnEMsC,IAAMC,WA4E7BC,GAAqB,CAAE7E,oBAAmBC,wBAAuBC,yBAKxD4E,eACXC,qBAzGW,SAACC,GAAD,OAAkBC,uBAAa,CAC1CzB,MAAO,CACH0B,YAAaF,EAAMG,QAAQZ,KAC3Ba,aAAcJ,EAAMG,QAAQZ,MAEhCL,KAAM,CACFmB,SAAU,QAEd5B,WAAY,CACR4B,SAAU,OACVC,SAAU,SACVC,IAAK,EACLC,OAAQ,GACRC,gBAAiB,aA6FrBC,YAXoB,SAACC,GAAD,MAAwB,CAC5C/G,oBAAqB+G,EAAMC,QAAQhH,sBAY/BiG,IAJOC,CAMbtD,ICjHIqE,oLAEE,OAAOzC,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,KACHF,EAAA9E,EAAA+E,cAACC,EAAA,SAAD,KACIF,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMwC,WAAS,GACf1C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACf5C,EAAA9E,EAAA+E,cAACC,EAAA,WAAD,CAAY2C,QAAQ,MAApB,SAEA7C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACf5C,EAAA9E,EAAA+E,cAACC,EAAA,WAAD,CAAY2C,QAAQ,MAAMpE,KAAKJ,MAAM3C,yBATxB6F,IAAMC,WAiBpBG,wBAnBA,SAACC,GAAD,OAAkBC,uBAAa,KAmB/BF,CAAmBc,ICE5BK,eACF,SAAAA,EAAYzE,GAAW,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqE,IACnBxE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuE,GAAAlE,KAAAH,KAAMJ,KACDc,MAAQ,CACT4D,YAAa,IAHEzE,wEAMd,IAECwB,EADcrB,KAAKJ,MAAjB0B,SACa,GACrB,OAAOC,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMwC,WAAS,GAClB1C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACxC,UAAWL,EAAEkD,YAAaJ,GAAI,GACrC5C,EAAA9E,EAAA+E,cAACgD,GAAD,CAAgB5D,KAAMZ,KAAKJ,MAAM9C,SAErCyE,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,EAAGzC,UAAWL,EAAEoD,aAC3BlD,EAAA9E,EAAA+E,cAACkD,GAAD,CAAgBzH,aAAc+C,KAAKJ,MAAM3C,wBAf/B6F,IAAMC,WA8BjBE,eACXC,qBA/CW,SAACC,GAAD,OAAkBC,uBAAa,CAC1CqB,YAAa,CACTE,WAAY,uBAEhBJ,YAAa,CACTK,QAA8B,EAArBzB,EAAMG,QAAQZ,KACvBmC,UAAW,QACXC,UAAW,QACXC,UAAW,SACXnB,gBAAiB,aAuCrBC,YAToB,SAACC,GAAD,OAAAhE,OAAAkF,EAAA,EAAAlF,CAAA,GACjBgE,EAAMC,UAHc,IASZd,CAMboB,aC5CIY,oLACO,IACE3D,EAAWtB,KAAKJ,MAAhB0B,QACP,OAAOC,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACtB5C,EAAA9E,EAAA+E,cAACC,EAAA,OAAD,CACEyD,WAAS,EACTd,QAAQ,WACRe,KAAK,QACLzD,UAAWJ,EAAQ8D,OACnBnD,QAASjC,KAAKJ,MAAMqC,QACpBoD,SAAUrF,KAAKJ,MAAMyF,UAErB9D,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMwC,WAAS,GACb1C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,IACZnE,KAAKJ,MAAM0F,UAEd/D,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,IACZnE,KAAKJ,MAAM2F,gBAjBEzC,IAAMC,WAyBnBG,wBAjCA,SAACC,GAAD,OAAkBC,uBAAa,CAC1CgC,OAAQ,CACJI,OAA6B,GAArBrC,EAAMG,QAAQZ,KACtB+C,UAAgC,EAArBtC,EAAMG,QAAQZ,KACzBgD,aAAmC,EAArBvC,EAAMG,QAAQZ,SA6BrBQ,CAAmB+B,ICpC5BpI,GAAe,CACjB8I,SAAU,EACVC,WAAY,EACZC,aAAc,EACdC,iBAAkB,EAClBC,uBAAwB,EACxBC,kBAAmB,EACnBC,MAAO,EACPC,WAAW,EACXxI,QAAQ,EACRR,WAAW,EACXiJ,gBAAgB,EAChBC,cAAc,EACdC,YAAY,EACZC,cAAc,EACdC,eAAe,EACfhJ,GAAI,GAGFM,GACe,wBADfA,GAEe,wBAFfA,GAGe,wBAHfA,GAIiB,0BAJjBA,GAKiB,0BALjBA,GAMiB,0BANjBA,GAOiB,0BAPjBA,GAQuB,gCAGhB2I,GAAiBzI,YAAaF,GAAyB,WAChE,OAAO4I,IAAMjI,KAAKjC,EAAoB,eAE7BmK,GAAkB3I,YAAaF,GAAyB,WACjE,OAAO4I,IAAMhI,IAAIlC,EAAoB,eAG5BoK,GAAmB5I,YAAaF,GAA2B,SAACN,EAAYqJ,GACjF,OAAOH,IAAMjI,KAAKjC,EAAoB,kBAAmB,CAAEsK,QAAStJ,EAAIqJ,cAAeA,MAG9EE,GAAuB/I,YAAaF,IACpCkJ,GAAehJ,YAAaF,IAC5BmJ,GAAqBjJ,YAAaF,IAClCoJ,GAAiBlJ,YAAaF,GAA2B,WAClE,OAAO4I,IAAMjI,KAAKjC,EAAoB,qBAE7B2K,GAAyBnJ,YAAaF,IC7C7ChB,GAAe,CACjBsC,SAAU,GACVgI,mBAAmB,EACnBjK,WAAW,EACXkK,aAAc,GACdC,gBAAiB,GACjBC,kBAAkB,EAClBC,UAAW,IAGF1J,GACO,0BADPA,GAEa,gCAFbA,GAGK,wBAHLA,GAIc,iCAqDd2J,GAAezJ,YAAaF,GAAwB,WAAQ,OAAOU,IAAME,IAAIlC,EAAoB,iBACjGkL,GAAqB1J,YAAaF,IAClC6J,GAAoB3J,YAAaF,ICvExChB,GAAe,CACjB8K,eAAe,EACfC,OAAQ,EACRC,YAAa,EACbC,OAAQ,EACR5K,WAAW,EACXI,QAAQ,EACRC,GAAI,GAEFM,GACc,yBADdA,GAEgB,2BAFhBA,GAGgB,2BAKTkK,GAAgBhK,YAAaF,GAAwB,SAACN,GAAiB,OAAOkJ,IAAMjI,KAAKjC,EAAoB,iBAC7GyL,GAAkBjK,YAAaF,ICgBtCoK,eACF,SAAAA,EAAYrI,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiI,IACdpI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmI,GAAA9H,KAAAH,KAAMJ,KACDA,MAAM8G,kBACX7G,EAAKD,MAAMtB,oBAHGuB,wEAyCT,IAAAuB,EACoBpB,KAAKJ,MAAxB0B,EADDF,EACCE,QAAS4G,EADV9G,EACU8G,MAEf,OADA5G,EAAUA,GAAW,GAEjBC,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMwC,WAAS,EAACX,QAAS,EAAG5B,UAAWJ,EAAQ6G,UAC3C5G,EAAA9E,EAAA+E,cAAC4G,GAAD,CAAe7C,KAAK,4BAAuBF,UAAW6C,EAAMxK,OAAQuE,QAASjC,KAAKJ,MAAMyI,mBACpF9G,EAAA9E,EAAA+E,cAAC8G,GAAA,EAAD,CAAQ5G,UAAWJ,EAAQiH,QAE/BhH,EAAA9E,EAAA+E,cAAC4G,GAAD,CAAe7C,KAAK,kCAAmBF,UAAWrF,KAAKJ,MAAMvC,kBAAmB4E,QAASjC,KAAKJ,MAAM4I,sBAChGjH,EAAA9E,EAAA+E,cAAC8G,GAAA,EAAD,CAAS5G,UAAWJ,EAAQiH,QAEhChH,EAAA9E,EAAA+E,cAAC4G,GAAD,CAAe7C,KAAK,qBAAgBF,UAAWrF,KAAKJ,MAAMtC,OAAQ2E,QAASjC,KAAKJ,MAAM6I,WAClFlH,EAAA9E,EAAA+E,cAAC8G,GAAA,EAAD,CAAa5G,UAAWJ,EAAQiH,QAEpChH,EAAA9E,EAAA+E,cAAC4G,GAAD,CAAe7C,KAAK,8BAAoBF,UAAWrF,KAAKJ,MAAMxC,cAAe6E,QAASjC,KAAKJ,MAAM8I,yBAC7FnH,EAAA9E,EAAA+E,cAAC8G,GAAA,EAAD,CAAoB5G,UAAWJ,EAAQiH,QAE3ChH,EAAA9E,EAAA+E,cAAC4G,GAAD,CAAe7C,KAAK,sBAAsBF,UAAWrF,KAAKJ,MAAMzC,iBAAkB8E,QAASjC,KAAKJ,MAAM+I,qBAClGpH,EAAA9E,EAAA+E,cAAC8G,GAAA,EAAD,CAAQ5G,UAAWJ,EAAQiH,QAE/BhH,EAAA9E,EAAA+E,cAAC4G,GAAD,CACI7C,KAAM2C,EAAMxK,OAAS,sBAAmB,wBACxC2H,SAAU6C,EAAMxK,QAAUwK,EAAM3B,eAAiB2B,EAAM5B,aACvDrE,QAASiG,EAAMxK,OAASsC,KAAKJ,MAAMgJ,iBAAmB5I,KAAKJ,MAAMiJ,iBAEjEtH,EAAA9E,EAAA+E,cAAC8G,GAAA,EAAD,CAAW5G,UAAWJ,EAAQiH,gBAnE5BzF,IAAMC,WAoFtBC,GAAqB,CAAE+E,iBAAeL,qBAAmB1J,oBAAmBC,qBAAoB8I,gBAAcP,kBAAgBE,mBAAiBQ,0BAAwBxI,wBAAuBJ,qBAKrL2E,eACXC,qBApHW,SAACC,GAAD,OACXC,uBAAa,CACT+E,SAAU,CACN9E,YAAaF,EAAMG,QAAQZ,KAC3Ba,aAAcJ,EAAMG,QAAQZ,MAEhC6F,KAAM,CACFO,YAAa3F,EAAMG,QAAQZ,KAC3Bc,SAAU,QA6GlBK,YAjBoB,SAACC,GAAD,MAAwB,CAC5CoE,MAAOpE,EAAMoE,MACbnE,QAASD,EAAMC,QACfuD,iBAAkBxD,EAAM5E,QAAQoI,iBAChCjK,kBAAmByG,EAAMC,QAAQ1G,kBACjCC,OAAQwG,EAAMC,QAAQzG,OACtBF,cAAe0G,EAAMC,QAAQ3G,cAC7BD,iBAAkB2G,EAAMC,QAAQ5G,mBAY5B6F,IAJOC,CAMbgF,yBC/GF,SAASc,GAAWnJ,GAClB,OAAO2B,EAAA9E,EAAA+E,cAACC,EAAA,MAAD3B,OAAAkJ,OAAA,CAAOC,UAAU,MAASrJ,IAGnC,IAUMsJ,eACJ,SAAAA,EAAYtJ,GAAkB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkJ,IAC5BrJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoJ,GAAA/I,KAAAH,KAAMJ,KACDc,MAAQ,CAAEkH,OAAQ,IAFK/H,wEAIrB,IAAAqB,EAAAlB,KAEDqB,EADcrB,KAAKJ,MAAjB0B,SACa,GACrB,OACEC,EAAA9E,EAAA+E,cAAA,WACGxB,KAAKJ,MAAMuG,eACV5E,EAAA9E,EAAA+E,cAACC,EAAA,OAAD,CAAQ0H,KAAMnJ,KAAKJ,MAAMyG,WAAY3E,UAAWL,EAAE+H,OAAQC,oBAAqBN,GAAYO,SAAS,MAClG/H,EAAA9E,EAAA+E,cAACC,EAAA,YAAD,CAAalE,GAAG,qBAAhB,mBACAgE,EAAA9E,EAAA+E,cAACC,EAAA,cAAD,KACEF,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMwC,WAAS,GACb1C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACb5C,EAAA9E,EAAA+E,cAACC,EAAA,WAAD,CAAY2C,QAAQ,MAApB,kCAIF7C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACb5C,EAAA9E,EAAA+E,cAACC,EAAA,WAAD,CAAY2C,QAAQ,MACjBpE,KAAKJ,MAAMgG,cAIlBrE,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMwC,WAAS,GACb1C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACb5C,EAAA9E,EAAA+E,cAACC,EAAA,WAAD,sCAGJF,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACb5C,EAAA9E,EAAA+E,cAACC,EAAA,UAAD,CACE8H,WAAS,EACTC,OAAO,QACPjM,GAAG,SACHkM,MAAM,wBACNnK,KAAK,SACLsD,MAAO5C,KAAKU,MAAMkH,OAClB8B,UAAW,SAACpJ,GAAD,OAAWY,EAAKyI,YAAYrJ,IACvCsJ,SAAU,SAACtJ,GAAD,OAAWY,EAAK2I,mBAAmBvJ,IAC7C4E,WAAS,KAGb3D,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMwC,WAAS,GACb1C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACb5C,EAAA9E,EAAA+E,cAACC,EAAA,OAAD,CAAQqI,MAAM,UAAU7H,QAAS,SAAC3B,GAAD,OAAWY,EAAK6I,uBAAuBzJ,KAAxE,mBAEFiB,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACb5C,EAAA9E,EAAA+E,cAACC,EAAA,OAAD,CAAQqI,MAAM,UAAU7H,QAAS,SAAC3B,GAAD,OAAWY,EAAK8I,uBAAuB1J,KAAxE,cAMRiB,EAAA9E,EAAA+E,cAACC,EAAA,OAAD,CAAQ0H,KAAMnJ,KAAKJ,MAAMyG,WAAY3E,UAAWL,EAAE+H,OAAQC,oBAAqBN,IAC7ExH,EAAA9E,EAAA+E,cAACC,EAAA,YAAD,CAAalE,GAAG,qBAAhB,0BACAgE,EAAA9E,EAAA+E,cAACC,EAAA,cAAD,KACEF,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMwC,WAAS,GACb1C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACb5C,EAAA9E,EAAA+E,cAACC,EAAA,WAAD,CAAY2C,QAAQ,MAApB,2BAEF7C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACb5C,EAAA9E,EAAA+E,cAACC,EAAA,WAAD,CAAY2C,QAAQ,MAAMpE,KAAKJ,MAAMgG,cAGzCrE,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMwC,WAAS,GACb1C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACb5C,EAAA9E,EAAA+E,cAACC,EAAA,WAAD,CAAY2C,QAAQ,MAApB,kCAMJ7C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMwC,WAAS,GACb1C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACb5C,EAAA9E,EAAA+E,cAACC,EAAA,WAAD,CAAY2C,QAAQ,MAApB,kCAEF7C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACb5C,EAAA9E,EAAA+E,cAACC,EAAA,WAAD,CAAY2C,QAAQ,MAAMpE,KAAKJ,MAAMkG,oBAGzCvE,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMwC,WAAS,GACb1C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACb5C,EAAA9E,EAAA+E,cAACC,EAAA,WAAD,CAAY2C,QAAQ,MAApB,8CAEF7C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACb5C,EAAA9E,EAAA+E,cAACC,EAAA,WAAD,CAAY2C,QAAQ,MACjBpE,KAAKJ,MAAMmG,0BAIlBxE,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMwC,WAAS,GACb1C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACb5C,EAAA9E,EAAA+E,cAACC,EAAA,WAAD,CAAY2C,QAAQ,MAApB,yCAEF7C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACb5C,EAAA9E,EAAA+E,cAACC,EAAA,WAAD,CAAY2C,QAAQ,MACjBpE,KAAKJ,MAAMoG,qBAIlBzE,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMwC,WAAS,GACb1C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACb5C,EAAA9E,EAAA+E,cAACC,EAAA,WAAD,CAAY2C,QAAQ,MAApB,mBAEF7C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACb5C,EAAA9E,EAAA+E,cAACC,EAAA,WAAD,CAAY2C,QAAQ,MAAMpE,KAAKJ,MAAMqG,SAGzC1E,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMwC,WAAS,GACb1C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACb5C,EAAA9E,EAAA+E,cAACC,EAAA,WAAD,CAAY2C,QAAQ,MAApB,iCAGJ7C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMwC,WAAS,GACb1C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACb5C,EAAA9E,EAAA+E,cAACC,EAAA,WAAD,CAAY2C,QAAQ,MAApB,gBAMJ7C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMwC,WAAS,GACb1C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACb5C,EAAA9E,EAAA+E,cAACC,EAAA,OAAD,CAAQqI,MAAM,UAAU7H,QAAS,SAAC3B,GAAD,OAAWY,EAAK+I,uBAAuB3J,KAAxE,wBAEFiB,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACb5C,EAAA9E,EAAA+E,cAACC,EAAA,OAAD,CAAQqI,MAAM,UAAU7H,QAAS,SAAC3B,GAAD,OAAWY,EAAKgJ,uBAAuB5J,KAAxE,mDASJA,GACQ,UAAdA,EAAMyB,MACRzB,EAAM6J,iBACNnK,KAAK+J,qEAGUzJ,GACjBN,KAAKe,SAAS,CAAC6G,OAAQtH,EAAM8J,OAAOxH,uDAEftC,GACrBN,KAAKJ,MAAMkH,sEAEUxG,GACrBN,KAAKJ,MAAM+G,iBAAiB3G,KAAKJ,MAAMrC,GAAI8M,OAAOrK,KAAKU,MAAMkH,wDAExCtH,GACrBN,KAAKJ,MAAMqH,gEAEU3G,GACrBN,KAAKJ,MAAMoH,4BA5JclE,IAAMC,WAyK7BC,GAAqB,CAAEsH,WAAY9D,GAAgBO,gBAAcE,kBAAgBD,sBAAoBL,oBAAkBG,yBAK9G7D,QAAuBC,qBAxLvB,SAACC,GAAD,OAAkBC,uBAAa,CAC5CgG,OAAQ,CACNmB,SAAU,SAsL2C1G,YAdjC,SAACC,GAAD,OAAAhE,OAAAkF,EAAA,EAAAlF,CAAA,GACjBgE,EAAMoE,QAaqElF,IAAnEC,CAAwFiG,cCxLjGsB,eACF,SAAAA,EAAY5K,GAAY,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwK,IACpB3K,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0K,GAAArK,KAAAH,KAAMJ,KACDc,MAAQ,CACT+B,KAAM,IAHU5C,mFAOpBG,KAAKJ,MAAMd,iBAAiBkB,KAAKU,MAAM+B,MACvCzC,KAAKe,SAAS,CAAC0B,KAAK,0CAEXA,GAAc,IAAAvB,EAAAlB,KACvB,OAAO,SAACM,GACJ,GAAkB,UAAdA,EAAMyB,IAEN,OAAOb,EAAKH,SAALjB,OAAA2K,EAAA,EAAA3K,CAAA,GACF2C,EAAOnC,EAAM8J,OAAOxH,QAHF1B,EAAKwJ,sDAO/B,IAAAvJ,EAAAnB,KAECqB,EADcrB,KAAKJ,MAAjB0B,SACa,GACrB,OACIC,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMwC,WAAS,GACX1C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACX5C,EAAA9E,EAAA+E,cAACC,EAAA,UAAD,CACI8H,WAAW,EACXrE,WAAS,EACT3H,GAAG,gBACHkM,MAAM,gBACNrF,QAAQ,WACR1C,UAAWL,EAAEsJ,UACbC,WAAY,CAAElJ,UAAWL,EAAEwJ,YAC3BC,gBAAiB,CAAEpJ,UAAWL,EAAEoI,OAChC7G,MAAO5C,KAAKU,MAAM+B,KAClB4C,UAAWrF,KAAKJ,MAAMsI,MAAMxK,OAC5BqN,WAAY,SAACzK,GAAD,OAAWa,EAAK6J,eAAe1K,IAC3CsJ,SAAU,SAACtJ,GAAD,OAAWa,EAAK8J,gBAAgB3K,IAC1CkJ,OAAO,oDAMZlJ,GACO,UAAdA,EAAMyB,KAEN/B,KAAK0K,4DAGGpK,GACZN,KAAKe,SAALjB,OAAA2K,EAAA,EAAA3K,CAAA,GACK,OAASQ,EAAM8J,OAAOxH,eArDVE,IAAMC,WA6DzBC,GAAqB,CAAElE,oBAKdmE,eACXC,qBAtFW,SAACC,GAAD,OACXC,uBAAa,CACTuH,UAAW,CACPO,WAAiC,EAArB/H,EAAMG,QAAQZ,KAC1B+C,UAAgC,EAArBtC,EAAMG,QAAQZ,KACzBgD,aAAmC,EAArBvC,EAAMG,QAAQZ,MAEhCmI,WAAY,CACRrH,SAAUL,EAAMgI,WAAWC,GAAG5H,UAElCiG,MAAO,CACHjG,SAAUL,EAAMgI,WAAWC,GAAG5H,cA4EtCK,YAXoB,SAACC,GAAD,OAAAhE,OAAAkF,EAAA,EAAAlF,CAAA,GACjBgE,EAAM5E,QADW,CAEpBgJ,MAAOpE,EAAMoE,SAWTlF,IAJOC,CAMbuH,yBC/EI3N,GAAe,CACjBwO,SAAU,IAIRC,GAAU,CACZ,CACI7I,KAAM,MACNgH,MAAO,MACP8B,QAAS,CACLC,QAAQ,EACRC,MAAM,IAGd,CACIhJ,KAAM,OACNgH,MAAO,QACP8B,QAAS,CACLC,QAAQ,EACRC,MAAM,IAGd,CACIhJ,KAAM,QACNgH,MAAO,OACP8B,QAAS,CACLC,QAAQ,EACRC,MAAM,IAGd,CACIhJ,KAAM,MACNgH,MAAO,MACP8B,QAAS,CACLC,QAAQ,EACRC,MAAM,IAGd,CACIhJ,KAAM,OACNgH,MAAO,KACP8B,QAAS,CACLC,QAAQ,EACRC,MAAM,KAKZC,eACF,SAAAA,EAAY9L,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0L,IACf7L,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4L,GAAAvL,KAAAH,KAAMJ,KACDA,MAAM4H,eACX3H,EAAKa,MAAQ7D,GAHEgD,gFAKFS,GACbN,KAAKe,SAAS,CAAEsK,SAAU/K,EAAM8J,OAAOxH,6CAE9BtC,GACTN,KAAKJ,MAAM6H,0DAEFnH,GACLN,KAAKU,MAAM2K,UAAmC,IAAvBrL,KAAKU,MAAM2K,WAClCrL,KAAKJ,MAAMd,iBAAiBkB,KAAKU,MAAM2K,UACvCrL,KAAKJ,MAAM6H,qBACXzH,KAAKe,SAAS,CAACsK,SAAU,6CAGlBM,EAAmBC,GAC9B5L,KAAKe,SAAS,CAAEsK,SAAUM,EAAQ,uCAGlC,MAAO,CACHE,WAAY,WACZC,WAAY,SACZC,UAAU,EACVC,OAAO,EACPR,QAAQ,EACRC,MAAM,EACNQ,gBAAgB,EAChBC,WAAYlM,KAAKmM,eAAehK,KAAKnC,MACrCoM,UAAU,oCAGT,IAAAlL,EAAAlB,KAECqB,EADcrB,KAAKJ,MAAjB0B,SACa,GACrB,OACIC,EAAA9E,EAAA+E,cAACC,EAAA,OAAD,CAAQ0H,KAAMnJ,KAAKJ,MAAMuH,kBAAmBmC,SAAS,MACjD/H,EAAA9E,EAAA+E,cAACC,EAAA,YAAD,CAAalE,GAAG,qBAAhB,mBACAgE,EAAA9E,EAAA+E,cAACC,EAAA,cAAD,CAAeC,UAAWL,EAAE+H,QACxB7H,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMwC,WAAS,EAACvC,UAAWL,EAAEgL,KAAM/I,QAAS,GACxC/B,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACX5C,EAAA9E,EAAA+E,cAACC,EAAA,UAAD,CAAW8H,WAAS,EAACC,OAAO,QAAQjM,GAAG,SAASqM,SAAU,SAAAtJ,GAAK,OAAIY,EAAKoL,iBAAiBhM,IAAQsC,MAAO5C,KAAKU,MAAM2K,SAAU5B,MAAM,MAAMnK,KAAK,OAAO4F,WAAS,KAElK3D,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACX5C,EAAA9E,EAAA+E,cAACC,EAAA,OAAD,CAAQqI,MAAM,UAAU3E,KAAK,QAAQf,QAAQ,YAAYc,WAAS,EAACjD,QAAS,SAAA3B,GAAK,OAAIY,EAAKqL,aAAajM,IAAQ+E,SAAUrF,KAAKU,OAAiC,KAAxBV,KAAKU,MAAM2K,UAAlJ,mBAIJ9J,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACX5C,EAAA9E,EAAA+E,cAACC,EAAA,OAAD,CAAQqI,MAAM,YAAY3E,KAAK,QAAQf,QAAQ,YAAYc,WAAS,EAACjD,QAAS,SAAA3B,GAAK,OAAIY,EAAKsL,aAAalM,KAAzG,YAKRiB,EAAA9E,EAAA+E,cAACiL,GAAAhQ,EAAD,CACIiQ,MAAO,GACPC,KAAM3M,KAAKJ,MAAMT,SAAS0C,IAAI,SAAAqC,GAC1B,MAAO,CAACA,EAAKnF,IAAKmF,EAAKzB,KAAMyB,EAAKvB,MAAOuB,EAAK0I,IAAK1I,EAAKxB,QAE5D4I,QAASA,GACTC,QAASvL,KAAKuL,qBA/DZzI,IAAMC,WA0E1BC,GAAqB,CAAEwE,gBAAcC,sBAAoB3I,oBAKhDmE,eACXC,qBA1IW,SAACC,GAAD,OACXC,uBAAa,CACTgG,OAAQ,CACJmB,SAAU,KAEd8B,KAAM,CACF3G,aAAmC,EAArBvC,EAAMG,QAAQZ,UAqIpCmB,YAXoB,SAACC,GAAD,OAAAhE,OAAAkF,EAAA,EAAAlF,CAAA,GACjBgE,EAAM5E,UAYL8D,IAJOC,CAMbyI,IChIImB,eACF,SAAAA,EAAYjN,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6M,IACdhN,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+M,GAAA1M,KAAAH,KAAMJ,KACDc,MAAQ,CAAChB,SAAS,GAFTG,gFAIDS,GACb,IAAMwM,EAAIzC,OAAO/J,EAAM8J,OAAOxH,OACzBmK,MAAMD,IAAI9M,KAAKe,SAAS,CAAErB,SAAUoN,yCAEhCxM,GACTN,KAAKJ,MAAM1B,4DAEFoC,GACTN,KAAKJ,MAAMH,qBAAqBO,KAAKJ,MAAM7C,qBAAuB,EAAGiD,KAAKU,MAAMhB,8CAExEY,GACRA,EAAM8J,OAAO4C,2DAESC,GAClBA,EAAUjQ,8BAAgCgD,KAAKJ,MAAM5C,6BACrDgD,KAAKe,SAAS,CAAErB,SAAUuN,EAAUjQ,qEAG7BsD,GACO,UAAdA,EAAMyB,KACNzB,EAAM6J,iBACNnK,KAAKuM,gBAEc,WAAdjM,EAAMyB,MACXzB,EAAM6J,iBACNnK,KAAKwM,iDAGJ,IAAAtL,EAAAlB,KAECqB,EADcrB,KAAKJ,MAAjB0B,SACa,GACrB,OACIC,EAAA9E,EAAA+E,cAACC,EAAA,OAAD,CAAQ0H,KAAMnJ,KAAKJ,MAAMjC,mBAAoB2L,UAAU,GACnD/H,EAAA9E,EAAA+E,cAACC,EAAA,YAAD,CAAalE,GAAG,qBAAhB,yBACAgE,EAAA9E,EAAA+E,cAACC,EAAA,cAAD,KACIF,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMwC,WAAS,EAACvC,UAAWL,EAAEgL,KAAM/I,QAAS,GACxC/B,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACX5C,EAAA9E,EAAA+E,cAACC,EAAA,UAAD,CAAWmJ,WAAY,CAAElJ,UAAWL,EAAEwJ,YAActB,WAAS,EAACC,OAAO,QAAQjM,GAAG,SAASmM,UAAW,SAAApJ,GAAK,OAAIY,EAAK8J,eAAe1K,IAAQsJ,SAAU,SAAAtJ,GAAK,OAAIY,EAAKoL,iBAAiBhM,IAAQ4M,QAAS,SAAA5M,GAAK,OAAIY,EAAKiM,YAAY7M,IAAQsC,MAAO5C,KAAKU,MAAMhB,SAAUJ,KAAK,SAAS4F,WAAS,KAE5R3D,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACX5C,EAAA9E,EAAA+E,cAACC,EAAA,OAAD,CAAQqI,MAAM,UAAU3E,KAAK,QAAQf,QAAQ,YAAYc,WAAS,EAACjD,QAAS,SAAA3B,GAAK,OAAIY,EAAKqL,aAAajM,IAAQ+E,SAAUrF,KAAKU,MAAMhB,UAAY,GAAhJ,mBAIJ6B,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACX5C,EAAA9E,EAAA+E,cAACC,EAAA,OAAD,CAAQqI,MAAM,YAAY3E,KAAK,QAAQf,QAAQ,YAAYc,WAAS,EAACjD,QAAS,SAAA3B,GAAK,OAAIY,EAAKsL,aAAalM,KAAzG,qBAlDCwC,IAAMC,WAiE7BC,GAAqB,CAAE9E,uBAAsBuB,wBAKpCwD,eACXC,qBAxFW,SAACC,GAAD,OACXC,uBAAa,CACTgG,OAAQ,CACJmB,SAAU,KAEd8B,KAAM,CACF3G,aAAmC,EAArBvC,EAAMG,QAAQZ,MAEhCmI,WAAY,CACRrH,SAAUL,EAAMgI,WAAWC,GAAG5H,cAgFtCK,YAXoB,SAACC,GAAD,OAAAhE,OAAAkF,EAAA,EAAAlF,CAAA,GACjBgE,EAAMC,UAYLf,IAJOC,CAMb4J,IC5EIA,eACF,SAAAA,EAAYjN,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6M,IACdhN,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+M,GAAA1M,KAAAH,KAAMJ,KACDc,MAAQ,CAAChB,SAAS,GAFTG,gFAIDS,GACb,IAAMwM,EAAIzC,OAAO/J,EAAM8J,OAAOxH,OACzBmK,MAAMD,IAAI9M,KAAKe,SAAS,CAAErB,SAAUoN,yCAEhCxM,GACTN,KAAKJ,MAAM9B,2DAEFwC,GACTN,KAAKJ,MAAMJ,oBAAoBQ,KAAKJ,MAAMrC,wCAElC+C,GACRA,EAAM8J,OAAO4C,gDAEF1M,GACO,UAAdA,EAAMyB,KACNzB,EAAM6J,iBACNnK,KAAKuM,gBAEc,WAAdjM,EAAMyB,MACXzB,EAAM6J,iBACNnK,KAAKwM,iDAGJ,IAAAtL,EAAAlB,KAECqB,EADcrB,KAAKJ,MAAjB0B,SACa,GACrB,OACIC,EAAA9E,EAAA+E,cAACC,EAAA,OAAD,CAAQ0H,KAAMnJ,KAAKJ,MAAMhC,wBAAyB0L,UAAU,GACxD/H,EAAA9E,EAAA+E,cAACC,EAAA,cAAD,KACIF,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMwC,WAAS,EAACvC,UAAWL,EAAEgL,MAC7B9K,EAAA9E,EAAA+E,cAACC,EAAA,WAAD,CAAY2C,QAAQ,MAApB,2CAEA7C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMwC,WAAS,EAACX,QAAS,IACrB/B,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACX5C,EAAA9E,EAAA+E,cAACC,EAAA,OAAD,CAAQqI,MAAM,UAAU3E,KAAK,QAAQf,QAAQ,YAAYc,WAAS,EAACjD,QAAS,SAAA3B,GAAK,OAAIY,EAAKqL,aAAajM,IAAQ+E,SAAUrF,KAAKU,MAAMhB,UAAY,GAAhJ,QAIJ6B,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACX5C,EAAA9E,EAAA+E,cAACC,EAAA,OAAD,CAAQqI,MAAM,UAAU3E,KAAK,QAAQf,QAAQ,YAAYc,WAAS,EAACjD,QAAS,SAAA3B,GAAK,OAAIY,EAAKsL,aAAalM,KAAvG,kBA5CCwC,IAAMC,WA2D7BC,GAAqB,CAAExD,sBAAqB1B,uBAKnCmF,eACXC,qBAlFW,SAACC,GAAD,OACXC,uBAAa,CACTgG,OAAQ,CACJmB,SAAU,KAEd8B,KAAM,CACF3G,aAAmC,EAArBvC,EAAMG,QAAQZ,MAEhCmI,WAAY,CACRrH,SAAUL,EAAMgI,WAAWC,GAAG5H,cA0EtCK,YAXoB,SAACC,GAAD,OAAAhE,OAAAkF,EAAA,EAAAlF,CAAA,GACjBgE,EAAMC,UAYLf,IAJOC,CAMb4J,cCvFF,SAAS9D,GAAWnJ,GAChB,OAAO2B,EAAA9E,EAAA+E,cAACC,EAAA,MAAD3B,OAAAkJ,OAAA,CAAOC,UAAU,MAASrJ,IAGrC,IAMMwN,eACF,SAAAA,EAAYxN,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoN,IACdvN,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsN,GAAAjN,KAAAH,KAAMJ,KACDc,MAAQ,CAAEkH,OAAQ,GAFT/H,yFAIQoN,GAClBA,EAAUhQ,eAAiB+C,KAAKJ,MAAM3C,cAAgBgQ,EAAUrF,SAAW5H,KAAKJ,MAAMgI,QACtF5H,KAAKe,SAAS,CAAEsM,aAAcJ,EAAUhQ,aAAc2K,OAAQqF,EAAUrF,0CAGvE,IAAA1G,EAAAlB,KAECqB,EADYrB,KAAKJ,MAAhB0B,SACc,GACfsG,EAAS5H,KAAKU,OAASV,KAAKU,MAAMkH,OAASyC,OAAOrK,KAAKU,MAAMkH,QAAU,EAC7E,OAAOrG,EAAA9E,EAAA+E,cAACC,EAAA,OAAD,CAAQ0H,KAAMnJ,KAAKJ,MAAM+H,cAAe0B,oBAAqBN,GAAYO,SAAS,MACrF/H,EAAA9E,EAAA+E,cAACC,EAAA,YAAD,CAAalE,GAAG,qBAAhB,2BACAgE,EAAA9E,EAAA+E,cAACC,EAAA,cAAD,CAAeC,UAAWL,EAAEiM,OACxB/L,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMwC,WAAS,GACX1C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACX5C,EAAA9E,EAAA+E,cAACC,EAAA,WAAD,CAAY2C,QAAQ,MAApB,sBAEJ7C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACX5C,EAAA9E,EAAA+E,cAACC,EAAA,WAAD,CAAY2C,QAAQ,MAAMpE,KAAKJ,MAAM3C,gBAG7CsE,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMwC,WAAS,GACX1C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACX5C,EAAA9E,EAAA+E,cAACC,EAAA,WAAD,CAAY2C,QAAQ,MAApB,iBAEJ7C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACf5C,EAAA9E,EAAA+E,cAACC,EAAA,UAAD,CACI8H,WAAS,EACTC,OAAO,QACPjM,GAAG,SACHkM,MAAM,oBACNnK,KAAK,SACLsD,MAAO5C,KAAKU,MAAMkH,OAClBsF,QAAS,SAAC5M,GAAD,OAAWY,EAAKiM,YAAY7M,IACrCyK,WAAY,SAACzK,GAAD,OAAWY,EAAKqM,WAAWjN,IACvCsJ,SAAU,SAACtJ,GAAD,OAAWY,EAAKsM,aAAalN,QAK/CiB,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMwC,WAAS,GACX1C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACX5C,EAAA9E,EAAA+E,cAACC,EAAA,WAAD,CAAY2C,QAAQ,MAApB,aAEJ7C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACX5C,EAAA9E,EAAA+E,cAACC,EAAA,WAAD,CAAY2C,QAAQ,MAAK7C,EAAA9E,EAAA+E,cAACiM,GAAA,EAAD,CAAkB7K,MAAOgF,EAAS5H,KAAKJ,MAAMgI,OAAS,EAAKA,EAAS5H,KAAKJ,MAAMgI,OAAS8F,MAAM,WAAWC,SAAS,WAGnJpM,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMwC,WAAS,GACX1C,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACX5C,EAAA9E,EAAA+E,cAACC,EAAA,OAAD,CAAQqI,MAAM,UAAU3E,KAAK,QAAQf,QAAQ,YAAYiB,SAAUuC,EAAS5H,KAAKJ,MAAMgI,OAAQ3F,QAAS,SAAC3B,GAAD,OAAWY,EAAKqL,aAAajM,KAArI,mBAIJiB,EAAA9E,EAAA+E,cAACC,EAAA,KAAD,CAAMyC,MAAI,EAACC,GAAI,GACX5C,EAAA9E,EAAA+E,cAACC,EAAA,OAAD,CAAQqI,MAAM,YAAY3E,KAAK,QAAQf,QAAQ,YAAYnC,QAAS,SAAC3B,GAAD,OAAWY,EAAKsL,aAAalM,KAAjG,mDAQPA,GACTN,KAAKJ,MAAMoI,uDAEF1H,GACTN,KAAKJ,MAAMgO,UAAU5N,KAAKJ,MAAMrC,GAAIyC,KAAKU,MAAMkH,6CAEtCtH,GACTN,KAAKe,SAAS,CAAC6G,OAAQtH,EAAM8J,OAAOxH,2CAE7BtC,GACW,UAAdA,EAAMyB,KACNzB,EAAM6J,iBACNnK,KAAKuM,gBAEc,WAAdjM,EAAMyB,MACXzB,EAAM6J,iBACNnK,KAAKwM,oDAGDlM,GACRA,EAAM8J,OAAO4C,gBAvFKlK,IAAMC,WAgG1BC,GAAqB,CAAE4K,UP1FJ,SAACrQ,EAAYqK,GAAb,OAAgC,SAAC5I,EAAUC,GAChEwH,IAAMjI,KAAKjC,EAAoB,kBAAmB,CAACsR,UAAUtQ,EAAIqK,WAASkG,KAAK,SAAAC,GAC3E/O,EAAS,CACLM,KAAM,kBAGVN,EAAS,CACLM,KAAM3C,EAAQkB,UOmFcmK,oBAKzB/E,eACXC,qBA5GW,SAACC,GAAD,OAAkBC,uBAAa,CAC1CkK,MAAO,CACH/C,SAAU,SA2Gd1G,YAZoB,SAACC,GAAD,OAAAhE,OAAAkF,EAAA,EAAAlF,CAAA,GACjBgE,EAAMkK,QADW,CAEpB/Q,aAAc6G,EAAMC,QAAQ9G,gBAYxB+F,IAJOC,CAMbmK,ICvFIa,GAAS,CACXC,SAAU,MACVC,SAAU,KACVC,YAAa,KACbC,eAAgB,KAChBC,IAAK,OAGHC,eAEF,SAAAA,EAAY3O,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuO,IACf1O,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyO,GAAApO,KAAAH,KAAMJ,KAFV4O,cACmB,EAAA3O,EAUnB4O,OAAS,CACLpG,kBAAmB,SAAA/H,GACXT,EAAKD,MAAMsI,MAAMxK,QAAQmC,EAAKD,MAAM8H,qBAE5Cc,qBAAsB,SAAClI,GACfT,EAAKD,MAAMvC,oBACXiD,EAAM6J,iBACNtK,EAAKD,MAAM3B,uBAGnBwK,UAAW,SAACnI,GACJT,EAAKD,MAAMtC,SACXgD,EAAM6J,iBACNtK,EAAKD,MAAMmI,cAAclI,EAAKD,MAAMmE,QAAQxG,MAGpDmL,wBAAyB,SAACpI,GAClBT,EAAKD,MAAMxC,gBACXkD,EAAM6J,iBACNtK,EAAKD,MAAMlB,sBAAsBmB,EAAKD,MAAMmE,QAAQxG,GAAIsC,EAAKD,MAAMmE,QAAQhH,qBAAuB,KAG1G4L,oBAAqB,SAACrI,GACdT,EAAKD,MAAMzC,kBAAkB0C,EAAKD,MAAM5B,qBAEhD4K,iBAAkB,SAACtI,GACXT,EAAKD,MAAMsI,MAAM3B,eAAe1G,EAAKD,MAAMmH,gBAEnD8B,gBAAiB,SAACvI,GACVT,EAAKD,MAAMsI,MAAM5B,eACbzG,EAAKD,MAAMsI,MAAMhC,UAAWrG,EAAKD,MAAMsH,yBACtCrH,EAAKD,MAAM4G,oBAvCxB3G,EAAK2O,SAAW,CACZN,SAAUrO,EAAK4O,OAAOpG,kBACtB8F,SAAUtO,EAAK4O,OAAOjG,qBACtB4F,YAAavO,EAAK4O,OAAO/F,wBACzB2F,eAAgBxO,EAAK4O,OAAO9F,oBAC5B2F,IAAKzO,EAAK4O,OAAOhG,WAPN5I,qHA6CV,IACGyB,EAAYtB,KAAKJ,MAAjB0B,QACR,OACIC,EAAA9E,EAAA+E,cAAA,WACID,EAAA9E,EAAA+E,cAACC,EAAA,OAAD,CAAQgC,SAAS,SAASqG,MAAM,WAC5BvI,EAAA9E,EAAA+E,cAACC,EAAA,QAAD,CAAS2C,QAAQ,SACb7C,EAAA9E,EAAA+E,cAACC,EAAA,WAAD,CAAY2C,QAAQ,KAAK0F,MAAM,WAA/B,iBAKRvI,EAAA9E,EAAA+E,cAAA,OAAKE,UAAWJ,EAAQoN,QACpBnN,EAAA9E,EAAA+E,cAACmN,GAAA,QAAD,CAASV,OAAQA,GAAQO,SAAUxO,KAAKwO,UACpCjN,EAAA9E,EAAA+E,cAACC,EAAA,MAAD,CAAOC,UAAWJ,EAAQgM,OACtB/L,EAAA9E,EAAA+E,cAACoN,GAAY5O,KAAKyO,SAEtBlN,EAAA9E,EAAA+E,cAACC,EAAA,MAAD,CAAOC,UAAWJ,EAAQgM,OACtB/L,EAAA9E,EAAA+E,cAACqN,GAAD,OAEJtN,EAAA9E,EAAA+E,cAACC,EAAA,MAAD,CAAOC,UAAWJ,EAAQgM,OACtB/L,EAAA9E,EAAA+E,cAACsN,GAAD,QAGRvN,EAAA9E,EAAA+E,cAACuN,GAAD,MACAxN,EAAA9E,EAAA+E,cAACwN,GAAD,MACAzN,EAAA9E,EAAA+E,cAACyN,GAAD,MACA1N,EAAA9E,EAAA+E,cAAC0N,GAAD,MACA3N,EAAA9E,EAAA+E,cAAC2N,GAAD,eA1EGrM,IAAMC,WAoFvBC,GAAqB,CACvB+E,iBACAL,qBACA1J,oBACAC,qBACA8I,gBACAP,kBACAE,mBACAQ,0BACAxI,wBACAJ,qBAMW2E,eACXC,qBAhIW,SAACC,GAAD,OACXC,uBAAa,CACTsL,OAAO5O,OAAA2K,EAAA,EAAA3K,CAAA,CACHsP,MAAO,OACPlE,WAAiC,EAArB/H,EAAMG,QAAQZ,KAC1BoG,YAAkC,EAArB3F,EAAMG,QAAQZ,KAC3B+C,UAAgC,EAArBtC,EAAMG,QAAQZ,MACxBS,EAAMkM,YAAYC,GAAG,KAA4B,EAArBnM,EAAMG,QAAQZ,KAAW,GAAK,CACvDwI,WAAiC,EAArB/H,EAAMG,QAAQZ,KAC1BoG,YAAkC,EAArB3F,EAAMG,QAAQZ,OAGnC6M,QAAS,CACL9J,UAAgC,EAArBtC,EAAMG,QAAQZ,MAE7B4K,MAAO,CACH5H,aAAmC,EAArBvC,EAAMG,QAAQZ,UAiHpCmB,YAtBoB,SAACC,GAAD,OAAAhE,OAAAkF,EAAA,EAAAlF,CAAA,GACjBgE,IAuBCd,IAJOC,CAMbsL,wECpIaiB,GAPKC,2BAA4B,CAC5CzB,QTuBW,WAAkE,IAAjEtN,EAAiEgP,UAAA7O,OAAA,QAAA8O,IAAAD,UAAA,GAAAA,UAAA,GAA3C7S,GAAc+S,EAA6BF,UAAA7O,OAAA,EAAA6O,UAAA,QAAAC,EAC7E,OAAQC,EAAOtQ,MACX,KAAK3C,EAAQkB,IACT,OAAOiC,OAAAkF,EAAA,EAAAlF,CAAA,GACAY,EACAkP,EAAOrQ,QAAQoN,KAFtB,CAGIhF,eAAe,IAEvB,KAAKhL,EAAQkB,IAKb,KAAKA,GACD,OAAOiC,OAAAkF,EAAA,EAAAlF,CAAA,GACAY,EADP,CAEIiH,eAAe,IAK3B,OAAOjH,GS3CPqD,QhBuEU,WAAsE,IAArErD,EAAqEgP,UAAA7O,OAAA,QAAA8O,IAAAD,UAAA,GAAAA,UAAA,GAA9C7S,EAAc+S,EAAgCF,UAAA7O,OAAA,EAAA6O,UAAA,QAAAC,EAChF,OAAQC,EAAOtQ,MACX,KAAKzB,EACD,IACIgS,EADAC,EAAgBpP,EAAM5D,MAAMsC,UAAU,SAAC8E,GAAD,OAAuBA,EAAK3G,KAAOmD,EAAM3D,sBAInF,OAFI+S,EAAgB,GAChBD,IACG/P,OAAAkF,EAAA,EAAAlF,CAAA,GACAY,EADP,CAEI3D,oBAAqB8S,EAAW,EAAIA,EAAWnP,EAAM5D,MAAM+S,GAAUtS,KAG7E,KAAKM,EACD,IAAIiS,EAIJ,OAHID,EADAC,EAAgBpP,EAAM5D,MAAMsC,UAAU,SAAC8E,GAAD,OAAuBA,EAAK3G,KAAOmD,EAAM3D,sBAE/E+S,EAAgBpP,EAAM5D,MAAM+D,OAAS,GACrCgP,IACG/P,OAAAkF,EAAA,EAAAlF,CAAA,GACAY,EADP,CAEI3D,oBAAqB8S,EAAW,EAAIA,EAAWnP,EAAM5D,MAAM+S,GAAUtS,KAG7E,KAAKM,EACD,IAAMqG,EAAOxD,EACR5D,MACAiT,KAAK,SAAC7L,GACH,OAAOA,EAAK3G,IAAMmD,EAAM3D,sBAE1B+P,EAAI5I,EACJA,EAAKxE,SACL,EACN,OAAOI,OAAAkF,EAAA,EAAAlF,CAAA,GACAY,EADP,CAEI/C,oBAAoB,EACpBX,4BAA6B8P,IAErC,KAAKjP,EACD,OAAOiC,OAAAkF,EAAA,EAAAlF,CAAA,GACAjD,GAEX,KAAKgB,EACD,OAAOiC,OAAAkF,EAAA,EAAAlF,CAAA,GACAY,EADP,CAEI9C,yBAAyB,IAEjC,KAAKC,EACD,OAAOiC,OAAAkF,EAAA,EAAAlF,CAAA,GACAY,EADP,CAEI9C,yBAAyB,IAEjC,KAAKC,EACD,OAAOiC,OAAAkF,EAAA,EAAAlF,CAAA,GACAY,EADP,CAEI/C,oBAAoB,IAE5B,KAAKE,EACD,OAAOiC,OAAAkF,EAAA,EAAAlF,CAAA,GACAY,EADP,CAEI3D,oBAAqB6S,EAAOrQ,UAEpC,KAAK5C,EAAQkB,GACT,OAAOiC,OAAAkF,EAAA,EAAAlF,CAAA,GACAjD,GAEX,KAAKF,EAAQkB,GACT,OAAOiC,OAAAkF,EAAA,EAAAlF,CAAA,GACAY,EACAkP,EAAOrQ,QAAQoN,MAE1B,KAAKhQ,EAAQkB,GACT,IAEId,GAFAgH,EAAU6L,EAAOrQ,QAAQoN,MAEK7P,OAASiH,EAAQjH,MAAM+D,OAAS,EAC5DkD,EAAQjH,MAAMiH,EAAQjH,MAAM+D,OAAS,GAAGtD,GACxC,KACN,OAAOuC,OAAAkF,EAAA,EAAAlF,CAAA,GACAY,EACAkP,EAAOrQ,QAAQoN,KAFtB,CAGI5P,wBAER,KAAKJ,EAAQkB,GACT,OAAOiC,OAAAkF,EAAA,EAAAlF,CAAA,GACAY,EACAkP,EAAOrQ,QAAQoN,KAFtB,CAGIhP,oBAAoB,IAE5B,KAAKhB,EAAQkB,GAUb,KAAKlB,EAAQkB,GACT,IAAIkG,EAIJ,OAHIhH,GADAgH,EAAU6L,EAAOrQ,QAAQoN,MACK7P,OAASiH,EAAQjH,MAAM+D,OAAS,EAC5DkD,EAAQjH,MAAMiH,EAAQjH,MAAM+D,OAAS,GAAGtD,GACxC,KACCuC,OAAAkF,EAAA,EAAAlF,CAAA,GACAY,EACAkP,EAAOrQ,QAAQoN,KAFtB,CAGI5P,wBAMZ,OAAO2D,GgBpLPxB,QVUW,WAAmE,IAAlEwB,EAAkEgP,UAAA7O,OAAA,QAAA8O,IAAAD,UAAA,GAAAA,UAAA,GAA5C7S,GAAc+S,EAA8BF,UAAA7O,OAAA,EAAA6O,UAAA,QAAAC,EAC9E,OAAQC,EAAOtQ,MACX,KAAczB,GPzBP,IAAMmS,IO0BT,OAAOlQ,OAAAkF,EAAA,EAAAlF,CAAA,GACAY,EADP,CAEIxD,WAAW,IAGnB,KAAKP,EAAQkB,IACT,OAAOiC,OAAAkF,EAAA,EAAAlF,CAAA,GACAY,EADP,CAEIvB,SAAUyQ,EAAOrQ,QAAQoN,KACzBzP,WAAW,IAGnB,KAAKV,EAAQqB,IACT,OAAOiC,OAAAkF,EAAA,EAAAlF,CAAA,GACAY,EADP,CAEI0G,aAAcwI,EAAOrQ,QACrBrC,WAAW,IAGnB,KAAKW,GACD,OAAOiC,OAAAkF,EAAA,EAAAlF,CAAA,GACAY,EADP,CAEIyG,mBAAmB,EACnBI,UAAW,KAGnB,KAAK1J,GACD,OAAOiC,OAAAkF,EAAA,EAAAlF,CAAA,GACAY,EADP,CAEIyG,mBAAmB,IAG3B,KAAKtJ,GACD,OAAOiC,OAAAkF,EAAA,EAAAlF,CAAA,GACAY,EADP,CAEIyG,mBAAmB,EACnBE,gBAAiBuI,EAAOrQ,UAMpC,OAAOmB,GUtDPwH,MXsCW,WAA+D,IAA9DxH,EAA8DgP,UAAA7O,OAAA,QAAA8O,IAAAD,UAAA,GAAAA,UAAA,GAA1C7S,GAAc+S,EAA4BF,UAAA7O,OAAA,EAAA6O,UAAA,QAAAC,EAC1E,OAAQC,EAAOtQ,MACX,KAAK3C,EAAQkB,IACT,OAAOiC,OAAAkF,EAAA,EAAAlF,CAAA,GACAY,EACAkP,EAAOrQ,QAAQoN,KAFtB,CAGItG,YAAY,EACZC,cAAc,IAEtB,KAAKzI,GACL,KAAKA,GACD,OAAOiC,OAAAkF,EAAA,EAAAlF,CAAA,GACAY,EADP,CAEI2F,YAAY,IAEpB,KAAK1J,EAAQkB,IACT,OAAOiC,OAAAkF,EAAA,EAAAlF,CAAA,GACAY,EACAkP,EAAOrQ,QAAQoN,KAFtB,CAGIrG,cAAc,EACdC,eAAe,EACfF,YAAY,IAEpB,KAAK1J,EAAQkB,IACT,IAAMqK,EAAQ0H,EAAOrQ,QAAQoN,KAC7B,OAAO7M,OAAAkF,EAAA,EAAAlF,CAAA,GACAY,EACAwH,EAFP,CAGI3B,cAAe2B,EAAMxK,OACrB4I,aAAc4B,EAAMhC,YAAcgC,EAAMxK,SAEhD,KAAKlB,EAAQqB,IACT,OAAOiC,OAAAkF,EAAA,EAAAlF,CAAA,GACAY,EADP,CAEIhD,QAAQ,EACR4I,cAAc,IAEtB,KAAK3J,EAAQkB,IACT,OAAOiC,OAAAkF,EAAA,EAAAlF,CAAA,GACAY,EACAkP,EAAOrQ,QAAQoN,KAFtB,CAGItG,YAAY,EACZF,gBAAgB,EAChBC,cAAc,IAEtB,KAAKvI,GACD,OAAOiC,OAAAkF,EAAA,EAAAlF,CAAA,GACAY,EADP,CAEI2F,YAAY,EACZF,gBAAgB,EAChBC,cAAc,IAEtB,KAAKvI,GACD,OAAOiC,OAAAkF,EAAA,EAAAlF,CAAA,GACAY,EADP,CAEI2F,YAAY,EACZD,cAAc,EACdD,gBAAgB,IAExB,QACI,OAAOzF,MYzGboD,GCMW,SAACjH,GAAD,OAA+BoT,uBAAYT,GAAa3S,EAAcqT,+BAAoBC,2BAAgBC,cAAWC,KAAQC,QDNhIC,GAORC,oLACK,IACClP,EAAYtB,KAAKJ,MAAjB0B,QACR,OACIC,EAAA9E,EAAA+E,cAAA,OAAKE,UAAWJ,EAAQmP,MACxBlP,EAAA9E,EAAA+E,cAACkP,EAAA,EAAD,CAAU5M,MAAOA,IACjBvC,EAAA9E,EAAA+E,cAACiM,GAAA,EAAD,CAAckD,OAAO,KAAKC,cAAc,MACpCrP,EAAA9E,EAAA+E,cAACqP,EAAA,EAAD,KACItP,EAAA9E,EAAA+E,cAACsP,EAAA,EAAD,CAAOC,KAAK,IAAIxO,UAAWgM,gBARzBxL,aAiBHG,wBAtBA,SAACC,GAAD,OAAkBC,uBAAa,CAC5CqN,KAAM,CACJO,SAAU,MAoBC9N,CAAmBsN,IEtBdS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DChBN,IAMeC,4BAAe,CAAEC,QANhB,CACdC,QAAS,CAAEC,KAAM,WACjBC,UAAW,CAAED,KAAM,WACnBE,MAAO,CAAEF,KAAM,cCGjBG,IAASC,OAAOtQ,EAAA9E,EAAA+E,cAACsQ,EAAA,iBAAD,CAAkB3O,MAAOA,IAAO5B,EAAA9E,EAAA+E,cAACuQ,GAAD,OAA4BC,SAASC,eAAe,SFiI9F,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtE,KAAK,SAAAuE,GACjCA,EAAaC","file":"static/js/main.b6fb6062.chunk.js","sourcesContent":["export const config = {\r\n    apiAddress: process.env.NODE_ENV === \"production\" ? \"/\" : \"http://localhost:5000/\"\r\n}","import { REJECTED, PENDING, FULFILLED } from \"redux-promise-middleware\";\r\n\r\nexport const FETCHING = (a: string) => {\r\n    return a + \"_\" + PENDING;\r\n}\r\n\r\nexport const FAILURE = (a: string) => {\r\n    return a + \"_\" + REJECTED;\r\n}\r\n\r\nexport const SUCCESS = (a: string) => {\r\n    return a + \"_\" + FULFILLED;\r\n}","import ReceiptItem from \"../Models/ReceiptItem\";\r\nimport {config} from \"../config\";\r\nimport axios from \"axios\";\r\nimport {createAction} from \"redux-actions\";\r\nimport {SUCCESS} from \"../Actions/Utils\";\r\nimport {IRootState} from \"./Index\";\r\nimport Product from \"../Models/Product\";\r\n\r\nconst initialState = {\r\n    items: []as ReceiptItem[],\r\n    selectedReceiptItem: -1,\r\n    selectedReceiptItemQuantity: 1,\r\n    receiptTotal: \"0 zł\",\r\n    isLoading: false,\r\n    canCancelReceipt: false,\r\n    canRemoveItem: false,\r\n    canChangeQuantity: false,\r\n    canPay: false,\r\n    id: 0,\r\n    isCancelled: false,\r\n    isClosed: false,\r\n    isOpen: false,\r\n    showQuantityDialog: false,\r\n    showReceiptCancelDialog: false\r\n};\r\n\r\nconst ACTIONS = {\r\n    ADD_ITEM: \"receipt/ADD_ITEM\",\r\n    CREATERECEIPT_SUBMIT: \"receipt/CREATERECEIPT_SUBMIT\",\r\n    GETCURRENTRECEIPT: \"receipt/GETCURRENTRECEIPT\",\r\n    REMOVE_ITEM: \"receipt/REMOVE_ITEM\",\r\n    DELETERECEIPT_SUBMIT: \"receipt/DELETERECEIPT_SUBMIT\",\r\n    DELETERECEIPT_SHOW: \"receipt/DELETERECEIPT_SHOW\",\r\n    CHANGEQUANTITY_SUBMIT: \"receipt/CHANGEQUANTITY_SUBMIT\",\r\n    CHANGEQUANTITY_SHOW: \"receipt/CHANGEQUANTITY_SHOW\",\r\n    SELECTRECEIPTITEM: \"receipt/SELECTRECEIPTITEM\",\r\n    CHANGEQUANTITY_CANCEL: \"receipt/CHANGEQUANTITY_CANCEL\",\r\n    DELETERECEIPT_CANCEL: \"receipt/DELETERECEIPT_CANCEL\",\r\n    SELECTNEXTRECEIPTITEM: \"receipt/SELECTNEXTRECEIPTITEM\",\r\n    SELECTPREVRECEIPTITEM: \"receipt/SELECTPREVRECEIPTITEM\",\r\n    RESET: \"receipt/RESET\"\r\n};\r\nexport const deleteReceiptCancel = createAction(ACTIONS.DELETERECEIPT_CANCEL);\r\nexport const deleteReceiptShow = createAction(ACTIONS.DELETERECEIPT_SHOW);\r\nexport const changeQuantityShow = createAction(ACTIONS.CHANGEQUANTITY_SHOW);\r\nexport const changeQuantityCancel = createAction(ACTIONS.CHANGEQUANTITY_CANCEL);\r\nexport const selectReceiptItem = createAction(ACTIONS.SELECTRECEIPTITEM, (id : number) => id);\r\nexport const selectNextReceiptItem = createAction(ACTIONS.SELECTNEXTRECEIPTITEM);\r\nexport const selectPrevReceiptItem = createAction(ACTIONS.SELECTPREVRECEIPTITEM);\r\nexport const createReceiptSubmit = createAction(ACTIONS.CREATERECEIPT_SUBMIT, () => {\r\n    return axios.post(config.apiAddress + \"api/receipt\");\r\n});\r\nexport const getCurrentReceipt = createAction(ACTIONS.GETCURRENTRECEIPT, () => {\r\n    return axios.get(config.apiAddress + \"api/receipt\");\r\n});\r\nexport const removeItemFromReceipt = createAction(ACTIONS.REMOVE_ITEM, (receiptId : number, receiptItemId : number) => {\r\n    return axios.delete(config.apiAddress + \"api/receipt/\" + receiptId + \"/\" + receiptItemId);\r\n});\r\n// export const addItemToReceipt = createAction(ACTIONS.ADD_ITEM, (ean: string)\r\n// => {     return axios.post(config.apiAddress + \"api/receipt/\" + ean); });\r\nexport const addItemToReceipt = (ean : string) => (dispatch, getState : () => IRootState) => {\r\n    var products = getState().product.products;\r\n    var found = products.findIndex((element : Product) => {\r\n        return element.ean == ean;\r\n    }) > -1;\r\n    if (found) {\r\n        dispatch({\r\n            type: ACTIONS.ADD_ITEM,\r\n            payload: axios.post(config.apiAddress + \"api/receipt/\" + ean)\r\n        });\r\n    } else {\r\n        dispatch({type: \"products/SHOW_PRODUCTS_DIALOG\"})\r\n    }\r\n};\r\nexport const deleteReceiptSubmit = createAction(ACTIONS.DELETERECEIPT_SUBMIT, (receiptId : number) => {\r\n    return axios.delete(config.apiAddress + \"api/receipt/\" + receiptId);\r\n});\r\nexport const changeQuantitySubmit = createAction(ACTIONS.CHANGEQUANTITY_SUBMIT, (id : number, quantity : number) => {\r\n    return axios.post(config.apiAddress + \"api/receipt/change\", {\r\n        id: id,\r\n        quantity: quantity\r\n    });\r\n});\r\n\r\nexport type ReceiptState = Readonly < typeof initialState >;\r\n\r\nexport default(state : ReceiptState = initialState, action : any) : ReceiptState => {\r\n    switch (action.type) {\r\n        case ACTIONS.SELECTPREVRECEIPTITEM:\r\n            var selectedIndex = state.items.findIndex((item: ReceiptItem) => item.id === state.selectedReceiptItem);\r\n            var newIndex = selectedIndex;\r\n            if (selectedIndex > 0)\r\n                newIndex--;\r\n            return {\r\n                ...state,\r\n                selectedReceiptItem: newIndex < 0 ? newIndex : state.items[newIndex].id\r\n            };\r\n            break;\r\n        case ACTIONS.SELECTNEXTRECEIPTITEM:\r\n            var selectedIndex = state.items.findIndex((item: ReceiptItem) => item.id === state.selectedReceiptItem);\r\n            var newIndex = selectedIndex;\r\n            if (selectedIndex < state.items.length - 1)\r\n                newIndex++;\r\n            return {\r\n                ...state,\r\n                selectedReceiptItem: newIndex < 0 ? newIndex : state.items[newIndex].id\r\n            };\r\n            break;\r\n        case ACTIONS.CHANGEQUANTITY_SHOW:\r\n            const item = state\r\n                .items\r\n                .find((item : ReceiptItem) => {\r\n                    return item.id == state.selectedReceiptItem\r\n                });\r\n            const q = item\r\n                ? item.quantity\r\n                : 1;\r\n            return {\r\n                ...state,\r\n                showQuantityDialog: true,\r\n                selectedReceiptItemQuantity: q\r\n            }\r\n        case ACTIONS.RESET:\r\n            return {\r\n                ...initialState\r\n            }\r\n        case ACTIONS.DELETERECEIPT_SHOW:\r\n            return {\r\n                ...state,\r\n                showReceiptCancelDialog: true\r\n            }\r\n        case ACTIONS.DELETERECEIPT_CANCEL:\r\n            return {\r\n                ...state,\r\n                showReceiptCancelDialog: false\r\n            }\r\n        case ACTIONS.CHANGEQUANTITY_CANCEL:\r\n            return {\r\n                ...state,\r\n                showQuantityDialog: false\r\n            }\r\n        case ACTIONS.SELECTRECEIPTITEM:\r\n            return {\r\n                ...state,\r\n                selectedReceiptItem: action.payload\r\n            }\r\n        case SUCCESS(ACTIONS.DELETERECEIPT_SUBMIT):\r\n            return {\r\n                ...initialState\r\n            };\r\n        case SUCCESS(ACTIONS.CREATERECEIPT_SUBMIT):\r\n            return {\r\n                ...state,\r\n                ...action.payload.data\r\n            };\r\n        case SUCCESS(ACTIONS.GETCURRENTRECEIPT):\r\n            var receipt = action.payload.data as ReceiptState;\r\n\r\n            var selectedReceiptItem = receipt.items && receipt.items.length > 0\r\n                ? receipt.items[receipt.items.length - 1].id\r\n                : null;\r\n            return {\r\n                ...state,\r\n                ...action.payload.data,\r\n                selectedReceiptItem\r\n            };\r\n        case SUCCESS(ACTIONS.CHANGEQUANTITY_SUBMIT):\r\n            return {\r\n                ...state,\r\n                ...action.payload.data,\r\n                showQuantityDialog: false\r\n            };\r\n        case SUCCESS(ACTIONS.ADD_ITEM):\r\n            var receipt = action.payload.data as ReceiptState;\r\n            var selectedReceiptItem = receipt.items && receipt.items.length > 0\r\n                ? receipt.items[receipt.items.length - 1].id\r\n                : null;\r\n            return {\r\n                ...state,\r\n                ...action.payload.data,\r\n                selectedReceiptItem\r\n            };\r\n        case SUCCESS(ACTIONS.REMOVE_ITEM):\r\n            var receipt = action.payload.data as ReceiptState;\r\n            var selectedReceiptItem = receipt.items && receipt.items.length > 0\r\n                ? receipt.items[receipt.items.length - 1].id\r\n                : null;\r\n            return {\r\n                ...state,\r\n                ...action.payload.data,\r\n                selectedReceiptItem\r\n            };\r\n\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n};\r\n","import React, { createRef } from \"react\";\r\nimport { Table, TableHead, TableRow, TableCell, TableBody, Theme, createStyles, withStyles, StyledComponentProps } from \"@material-ui/core\";\r\nimport { compose } from \"recompose\";\r\nimport { connect } from \"react-redux\";\r\nimport { IRootState } from \"../Reducers/Index\";\r\nimport { selectReceiptItem, selectNextReceiptItem, selectPrevReceiptItem } from \"../Reducers/ReceiptReducer\";\r\nimport ReceiptItem from \"../Models/ReceiptItem\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    table: {\r\n        paddingLeft: theme.spacing.unit,\r\n        paddingRight: theme.spacing.unit        \r\n    },\r\n    cell: {\r\n        fontSize: \"1rem\"\r\n    },\r\n    headerCell: { \r\n        fontSize: \"1rem\",\r\n        position: \"sticky\",\r\n        top: 0,\r\n        zIndex: 10,\r\n        backgroundColor: \"white\"\r\n    }\r\n});\r\ntype ReceiptDetailsState = {\r\n    selectedId: number | null;\r\n}\r\ntype BaseProps = {\r\n    rows: ReceiptItem[]\r\n}\r\n\r\nclass ReceiptDetails extends React.Component<ReceiptDetailsProps, ReceiptDetailsState> {\r\n    hot_keys: any;\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            selectedId: this.props.rows.length || null\r\n        }\r\n    }\r\n    componentWillReceiveProps(newProps: any){\r\n        if  (newProps !== this.props){\r\n            if (this.props.rows && this.props.rows.length > 0)\r\n                this.setState({selectedId: this.props.rows.length});\r\n            else    \r\n                this.setState({selectedId: null});\r\n        }\r\n    }\r\n    handleNext = (event: any) => {\r\n        this.props.selectNextReceiptItem();\r\n    }\r\n    handlePrev = (event: any) => {\r\n        this.props.selectPrevReceiptItem();\r\n    }\r\n    componentDidMount() {\r\n        if (this.el && this.el.current)\r\n            this.el.current.scrollIntoView();\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.el && this.el.current)\r\n            this.el.current.scrollIntoView();\r\n    }\r\n    selectRow(id: number) {\r\n        return (event: any) => {\r\n            this.props.selectReceiptItem(id);\r\n        }\r\n    }\r\n    el = createRef<HTMLDivElement>();\r\n    render() {\r\n        const { rows, classes } = this.props;\r\n        const c = classes || {};\r\n        return <div><Table className={c.table}>\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell className={c.headerCell}>Lp.</TableCell>\r\n                    <TableCell className={c.headerCell}>EAN</TableCell>\r\n                    <TableCell className={c.headerCell}>Nazwa</TableCell>\r\n                    <TableCell className={c.headerCell}>Ilość</TableCell>\r\n                    <TableCell className={c.headerCell}>Jm</TableCell>\r\n                    <TableCell className={c.headerCell}>Cena</TableCell>\r\n                    <TableCell className={c.headerCell}>Wartość</TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {rows && rows.map((row: any) => {\r\n                    return (\r\n                        <TableRow key={row.id} hover={true} onClick={this.selectRow(row.id).bind(this)} selected={this.props.selectedReceiptItem == row.id}>\r\n                            <TableCell className={c.cell}>{row.ordinalNumber + \".\"}</TableCell>\r\n                            <TableCell className={c.cell} component=\"th\" scope=\"row\">{row.ean}</TableCell>\r\n                            <TableCell className={c.cell}>{row.name}</TableCell>\r\n                            <TableCell className={c.cell}>{row.quantity}</TableCell>\r\n                            <TableCell className={c.cell}>{row.unit}</TableCell>\r\n                            <TableCell className={c.cell}>{row.price}</TableCell>\r\n                            <TableCell className={c.cell}>{row.value}</TableCell>\r\n                        </TableRow>\r\n                    );\r\n                })}\r\n            </TableBody>\r\n        </Table>\r\n        <div ref={this.el}/>\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store: IRootState) => ({\r\n    selectedReceiptItem: store.receipt.selectedReceiptItem\r\n});\r\n\r\nconst mapDispatchToProps = { selectReceiptItem, selectNextReceiptItem, selectPrevReceiptItem };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\ntype ReceiptDetailsProps = StyledComponentProps & StateProps & DispatchProps & BaseProps;\r\nexport default compose<ReceiptDetailsProps, BaseProps>(\r\n    withStyles(styles),\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )\r\n)(ReceiptDetails);","import React from \"react\";\r\nimport { List, ListItem, ListItemText, createStyles, withStyles, Theme, Grid, Typography } from \"@material-ui/core\";\r\n\r\nconst styles = (theme: Theme) => createStyles({});\r\n\r\nclass ReceiptSummary extends React.Component<any> {\r\n    render() {\r\n        return <List>\r\n            <ListItem>\r\n                <Grid container>\r\n                <Grid item md={6}>\r\n                <Typography variant=\"h6\">Suma</Typography>\r\n                </Grid>\r\n                <Grid item md={6}>\r\n                <Typography variant=\"h2\">{this.props.receiptTotal}</Typography>\r\n                </Grid>\r\n                </Grid>\r\n            </ListItem>\r\n        </List>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ReceiptSummary)","import React from \"react\";\r\nimport { Grid, withStyles, Theme, createStyles, StyledComponentProps } from \"@material-ui/core\";\r\nimport ReceiptDetails from \"./ReceiptDetails\";\r\nimport ReceiptSummary from \"./ReceiptSummary\";\r\nimport { IRootState } from \"../Reducers/Index\";\r\nimport { compose } from \"recompose\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    summaryGrid: {\r\n        borderLeft: \"1px solid lightgray\"\r\n    },\r\n    detailsGrid: {\r\n        padding: theme.spacing.unit * 1,\r\n        minHeight: \"500px\",\r\n        maxHeight: \"500px\",\r\n        overflowY: \"scroll\",\r\n        backgroundColor: \"white\"\r\n    }\r\n});\r\n\r\ntype ReceiptViewState = {\r\n    selectedEan: string;\r\n}\r\nclass ReceiptView extends React.Component<ReceiptViewProps, ReceiptViewState> {\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            selectedEan: \"\"\r\n        }\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const c = classes || {};\r\n        return <Grid container >\r\n            <Grid item className={c.detailsGrid} md={9}>\r\n                <ReceiptDetails rows={this.props.items}/>\r\n            </Grid>\r\n            <Grid item md={3} className={c.summaryGrid}>\r\n                <ReceiptSummary receiptTotal={this.props.receiptTotal}/>\r\n            </Grid>\r\n        </Grid>\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {  };\r\n\r\nconst mapStateToProps = (store: IRootState) => ({\r\n    ...store.receipt\r\n});\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\ntype ReceiptViewProps = StyledComponentProps & StateProps & DispatchProps;\r\nexport default compose<ReceiptViewProps, {}>(\r\n    withStyles(styles),\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )\r\n)(ReceiptView);","import { createStyles, Theme, withStyles, Grid, Button, WithStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\ntype TopMenuButtonProps = WithStyles & {\r\n    text: string;\r\n    onClick?: (event:any) => void;\r\n    disabled?: boolean;\r\n}\r\nconst styles = (theme: Theme) => createStyles({\r\n    button: {\r\n        height: theme.spacing.unit * 14,\r\n        marginTop: theme.spacing.unit * 2,\r\n        marginBottom: theme.spacing.unit * 2\r\n      }\r\n});\r\n\r\nclass TopMenuButton extends React.Component<TopMenuButtonProps> {\r\n    render() {\r\n        const {classes} = this.props;\r\n        return <Grid item md={2}>\r\n        <Button\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          size=\"large\"\r\n          className={classes.button}\r\n          onClick={this.props.onClick}\r\n          disabled={this.props.disabled}\r\n        >\r\n          <Grid container>\r\n            <Grid item md={12}>\r\n              {this.props.children}\r\n            </Grid>\r\n            <Grid item md={12}>\r\n              {this.props.text}\r\n            </Grid>\r\n          </Grid>\r\n        </Button>\r\n      </Grid>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(TopMenuButton);","import { createAction } from \"redux-actions\";\r\nimport Axios from \"axios\";\r\nimport { config } from \"../config\";\r\nimport { SUCCESS, FAILURE } from \"../Actions/Utils\";\r\n\r\nconst initialState = {\r\n    endMoney: 0,\r\n    startMoney: 0,\r\n    startDeposit: 0,\r\n    numberOfReceipts: 0,\r\n    cancelledReceiptsCount: 0,\r\n    removedItemsCount: 0,\r\n    sales: 0,\r\n    isCreated: false,\r\n    isOpen: false,\r\n    isLoading: false,\r\n    showStartShift: false,\r\n    showEndShift: false,\r\n    showDialog: false,\r\n    canOpenShift: true,\r\n    canCloseShift: false,\r\n    id: 0\r\n};\r\n\r\nconst ACTIONS = {\r\n    STARTSHIFT_SHOW: \"shift/STARTSHIFT_SHOW\",\r\n    GETCURRENTSHIFT: \"shift/GETCURRENTSHIFT\",\r\n    CLOSESHIFT_SHOW: \"shift/CLOSESHIFT_SHOW\",\r\n    CLOSESHIFT_CANCEL: \"shift/CLOSESHIFT_CANCEL\",\r\n    CLOSESHIFT_SUBMIT: \"shift/CLOSESHIFT_SUBMIT\",\r\n    STARTSHIFT_SUBMIT: \"shift/STARTSHIFT_SUBMIT\",\r\n    STARTSHIFT_CANCEL: \"shfit/STARTSHIFT_CANCEL\",\r\n    STARTSHIFTEXISTING_SHOW: \"shift/STARTSHIFTEXISTING_SHOW\"\r\n};\r\n\r\nexport const startShiftShow = createAction(ACTIONS.STARTSHIFT_SHOW, () => {\r\n    return Axios.post(config.apiAddress + \"api/shift\");\r\n});\r\nexport const getCurrentShift = createAction(ACTIONS.GETCURRENTSHIFT, () => {\r\n    return Axios.get(config.apiAddress + \"api/shift\");\r\n});\r\n\r\nexport const startShiftSubmit = createAction(ACTIONS.STARTSHIFT_SUBMIT, (id: number, depositAmount: number) => {\r\n    return Axios.post(config.apiAddress + \"api/shift/start\", { shiftId: id, depositAmount: depositAmount });\r\n});\r\n\r\nexport const startShiftShowCancel = createAction(ACTIONS.STARTSHIFT_CANCEL);\r\nexport const endShiftShow = createAction(ACTIONS.CLOSESHIFT_SHOW);\r\nexport const endShiftShowCancel = createAction(ACTIONS.CLOSESHIFT_CANCEL);\r\nexport const endShiftSubmit = createAction(ACTIONS.CLOSESHIFT_SUBMIT, () => {\r\n    return Axios.post(config.apiAddress + \"api/shift/close\");\r\n});\r\nexport const startShiftExistingShow = createAction(ACTIONS.STARTSHIFTEXISTING_SHOW);\r\n\r\nexport type ShiftState = Readonly<typeof initialState>;\r\nexport default (state: ShiftState = initialState, action: any): ShiftState => {\r\n    switch (action.type) {\r\n        case SUCCESS(ACTIONS.CLOSESHIFT_SUBMIT):\r\n            return {\r\n                ...state,\r\n                ...action.payload.data,\r\n                showDialog: false,\r\n                canOpenShift: true\r\n            };\r\n        case ACTIONS.CLOSESHIFT_CANCEL:\r\n        case ACTIONS.STARTSHIFT_CANCEL:\r\n            return {\r\n                ...state,\r\n                showDialog: false\r\n            };\r\n        case SUCCESS(ACTIONS.STARTSHIFT_SUBMIT):\r\n            return {\r\n                ...state,\r\n                ...action.payload.data,\r\n                canOpenShift: false,\r\n                canCloseShift: true,\r\n                showDialog: false\r\n            };\r\n        case SUCCESS(ACTIONS.GETCURRENTSHIFT):\r\n            const shift = action.payload.data;\r\n            return {\r\n                ...state,\r\n                ...shift,\r\n                canCloseShift: shift.isOpen,\r\n                canOpenShift: shift.isCreated && !shift.isOpen\r\n            };\r\n        case FAILURE(ACTIONS.GETCURRENTSHIFT):\r\n            return {\r\n                ...state,\r\n                isOpen: false,\r\n                canOpenShift: true\r\n            };\r\n        case SUCCESS(ACTIONS.STARTSHIFT_SHOW):\r\n            return {\r\n                ...state,\r\n                ...action.payload.data,\r\n                showDialog: true,\r\n                showStartShift: true,\r\n                showEndShift: false\r\n            };\r\n        case ACTIONS.STARTSHIFTEXISTING_SHOW:\r\n            return {\r\n                ...state,\r\n                showDialog: true,\r\n                showStartShift: true,\r\n                showEndShift: false\r\n            };\r\n        case ACTIONS.CLOSESHIFT_SHOW:\r\n            return {\r\n                ...state,\r\n                showDialog: true,\r\n                showEndShift: true,\r\n                showStartShift: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import Product from \"../Models/Product\";\r\nimport axios from \"axios\";\r\nimport { config } from \"../config\";\r\nimport { createAction } from 'redux-actions';\r\nimport { FETCHING, FAILURE, SUCCESS } from \"../Actions/Utils\";\r\nimport { ProductApi } from \"../API\";\r\n\r\nconst initialState = {\r\n    products: [] as Product[],\r\n    showProductDialog: false,\r\n    isLoading: false,\r\n    errorMessage: \"\",\r\n    selectedProduct: \"\",\r\n    canSearchProduct: true,\r\n    searchEan: \"\"\r\n}\r\n\r\nexport const ACTIONS = {\r\n    FETCH_PRODUCTS: 'products/FETCH_PRODUCTS',\r\n    SHOW_PRODUCTS_DIALOG: 'products/SHOW_PRODUCTS_DIALOG',\r\n    PICK_PRODUCT: 'products/PICK_PRODUCT',\r\n    CLOSE_PRODUCTS_DIALOG: 'products/CLOSE_PRODUCTS_DIALOG'\r\n}\r\n\r\nexport type ProductState = Readonly<typeof initialState>;\r\n\r\nexport default (state: ProductState = initialState, action: any): ProductState => {\r\n    switch (action.type) {\r\n        case FETCHING(ACTIONS.FETCH_PRODUCTS):\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n            break;\r\n        case SUCCESS(ACTIONS.FETCH_PRODUCTS):\r\n            return {\r\n                ...state,\r\n                products: action.payload.data,\r\n                isLoading: false\r\n            }\r\n            break;\r\n        case FAILURE(ACTIONS.FETCH_PRODUCTS):\r\n            return {\r\n                ...state,\r\n                errorMessage: action.payload,\r\n                isLoading: false\r\n            }\r\n            break;\r\n        case ACTIONS.SHOW_PRODUCTS_DIALOG:\r\n            return {\r\n                ...state,\r\n                showProductDialog: true,\r\n                searchEan: \"\"\r\n            }\r\n            break;\r\n        case ACTIONS.CLOSE_PRODUCTS_DIALOG:\r\n            return {\r\n                ...state,\r\n                showProductDialog: false\r\n            }\r\n            break;\r\n        case ACTIONS.PICK_PRODUCT:\r\n            return {\r\n                ...state,\r\n                showProductDialog: false,\r\n                selectedProduct: action.payload\r\n            }\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport const productFetch = createAction(ACTIONS.FETCH_PRODUCTS, () => { return axios.get(config.apiAddress + \"api/product\")})\r\nexport const productDialogClose = createAction(ACTIONS.CLOSE_PRODUCTS_DIALOG);\r\nexport const productDialogShow = createAction(ACTIONS.SHOW_PRODUCTS_DIALOG);\r\n//export const productFetch = createAction(ACTIONS.FETCH_PRODUCTS, Api.productGetAll)\r\n// export const productFetch = () => {\r\n//     return {\r\n//         type: ACTIONS.FETCH_PRODUCTS,\r\n//         payload: axios.get(config.apiAddress + \"api/product\")\r\n//     };\r\n// }\r\n//export const pickProduct = createAction(ACTIONS.PICK_PRODUCT, (ean: string) => ean);\r\n// export const pickProduct = (ean: string) => {\r\n//     return {\r\n//         type: ACTIONS.PICK_PRODUCT,\r\n//         payload: ean\r\n//     }\r\n// }\r\n\r\n// export const productDialogShow = () => {\r\n//     return {\r\n//         type: ACTIONS.SHOW_PRODUCTS_DIALOG\r\n//     };\r\n// }\r\n","import Axios from \"axios\";\r\nimport { config } from \"../config\";\r\nimport { createAction } from \"redux-actions\";\r\nimport { SUCCESS } from \"../Actions/Utils\";\r\n\r\nconst initialState = {\r\n    showPayDialog: false,\r\n    amount: 0,\r\n    amountPayed: 0,\r\n    change: 0,\r\n    isLoading: false,\r\n    canPay: false,\r\n    id: 0\r\n}\r\nconst ACTIONS = {\r\n    PAYDIALOG_SHOW: \"payment/PAYDIALOG_SHOW\",\r\n    PAYDIALOG_CANCEL: \"payment/PAYDIALOG_CANCEL\",\r\n    PAYDIALOG_SUBMIT: \"payment/PAYDIALOG_SUBMIT\"\r\n}\r\n\r\nexport type PaymentState = Readonly<typeof initialState>;\r\n\r\nexport const payShowDialog = createAction(ACTIONS.PAYDIALOG_SHOW, (id: number) => { return Axios.post(config.apiAddress + \"api/payment\")});\r\nexport const payCancelDialog = createAction(ACTIONS.PAYDIALOG_CANCEL);\r\nexport const paySubmit = (id: number, amount: number) => (dispatch, getState) => {\r\n    Axios.post(config.apiAddress + \"api/payment/pay\", {paymentId:id, amount}).then(response => {\r\n        dispatch({\r\n            type: \"receipt/RESET\"\r\n        });\r\n\r\n        dispatch({\r\n            type: SUCCESS(ACTIONS.PAYDIALOG_SUBMIT)\r\n        });\r\n    })\r\n}\r\n//export const paySubmit = createAction(ACTIONS.PAYDIALOG_SUBMIT, (id: number, amount: number) => { return Axios.post(config.apiAddress + \"api/payment/pay\", {id, amount})});\r\n\r\nexport default (state: PaymentState = initialState, action:any): PaymentState => {\r\n    switch (action.type) {\r\n        case SUCCESS(ACTIONS.PAYDIALOG_SHOW):\r\n            return {\r\n                ...state,\r\n                ...action.payload.data,\r\n                showPayDialog: true\r\n            };\r\n        case SUCCESS(ACTIONS.PAYDIALOG_SUBMIT):\r\n            return {\r\n                ...state,\r\n                showPayDialog: false\r\n            }\r\n        case ACTIONS.PAYDIALOG_CANCEL:\r\n            return {\r\n                ...state,\r\n                showPayDialog: false\r\n            }\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n}","import React from \"react\";\r\nimport { Grid, withStyles, Theme, createStyles, StyledComponentProps } from \"@material-ui/core\";\r\nimport { Search, PlusOne, CheckCircle, Cancel, ExitToApp, RemoveShoppingCart } from \"@material-ui/icons\";\r\nimport TopMenuButton from \"./TopMenuButton\";\r\nimport { compose } from \"recompose\";\r\nimport { startShiftShow, endShiftShow, getCurrentShift, startShiftExistingShow } from \"../Reducers/ShiftReducer\";\r\nimport { changeQuantityShow, deleteReceiptShow, removeItemFromReceipt, getCurrentReceipt } from \"../Reducers/ReceiptReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { IRootState } from \"../Reducers/Index\";\r\nimport { productDialogShow } from \"../Reducers/ProductReducer\";\r\nimport { payShowDialog } from \"../Reducers/PaymentReducer\";\r\nimport { HotKeys } from \"react-hotkeys\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        mainGrid: {\r\n            paddingLeft: theme.spacing.unit,\r\n            paddingRight: theme.spacing.unit\r\n        },\r\n        icon: {\r\n            marginRight: theme.spacing.unit,\r\n            fontSize: 54\r\n        }\r\n    });\r\n\r\nconst initialState = {\r\n    selectedItemId: null\r\n};\r\ntype TopMenuHandlers = {\r\n    handleProductList: any;\r\n    handleChangeQuantity: any;\r\n    handlePay: any;\r\n    handleRemoveReceiptItem: any;\r\n    handleCancelReceipt: any;\r\n    handleCloseShift: any;\r\n    handleOpenShift: any;\r\n}\r\ntype TopMenuState = typeof initialState;\r\n\r\nclass TopMenu extends React.Component<TopMenuProps, TopMenuState> {\r\n    constructor(props){\r\n        super(props);\r\n        this.props.getCurrentShift();\r\n        this.props.getCurrentReceipt();\r\n\r\n    }\r\n    // handleProductList = event => {\r\n    //     if (this.props.shift.isOpen)\r\n    //         this.props.productDialogShow();\r\n    // };\r\n    // handleChangeQuantity = (event: any) => {\r\n    //     if (this.props.canChangeQuantity) {\r\n    //         event.preventDefault();\r\n    //         this.props.changeQuantityShow();\r\n    //     }\r\n    // };\r\n    // handlePay = (event: any) => {\r\n    //     if (this.props.canPay)\r\n    //         this.props.payShowDialog(this.props.receipt.id);\r\n    // };\r\n    // handleRemoveReceiptItem = (event: any) => {\r\n    //     if (this.props.canRemoveItem) {\r\n    //         event.preventDefault();\r\n    //         this.props.removeItemFromReceipt(this.props.receipt.id, this.props.receipt.selectedReceiptItem || 1);\r\n    //     }\r\n    // };\r\n    // handleCancelReceipt = (event: any) => {\r\n    //     if (this.props.canCancelReceipt)\r\n    //         this.props.deleteReceiptShow();\r\n    // };\r\n    // handleCloseShift = (event: any) => {\r\n    //     if (this.props.shift.canCloseShift)\r\n    //         this.props.endShiftShow();\r\n    // };\r\n    // handleOpenShift = (event: any) => {\r\n    //     if (this.props.shift.canOpenShift)\r\n    //         if (this.props.shift.isCreated)\r\n    //             this.props.startShiftExistingShow();\r\n    //         else\r\n    //             this.props.startShiftShow();\r\n    // };\r\n    render() {\r\n        let { classes, shift } = this.props;\r\n        classes = classes || {};\r\n        return (\r\n            <Grid container spacing={8} className={classes.mainGrid}>\r\n                <TopMenuButton text=\"Znajdź produkt [Ins]\" disabled={!shift.isOpen} onClick={this.props.handleProductList}>\r\n                    <Search className={classes.icon} />\r\n                </TopMenuButton>\r\n                <TopMenuButton text=\"Zmień ilość [F6]\" disabled={!this.props.canChangeQuantity} onClick={this.props.handleChangeQuantity}>\r\n                    <PlusOne className={classes.icon} />\r\n                </TopMenuButton>\r\n                <TopMenuButton text=\"Zapłata [F12]\" disabled={!this.props.canPay} onClick={this.props.handlePay}>\r\n                    <CheckCircle className={classes.icon} />\r\n                </TopMenuButton>\r\n                <TopMenuButton text=\"Usuń pozycję [F3]\" disabled={!this.props.canRemoveItem} onClick={this.props.handleRemoveReceiptItem}>\r\n                    <RemoveShoppingCart className={classes.icon} />\r\n                </TopMenuButton>\r\n                <TopMenuButton text=\"Anuluj paragon [F4]\" disabled={!this.props.canCancelReceipt} onClick={this.props.handleCancelReceipt}>\r\n                    <Cancel className={classes.icon} />\r\n                </TopMenuButton>\r\n                <TopMenuButton\r\n                    text={shift.isOpen ? \"Zamknij zmianę\" : \"Otwórz zmianę\"}\r\n                    disabled={shift.isOpen ? !shift.canCloseShift : !shift.canOpenShift}\r\n                    onClick={shift.isOpen ? this.props.handleCloseShift : this.props.handleOpenShift}\r\n                >\r\n                    <ExitToApp className={classes.icon} />\r\n                </TopMenuButton>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store: IRootState) => ({\r\n    shift: store.shift,\r\n    receipt: store.receipt,\r\n    canSearchProduct: store.product.canSearchProduct,\r\n    canChangeQuantity: store.receipt.canChangeQuantity,\r\n    canPay: store.receipt.canPay,\r\n    canRemoveItem: store.receipt.canRemoveItem,\r\n    canCancelReceipt: store.receipt.canCancelReceipt\r\n});\r\n\r\nconst mapDispatchToProps = { payShowDialog, productDialogShow, deleteReceiptShow, changeQuantityShow, endShiftShow, startShiftShow, getCurrentShift, startShiftExistingShow, removeItemFromReceipt, getCurrentReceipt };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\ntype TopMenuProps = StyledComponentProps & StateProps & DispatchProps & TopMenuHandlers;\r\nexport default compose<TopMenuProps, TopMenuHandlers>(\r\n    withStyles(styles),\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )\r\n)(TopMenu);","import React from \"react\";\r\nimport {\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  Dialog,\r\n  DialogActions,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Slide,\r\n  Theme,\r\n  createStyles,\r\n  withStyles,\r\n  WithStyles,\r\n  StyledComponentProps\r\n} from \"@material-ui/core\";\r\nimport { IRootState } from \"../Reducers/Index\";\r\nimport { startShiftShow, endShiftShow, endShiftSubmit, endShiftShowCancel, startShiftShowCancel, startShiftSubmit } from \"../Reducers/ShiftReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport compose from \"recompose/compose\";\r\n\r\nfunction Transition(props: any) {\r\n  return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  dialog: {\r\n    minWidth: 1000\r\n  }\r\n});\r\n\r\n\r\ntype TillState = {\r\n  amount: string;\r\n};\r\nclass TillManagement extends React.Component<TillProps, TillState> {\r\n  constructor(props: TillProps) {\r\n    super(props);\r\n    this.state = { amount: \"\" };\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    const c = classes || {};\r\n    return (\r\n      <div>\r\n        {this.props.showStartShift ? (\r\n          <Dialog open={this.props.showDialog} className={c.dialog} TransitionComponent={Transition} maxWidth=\"xl\">\r\n            <DialogTitle id=\"form-dialog-title\">Otwarcie zmiany</DialogTitle>\r\n            <DialogContent>\r\n              <Grid container>\r\n                <Grid item md={9}>\r\n                  <Typography variant=\"h4\">\r\n                    Aktualna kwota na stanowisku:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item md={3}>\r\n                  <Typography variant=\"h4\">\r\n                    {this.props.startMoney}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item md={3}>\r\n                  <Typography>Wpłata początkowa</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item md={9}>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"amount\"\r\n                  label=\"Kwota początkowa\"\r\n                  type=\"number\"\r\n                  value={this.state.amount}\r\n                  onKeyDown={(event) => this.handleEnter(event)}\r\n                  onChange={(event) => this.handleChangeAmount(event)}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item md={6}>\r\n                  <Button color=\"primary\" onClick={(event) => this.handleSubmitStartShift(event)} >Zatwierdź</Button>\r\n                </Grid>\r\n                <Grid item md={6}>\r\n                  <Button color=\"primary\" onClick={(event) => this.handleCancelStartShift(event)} >Anuluj</Button>\r\n                </Grid>\r\n              </Grid>\r\n            </DialogContent>\r\n          </Dialog>\r\n        ) : (\r\n          <Dialog open={this.props.showDialog} className={c.dialog} TransitionComponent={Transition}>\r\n            <DialogTitle id=\"form-dialog-title\">Zamknięcie zmiany</DialogTitle>\r\n            <DialogContent>\r\n              <Grid container>\r\n                <Grid item md={6}>\r\n                  <Typography variant=\"h4\">Kwota z przeniesienia:</Typography>\r\n                </Grid>\r\n                <Grid item md={6}>\r\n                  <Typography variant=\"h4\">{this.props.startMoney}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item md={6}>\r\n                  <Typography variant=\"h4\">Wpłata początkowa:</Typography>\r\n                </Grid>\r\n                {/* <Grid item md={6}>\r\n                  <Typography>{this.props.amount}</Typography>\r\n                </Grid> */}\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item md={6}>\r\n                  <Typography variant=\"h4\">Ilość paragonów:</Typography>\r\n                </Grid>\r\n                <Grid item md={6}>\r\n                  <Typography variant=\"h4\">{this.props.numberOfReceipts}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item md={6}>\r\n                  <Typography variant=\"h4\">Ilość anulowanych paragonów:</Typography>\r\n                </Grid>\r\n                <Grid item md={6}>\r\n                  <Typography variant=\"h4\">\r\n                    {this.props.cancelledReceiptsCount}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item md={6}>\r\n                  <Typography variant=\"h4\">Ilość anulowanych pozycji:</Typography>\r\n                </Grid>\r\n                <Grid item md={6}>\r\n                  <Typography variant=\"h4\">\r\n                    {this.props.removedItemsCount}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item md={6}>\r\n                  <Typography variant=\"h4\">Sprzedaż:</Typography>\r\n                </Grid>\r\n                <Grid item md={6}>\r\n                  <Typography variant=\"h4\">{this.props.sales}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item md={3}>\r\n                  <Typography variant=\"h4\">Wpłata początkowa</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item md={6}>\r\n                  <Typography variant=\"h4\">Pozostaje:</Typography>\r\n                </Grid>\r\n                {/* <Grid item md={6}>\r\n                  <Typography>{this.props.}</Typography>\r\n                </Grid> */}\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item md={6}>\r\n                  <Button color=\"primary\" onClick={(event) => this.handleSubmitCloseShift(event)}>Zamknij zmianę</Button>\r\n                </Grid>\r\n                <Grid item md={6}>\r\n                  <Button color=\"primary\" onClick={(event) => this.handleCancelCloseShift(event)}>Anuluj</Button>\r\n                </Grid>\r\n              </Grid>\r\n            </DialogContent>\r\n          </Dialog>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  handleEnter(event: React.KeyboardEvent<HTMLDivElement>): void {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault();\r\n      this.handleSubmitStartShift();\r\n    }\r\n  }\r\n  handleChangeAmount(event: any): void {\r\n    this.setState({amount: event.target.value})\r\n  }\r\n  handleCancelStartShift(event: React.MouseEvent<HTMLElement, MouseEvent>): void {\r\n    this.props.startShiftShowCancel();\r\n  }\r\n  handleSubmitStartShift(event?: React.MouseEvent<HTMLElement, MouseEvent>): void {\r\n    this.props.startShiftSubmit(this.props.id, Number(this.state.amount));\r\n  }\r\n  handleSubmitCloseShift(event: React.MouseEvent<HTMLElement, MouseEvent>): void {\r\n    this.props.endShiftSubmit();\r\n  }\r\n  handleCancelCloseShift(event: React.MouseEvent<HTMLElement, MouseEvent>): void {\r\n    this.props.endShiftShowCancel();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store: IRootState) => ({\r\n    ...store.shift\r\n    // hasOpenShift: store.shift.hasOpenShift,\r\n    // previousAmount: store.shift.previousAmount,\r\n    // startAmount: store.shift.startAmount,\r\n    // isLoading: store.shift.isLoading,\r\n    // numberOfReceipts: store.shift.numberOfReceipts\r\n});\r\n\r\nconst mapDispatchToProps = { startShift: startShiftShow, endShiftShow, endShiftSubmit, endShiftShowCancel, startShiftSubmit, startShiftShowCancel}\r\n\r\ntype StateProps = ReturnType<typeof  mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\ntype TillProps = StyledComponentProps & StateProps & DispatchProps;\r\nexport default compose<TillProps, {}>(withStyles(styles),connect(mapStateToProps, mapDispatchToProps))(TillManagement);\r\n","import { Theme, createStyles, withStyles, Grid, TextField, StyledComponentProps } from \"@material-ui/core\";\r\n\r\nimport React from \"react\";\r\nimport { IRootState } from \"../Reducers/Index\";\r\nimport { compose } from \"recompose\";\r\nimport { connect } from \"react-redux\";\r\nimport { addItemToReceipt } from \"../Reducers/ReceiptReducer\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        textField: {\r\n            marginLeft: theme.spacing.unit * 4,\r\n            marginTop: theme.spacing.unit * 4,\r\n            marginBottom: theme.spacing.unit * 4\r\n        },\r\n        inputField: {\r\n            fontSize: theme.typography.h4.fontSize\r\n        },\r\n        label: {\r\n            fontSize: theme.typography.h4.fontSize\r\n        }\r\n    });\r\n\r\ntype BottomMenuState = {\r\n    name: string;\r\n};\r\n\r\nclass BottomMenu extends React.Component<BottomMenuProps, BottomMenuState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\"\r\n        };\r\n    }\r\n    handlePickProduct() {\r\n        this.props.addItemToReceipt(this.state.name);\r\n        this.setState({name:\"\"})\r\n    }\r\n    handleChange(name: string) {\r\n        return (event: any) => {\r\n            if (event.key === \"Enter\") this.handlePickProduct();\r\n            else\r\n                return this.setState({\r\n                    [name]: event.target.value\r\n                } as BottomMenuState);\r\n        };\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const c = classes || {}\r\n        return (\r\n            <Grid container>\r\n                <Grid item md={8}>\r\n                    <TextField\r\n                        autoFocus={true}\r\n                        fullWidth\r\n                        id=\"standard-name\"\r\n                        label=\"Dodaj produkt\"\r\n                        variant=\"outlined\"\r\n                        className={c.textField}\r\n                        InputProps={{ className: c.inputField }}\r\n                        InputLabelProps={{ className: c.label }}\r\n                        value={this.state.name}\r\n                        disabled={!this.props.shift.isOpen}\r\n                        onKeyPress={(event) => this.handleEnterKey(event)}\r\n                        onChange={(event) => this.handleEanChange(event)}\r\n                        margin=\"normal\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n    handleEnterKey(event: React.KeyboardEvent<HTMLDivElement>): void {\r\n        if (event.key === \"Enter\") {\r\n            //event.preventDefault();\r\n            this.handlePickProduct();\r\n        }\r\n    }\r\n    handleEanChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>): void {\r\n        this.setState({\r\n            [\"name\"]: event.target.value\r\n        } as BottomMenuState);\r\n    }\r\n}\r\nconst mapStateToProps = (store: IRootState) => ({\r\n    ...store.product,\r\n    shift: store.shift\r\n});\r\nconst mapDispatchToProps = { addItemToReceipt };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\ntype BottomMenuProps = StyledComponentProps & StateProps & DispatchProps;\r\nexport default compose<BottomMenuProps, {}>(\r\n    withStyles(styles),\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )\r\n)(BottomMenu);\r\n","import { IRootState } from \"../Reducers/Index\";\r\nimport React from \"react\";\r\nimport { compose } from \"recompose\";\r\nimport { withStyles, StyledComponentProps, createStyles, Theme, Dialog, DialogTitle, DialogContent, Grid, TextField, Button, Paper } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport Product from \"../Models/Product\";\r\nimport { productFetch, productDialogClose } from \"../Reducers/ProductReducer\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { addItemToReceipt } from \"../Reducers/ReceiptReducer\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        dialog: {\r\n            minWidth: 1000\r\n        },\r\n        grid: {\r\n            marginBottom: theme.spacing.unit * 2\r\n        }\r\n    });\r\n\r\nconst initialState = {\r\n    eanValue: \"\"\r\n};\r\n\r\ntype ProductListState = typeof initialState;\r\nconst columns = [\r\n    {\r\n        name: \"ean\",\r\n        label: \"EAN\",\r\n        options: {\r\n            filter: true,\r\n            sort: true\r\n        }\r\n    },\r\n    {\r\n        name: \"name\",\r\n        label: \"Nazwa\",\r\n        options: {\r\n            filter: true,\r\n            sort: true\r\n        }\r\n    },\r\n    {\r\n        name: \"price\",\r\n        label: \"Cena\",\r\n        options: {\r\n            filter: false,\r\n            sort: false\r\n        }\r\n    },\r\n    {\r\n        name: \"tax\",\r\n        label: \"VAT\",\r\n        options: {\r\n            filter: false,\r\n            sort: false\r\n        }\r\n    },\r\n    {\r\n        name: \"unit\",\r\n        label: \"Jm\",\r\n        options: {\r\n            filter: false,\r\n            sort: false\r\n        }\r\n    }\r\n];\r\n\r\nclass ProductList extends React.Component<ProductListProps, ProductListState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.productFetch();\r\n        this.state = initialState;\r\n    }\r\n    handleTextChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>): void {\r\n        this.setState({ eanValue: event.target.value });\r\n    }\r\n    handleCancel(event: React.MouseEvent<HTMLElement, MouseEvent>): void {\r\n        this.props.productDialogClose();\r\n    }\r\n    handleSubmit(event: React.MouseEvent<HTMLElement, MouseEvent>): void {\r\n        if (this.state.eanValue && this.state.eanValue != \"\") {\r\n            this.props.addItemToReceipt(this.state.eanValue);\r\n            this.props.productDialogClose();\r\n            this.setState({eanValue: \"\"});\r\n        }\r\n    }\r\n    handleRowClick(rowData: string[], rowMeta: { dataIndex: number, rowIndex: number }) {\r\n        this.setState({ eanValue: rowData[0] });\r\n    }\r\n    options() {\r\n        return {\r\n            filterType: \"checkbox\",\r\n            responsive: \"scroll\",\r\n            download: false,\r\n            print: false,\r\n            filter: false,\r\n            sort: false,\r\n            selectableRows: false,\r\n            onRowClick: this.handleRowClick.bind(this),\r\n            elevation:0\r\n        };\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const c = classes || {};\r\n        return (\r\n            <Dialog open={this.props.showProductDialog} maxWidth=\"xl\">\r\n                <DialogTitle id=\"form-dialog-title\">Wybierz produkt</DialogTitle>\r\n                <DialogContent className={c.dialog}>\r\n                    <Grid container className={c.grid} spacing={8}>\r\n                        <Grid item md={8}>\r\n                            <TextField autoFocus margin=\"dense\" id=\"amount\" onChange={event => this.handleTextChange(event)} value={this.state.eanValue} label=\"EAN\" type=\"text\" fullWidth />\r\n                        </Grid>\r\n                        <Grid item md={2}>\r\n                            <Button color=\"primary\" size=\"large\" variant=\"contained\" fullWidth onClick={event => this.handleSubmit(event)} disabled={this.state && this.state.eanValue === \"\"}>\r\n                                Zatwierdź\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item md={2}>\r\n                            <Button color=\"secondary\" size=\"large\" variant=\"contained\" fullWidth onClick={event => this.handleCancel(event)}>\r\n                                Anuluj\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <MUIDataTable\r\n                        title={\"\"}\r\n                        data={this.props.products.map(item => {\r\n                            return [item.ean, item.name, item.price, item.tax, item.unit];\r\n                        })}\r\n                        columns={columns}\r\n                        options={this.options()}\r\n                    />\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (store: IRootState) => ({\r\n    ...store.product\r\n});\r\n\r\nconst mapDispatchToProps = { productFetch, productDialogClose, addItemToReceipt };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\ntype ProductListProps = StyledComponentProps & StateProps & DispatchProps;\r\nexport default compose<ProductListProps, {}>(\r\n    withStyles(styles),\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )\r\n)(ProductList);\r\n","import { IRootState } from \"../Reducers/Index\";\r\nimport React from \"react\";\r\nimport { compose } from \"recompose\";\r\nimport { withStyles, StyledComponentProps, createStyles, Theme, Dialog, DialogTitle, DialogContent, Grid, TextField, Button, Paper } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { changeQuantitySubmit, changeQuantityCancel } from \"../Reducers/ReceiptReducer\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        dialog: {\r\n            minWidth: 500\r\n        },\r\n        grid: {\r\n            marginBottom: theme.spacing.unit * 2\r\n        },\r\n        inputField: {\r\n            fontSize: theme.typography.h4.fontSize\r\n        }\r\n    });\r\n\r\ntype ChangeQuantityState = {\r\n    quantity: number;\r\n};\r\n\r\nclass ChangeQuantity extends React.Component<ChangeQuantityProps, ChangeQuantityState> {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {quantity:1};\r\n    }\r\n    handleTextChange(event: any): void {\r\n        const q = Number(event.target.value);\r\n        if (!isNaN(q)) this.setState({ quantity: q });\r\n    }\r\n    handleCancel(event?: React.MouseEvent<HTMLElement, MouseEvent>): void {\r\n        this.props.changeQuantityCancel();\r\n    }\r\n    handleSubmit(event?: React.MouseEvent<HTMLElement, MouseEvent>): void {\r\n        this.props.changeQuantitySubmit(this.props.selectedReceiptItem || 1, this.state.quantity);\r\n    }\r\n    handleFocus(event: any): void {\r\n        event.target.select();\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.selectedReceiptItemQuantity !== this.props.selectedReceiptItemQuantity) {\r\n            this.setState({ quantity: nextProps.selectedReceiptItemQuantity });\r\n        }\r\n    }\r\n    handleEnterKey(event: React.KeyboardEvent<HTMLDivElement>): void {\r\n        if (event.key === \"Enter\") {\r\n            event.preventDefault();\r\n            this.handleSubmit()\r\n        }\r\n        else if (event.key === \"Escape\") {\r\n            event.preventDefault();\r\n            this.handleCancel()\r\n        }\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const c = classes || {};\r\n        return (\r\n            <Dialog open={this.props.showQuantityDialog} maxWidth={false}>\r\n                <DialogTitle id=\"form-dialog-title\">Podaj ilość</DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container className={c.grid} spacing={8}>\r\n                        <Grid item md={6}>\r\n                            <TextField InputProps={{ className: c.inputField }} autoFocus margin=\"dense\" id=\"amount\" onKeyDown={event => this.handleEnterKey(event)} onChange={event => this.handleTextChange(event)} onFocus={event => this.handleFocus(event)} value={this.state.quantity} type=\"number\" fullWidth />\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n                            <Button color=\"primary\" size=\"large\" variant=\"contained\" fullWidth onClick={event => this.handleSubmit(event)} disabled={this.state.quantity <= 0}>\r\n                                Zatwierdź\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n                            <Button color=\"secondary\" size=\"large\" variant=\"contained\" fullWidth onClick={event => this.handleCancel(event)}>\r\n                                Anuluj\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (store: IRootState) => ({\r\n    ...store.receipt\r\n});\r\n\r\nconst mapDispatchToProps = { changeQuantityCancel, changeQuantitySubmit };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\ntype ChangeQuantityProps = StyledComponentProps & StateProps & DispatchProps;\r\nexport default compose<ChangeQuantityProps, {}>(\r\n    withStyles(styles),\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )\r\n)(ChangeQuantity);\r\n","import { IRootState } from \"../Reducers/Index\";\r\nimport React from \"react\";\r\nimport { compose } from \"recompose\";\r\nimport { withStyles, StyledComponentProps, createStyles, Theme, Dialog, DialogTitle, DialogContent, Grid, TextField, Button, Paper, Typography } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { changeQuantitySubmit, changeQuantityCancel, deleteReceiptSubmit, deleteReceiptCancel } from \"../Reducers/ReceiptReducer\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        dialog: {\r\n            minWidth: 500\r\n        },\r\n        grid: {\r\n            marginBottom: theme.spacing.unit * 2\r\n        },\r\n        inputField: {\r\n            fontSize: theme.typography.h4.fontSize\r\n        }\r\n    });\r\n\r\ntype ChangeQuantityState = {\r\n    quantity: number;\r\n};\r\n\r\nclass ChangeQuantity extends React.Component<ChangeQuantityProps, ChangeQuantityState> {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {quantity:1};\r\n    }\r\n    handleTextChange(event: any): void {\r\n        const q = Number(event.target.value);\r\n        if (!isNaN(q)) this.setState({ quantity: q });\r\n    }\r\n    handleCancel(event?: React.MouseEvent<HTMLElement, MouseEvent>): void {\r\n        this.props.deleteReceiptCancel();\r\n    }\r\n    handleSubmit(event?: React.MouseEvent<HTMLElement, MouseEvent>): void {\r\n        this.props.deleteReceiptSubmit(this.props.id);\r\n    }\r\n    handleFocus(event: any): void {\r\n        event.target.select();\r\n    }\r\n    handleEnterKey(event: React.KeyboardEvent<HTMLDivElement>): void {\r\n        if (event.key === \"Enter\") {\r\n            event.preventDefault();\r\n            this.handleSubmit()\r\n        }\r\n        else if (event.key === \"Escape\") {\r\n            event.preventDefault();\r\n            this.handleCancel()\r\n        }\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const c = classes || {};\r\n        return (\r\n            <Dialog open={this.props.showReceiptCancelDialog} maxWidth={false}>\r\n                <DialogContent>\r\n                    <Grid container className={c.grid}>\r\n                    <Typography variant=\"h4\">Czy na pewno usunąć paragon?</Typography>\r\n                    </Grid>\r\n                    <Grid container spacing={32}>\r\n                        <Grid item md={6}>\r\n                            <Button color=\"primary\" size=\"large\" variant=\"contained\" fullWidth onClick={event => this.handleSubmit(event)} disabled={this.state.quantity <= 0}>\r\n                                Tak\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item md={6}>\r\n                            <Button color=\"primary\" size=\"large\" variant=\"contained\" fullWidth onClick={event => this.handleCancel(event)}>\r\n                                Nie\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (store: IRootState) => ({\r\n    ...store.receipt\r\n});\r\n\r\nconst mapDispatchToProps = { deleteReceiptSubmit, deleteReceiptCancel };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\ntype ChangeQuantityProps = StyledComponentProps & StateProps & DispatchProps;\r\nexport default compose<ChangeQuantityProps, {}>(\r\n    withStyles(styles),\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )\r\n)(ChangeQuantity);\r\n","import { Dialog, Slide, DialogTitle, DialogContent, Grid, Typography, TextField, Button, Theme, createStyles, withStyles, StyledComponentProps } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { IRootState } from \"../Reducers/Index\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"recompose\";\r\nimport { paySubmit, payCancelDialog } from \"../Reducers/PaymentReducer\";\r\nimport { FormattedNumber} from 'react-intl';\r\n\r\nfunction Transition(props: any) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    paper: {\r\n        minWidth: 900\r\n    }\r\n});\r\n\r\nclass PaymentView extends React.Component<PaymentViewProps, any> {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { amount: 0 }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.receiptTotal !== this.props.receiptTotal || nextProps.amount !== this.props.amount) {\r\n            this.setState({ amountString: nextProps.receiptTotal, amount: nextProps.amount });\r\n        }\r\n    }\r\n    render() {\r\n        const {classes} = this.props;\r\n        const c = classes || {};\r\n        const amount = this.state && this.state.amount ? Number(this.state.amount) : 0;\r\n        return <Dialog open={this.props.showPayDialog} TransitionComponent={Transition} maxWidth=\"xl\">\r\n            <DialogTitle id=\"form-dialog-title\">Płatność</DialogTitle>\r\n            <DialogContent className={c.paper}>\r\n                <Grid container>\r\n                    <Grid item md={3}>\r\n                        <Typography variant=\"h4\">Do zapłaty: </Typography>\r\n                    </Grid>\r\n                    <Grid item md={9}>\r\n                        <Typography variant=\"h3\">{this.props.receiptTotal}</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                    <Grid item md={3}>\r\n                        <Typography variant=\"h4\">Wpłata:</Typography>\r\n                    </Grid>\r\n                    <Grid item md={9}>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"amount\"\r\n                        label=\"Kwota wpłaty\"\r\n                        type=\"number\"\r\n                        value={this.state.amount}\r\n                        onFocus={(event) => this.handleFocus(event)}\r\n                        onKeyPress={(event) => this.handleKeys(event)}\r\n                        onChange={(event) => this.handleChange(event)}\r\n                    />\r\n                </Grid>\r\n                </Grid>\r\n\r\n                <Grid container>\r\n                    <Grid item md={3}>\r\n                        <Typography variant=\"h4\">Reszta: </Typography>\r\n                    </Grid>\r\n                    <Grid item md={9}>\r\n                        <Typography variant=\"h4\"><FormattedNumber  value={amount < this.props.amount ? 0 : (amount - this.props.amount)} style=\"currency\" currency=\"PLN\"/></Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                    <Grid item md={6}>\r\n                        <Button color=\"primary\" size=\"large\" variant=\"contained\" disabled={amount < this.props.amount} onClick={(event) => this.handleSubmit(event)} >\r\n                            Zatwierdź\r\n            </Button>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                        <Button color=\"secondary\" size=\"large\" variant=\"contained\" onClick={(event) => this.handleCancel(event)}>\r\n                            Anuluj\r\n            </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n        </Dialog>;\r\n    }\r\n    handleCancel(event?: React.MouseEvent<HTMLElement, MouseEvent>): void {\r\n        this.props.payCancelDialog();\r\n    }\r\n    handleSubmit(event?: React.MouseEvent<HTMLElement, MouseEvent>): void {\r\n        this.props.paySubmit(this.props.id, this.state.amount);\r\n    }\r\n    handleChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>): void {\r\n        this.setState({amount: event.target.value})\r\n    }\r\n    handleKeys(event: React.KeyboardEvent<HTMLDivElement>): void {\r\n        if (event.key === \"Enter\") {\r\n            event.preventDefault();\r\n            this.handleSubmit()\r\n        }\r\n        else if (event.key === \"Escape\") {\r\n            event.preventDefault();\r\n            this.handleCancel()\r\n        }\r\n    }\r\n    handleFocus(event: any): void {\r\n        event.target.select();\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store: IRootState) => ({\r\n    ...store.payment,\r\n    receiptTotal: store.receipt.receiptTotal\r\n});\r\n\r\nconst mapDispatchToProps = { paySubmit, payCancelDialog  };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\ntype PaymentViewProps = StyledComponentProps & StateProps & DispatchProps;\r\nexport default compose<PaymentViewProps, {}>(\r\n    withStyles(styles),\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )\r\n)(PaymentView);","import React from \"react\";\r\nimport ReceiptView from \"./ReceiptView\";\r\nimport TopMenu from \"./TopMenu\";\r\nimport TillManagement from \"./TillManagement\";\r\nimport { HotKeys } from \"react-hotkeys\";\r\nimport { Paper, Theme, createStyles, withStyles, AppBar, Toolbar, Typography, Divider, StyledComponentProps } from \"@material-ui/core\";\r\nimport BottomMenu from \"./BottomMenu\";\r\nimport ProductList from \"./ProductList\";\r\nimport ChangeQuantity from \"./ChangeQuantity\";\r\nimport DeleteReceipt from \"./DeleteReceipt\";\r\nimport PaymentView from \"./PaymentView\";\r\nimport { IRootState } from \"../Reducers/Index\";\r\nimport { compose } from \"recompose\";\r\nimport { connect } from \"react-redux\";\r\nimport { payShowDialog } from \"../Reducers/PaymentReducer\";\r\nimport { productDialogShow } from \"../Reducers/ProductReducer\";\r\nimport { deleteReceiptShow, changeQuantityShow, removeItemFromReceipt, getCurrentReceipt } from \"../Reducers/ReceiptReducer\";\r\nimport { endShiftShow, startShiftShow, getCurrentShift, startShiftExistingShow } from \"../Reducers/ShiftReducer\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        layout: {\r\n            width: \"auto\",\r\n            marginLeft: theme.spacing.unit * 3,\r\n            marginRight: theme.spacing.unit * 3,\r\n            marginTop: theme.spacing.unit * 3,\r\n            [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\r\n                marginLeft: theme.spacing.unit * 2,\r\n                marginRight: theme.spacing.unit * 2\r\n            }\r\n        },\r\n        divider: {\r\n            marginTop: theme.spacing.unit * 2\r\n        },\r\n        paper: {\r\n            marginBottom: theme.spacing.unit * 2\r\n        }\r\n    });\r\nconst keyMap = {\r\n    PRODUCTS: \"ins\",\r\n    QUANTITY: \"f6\",\r\n    REMOVE_ITEM: \"f3\",\r\n    REMOVE_RECEIPT: \"f4\",\r\n    PAY: \"f12\"\r\n};\r\n\r\nclass MainView extends React.Component<any, any> {\r\n    handlers: any;\r\n    constructor(props) {\r\n        super(props);\r\n        this.handlers = {\r\n            PRODUCTS: this.handle.handleProductList,\r\n            QUANTITY: this.handle.handleChangeQuantity,\r\n            REMOVE_ITEM: this.handle.handleRemoveReceiptItem,\r\n            REMOVE_RECEIPT: this.handle.handleCancelReceipt,\r\n            PAY: this.handle.handlePay\r\n        };\r\n    }\r\n    handle = {\r\n        handleProductList: event => {\r\n            if (this.props.shift.isOpen) this.props.productDialogShow();\r\n        },\r\n        handleChangeQuantity: (event: any) => {\r\n            if (this.props.canChangeQuantity) {\r\n                event.preventDefault();\r\n                this.props.changeQuantityShow();\r\n            }\r\n        },\r\n        handlePay: (event: any) => {\r\n            if (this.props.canPay) {\r\n                event.preventDefault();\r\n                this.props.payShowDialog(this.props.receipt.id);\r\n            }\r\n        },\r\n        handleRemoveReceiptItem: (event: any) => {\r\n            if (this.props.canRemoveItem) {\r\n                event.preventDefault();\r\n                this.props.removeItemFromReceipt(this.props.receipt.id, this.props.receipt.selectedReceiptItem || 1);\r\n            }\r\n        },\r\n        handleCancelReceipt: (event: any) => {\r\n            if (this.props.canCancelReceipt) this.props.deleteReceiptShow();\r\n        },\r\n        handleCloseShift: (event: any) => {\r\n            if (this.props.shift.canCloseShift) this.props.endShiftShow();\r\n        },\r\n        handleOpenShift: (event: any) => {\r\n            if (this.props.shift.canOpenShift)\r\n                if (this.props.shift.isCreated) this.props.startShiftExistingShow();\r\n                else this.props.startShiftShow();\r\n        }\r\n    };\r\n    componentDidMount() {}\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <AppBar position=\"static\" color=\"primary\">\r\n                    <Toolbar variant=\"dense\">\r\n                        <Typography variant=\"h6\" color=\"inherit\">\r\n                            Biovert POS\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <div className={classes.layout}>\r\n                    <HotKeys keyMap={keyMap} handlers={this.handlers}>\r\n                        <Paper className={classes.paper}>\r\n                            <TopMenu {...this.handle} />\r\n                        </Paper>\r\n                        <Paper className={classes.paper}>\r\n                            <ReceiptView />\r\n                        </Paper>\r\n                        <Paper className={classes.paper}>\r\n                            <BottomMenu />\r\n                        </Paper>\r\n                    </HotKeys>\r\n                    <TillManagement />\r\n                    <ProductList />\r\n                    <ChangeQuantity />\r\n                    <DeleteReceipt />\r\n                    <PaymentView />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (store: IRootState) => ({\r\n    ...store\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    payShowDialog,\r\n    productDialogShow,\r\n    deleteReceiptShow,\r\n    changeQuantityShow,\r\n    endShiftShow,\r\n    startShiftShow,\r\n    getCurrentShift,\r\n    startShiftExistingShow,\r\n    removeItemFromReceipt,\r\n    getCurrentReceipt\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\ntype MainViewProps = StyledComponentProps & StateProps & DispatchProps;\r\nexport default compose<MainViewProps, {}>(\r\n    withStyles(styles),\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )\r\n)(MainView);\r\n","import shift, { ShiftState } from \"./ShiftReducer\";\r\nimport product, { ProductState } from \"./ProductReducer\";\r\nimport receipt, { ReceiptState } from \"./ReceiptReducer\";\r\nimport payment, { PaymentState } from \"./PaymentReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport interface IRootState {\r\n    readonly payment: PaymentState;\r\n    readonly receipt: ReceiptState;\r\n    readonly product: ProductState;\r\n    readonly shift: ShiftState;\r\n}\r\n\r\nconst rootReducer = combineReducers<IRootState>({\r\n    payment,\r\n    receipt,\r\n    product,\r\n    shift\r\n});\r\n\r\nexport default rootReducer;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport MainView from './Components/MainView';\r\nimport { createStyles, Theme, withStyles } from '@material-ui/core';\r\nimport './fonts.css';\r\nimport './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport initStore from './Stores/AppStore';\r\nimport {IntlProvider} from 'react-intl'\r\n\r\nconst store = initStore();\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  root: {\r\n    flexGrow: 1\r\n  }\r\n});\r\nclass App extends Component<any, any> {\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n        <div className={classes.root}>\r\n        <Provider store={store}>\r\n        <IntlProvider locale=\"pl\" defaultLocale=\"pl\">\r\n            <Router>\r\n                <Route path=\"/\" component={MainView} />\r\n            </Router>\r\n            </IntlProvider>\r\n            </Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(App);","import { Store, createStore, applyMiddleware, compose } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {AppState} from \"../State/AppState\";\r\nimport promise from 'redux-promise-middleware'\r\nimport logger from \"redux-logger\";\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer, { IRootState } from \"../Reducers/Index\";\r\n\r\n// const defaultMiddlewares = [\r\n//     thunk,\r\n//     promise,\r\n//     logger\r\n//   ];\r\n\r\n// const composedMiddlewares = (middlewares: any) => compose(applyMiddleware(...defaultMiddlewares, ...middlewares))\r\n\r\nconst AppStore = (initialState?: IRootState) => createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(promise(), logger, thunk)));\r\nexport default AppStore;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst palette = {\r\n  primary: { main: '#2E7D32' },\r\n  secondary: { main: '#FFB300' },\r\n  error: { main: '#f44336'}\r\n};\r\n\r\nexport default createMuiTheme({ palette });","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core';\r\nimport theme from './Theme';\r\n\r\nReactDOM.render(<MuiThemeProvider theme={theme}><App /></MuiThemeProvider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}