{"version":3,"sources":["config.ts","Actions/Utils.ts","Reducers/ReceiptReducer.ts","Components/ReceiptDetails.tsx","Components/ReceiptSummary.tsx","Components/ReceiptView.tsx","Components/TopMenuButton.tsx","Reducers/ShiftReducer.ts","API/api.ts","Reducers/ProductReducer.ts","Components/ProductList.tsx","Components/ChangeQuantity.tsx","Components/DeleteReceipt.tsx","Reducers/PaymentReducer.ts","Components/PaymentView.tsx","Components/TopMenu.tsx","Components/TillManagement.tsx","Components/BottomMenu.tsx","Components/MainView.tsx","Reducers/Index.ts","App.tsx","Stores/AppStore.ts","serviceWorker.ts","Theme.tsx","index.tsx"],"names":["config","FAILURE","a","REJECTED","SUCCESS","FULFILLED","initialState","items","selectedReceiptItem","selectedReceiptItemQuantity","receiptTotal","isLoading","canCancelReceipt","canRemoveItem","canChangeQuantity","canPay","id","isCancelled","isClosed","isOpen","showQuantityDialog","showReceiptCancelDialog","ACTIONS","deleteReceiptCancel","createAction","deleteReceiptShow","changeQuantityShow","changeQuantityCancel","selectReceiptItem","getCurrentReceipt","axios","post","get","removeItemFromReceipt","receiptId","receiptItemId","delete","addItemToReceipt","ean","dispatch","getState","product","products","findIndex","element","type","payload","deleteReceiptSubmit","changeQuantitySubmit","quantity","ReceiptDetails","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","el","createRef","state","selectedId","rows","length","newProps","setState","current","scrollIntoView","_this2","event","_this3","_this$props","c","classes","react_default","createElement","index_es","className","table","headerCell","map","row","key","hover","onClick","selectRow","bind","selected","cell","ordinalNumber","component","scope","name","unit","price","value","ref","React","Component","mapDispatchToProps","compose","withStyles","theme","createStyles","paddingLeft","spacing","paddingRight","fontSize","position","top","zIndex","backgroundColor","connect","store","receipt","ReceiptSummary","container","item","md","variant","ReceiptView","selectedEan","detailsGrid","Components_ReceiptDetails","summaryGrid","Components_ReceiptSummary","borderLeft","padding","minHeight","maxHeight","overflowY","objectSpread","TopMenuButton","fullWidth","size","button","disabled","children","text","height","marginTop","marginBottom","endMoney","startMoney","startDeposit","numberOfReceipts","cancelledReceiptsCount","removedItemsCount","sales","isCreated","showStartShift","showEndShift","showDialog","canOpenShift","canCloseShift","startShiftShow","Axios","getCurrentShift","startShiftSubmit","depositAmount","shiftId","startShiftShowCancel","endShiftShow","endShiftShowCancel","endShiftSubmit","startShiftExistingShow","BASE_PATH","replace","BaseAPI","configuration","basePath","arguments","undefined","globalAxios","RequiredError","_Error","field","msg","inherits","wrapNativeSuper","Error","ProductApiAxiosParamCreator","productGetAll","baseOptions","options","localVarUrlObj","url","localVarRequestOptions","assign","method","query","search","headers","productGetProduct","eanCode","localVarPath","concat","encodeURIComponent","String","productGetProduct2","productId","productSearchProduct","ProductApiFp","localVarAxiosArgs","axiosRequestArgs","request","ProductApi","_BaseAPI2","apply","createClass","showProductDialog","errorMessage","selectedProduct","canSearchProduct","productFetch","productDialogClose","productDialogShow","eanValue","columns","label","filter","sort","ProductList","target","rowData","rowMeta","filterType","responsive","download","print","selectableRows","onRowClick","handleRowClick","elevation","open","maxWidth","dialog","grid","autoFocus","margin","onChange","handleTextChange","color","handleSubmit","handleCancel","dist_default","title","data","tax","minWidth","ChangeQuantity","q","Number","isNaN","select","nextProps","preventDefault","InputProps","inputField","onKeyDown","handleEnterKey","onFocus","handleFocus","typography","h4","showPayDialog","amount","amountPayed","change","payShowDialog","payCancelDialog","Transition","direction","PaymentView","amountString","TransitionComponent","paper","onKeyPress","handleKeys","handleChange","lib_index_es","style","currency","paySubmit","paymentId","then","response","payment","TopMenu","handleProductList","handleChangeQuantity","handlePay","handleRemoveReceiptItem","handleCancelRecceipt","handleCloseShift","handleOpenShift","shift","mainGrid","Components_TopMenuButton","icons_index_es","icon","Components_ProductList","Components_ChangeQuantity","DeleteReceipt","Components_PaymentView","marginRight","TillManagement","handleEnter","handleChangeAmount","handleSubmitStartShift","handleCancelStartShift","handleSubmitCloseShift","handleCancelCloseShift","startShift","BottomMenu","defineProperty","handlePickProduct","textField","InputLabelProps","handleEanChange","marginLeft","MainView","layout","Components_TopMenu","Components_ReceiptView","Components_BottomMenu","Components_TillManagement","width","breakpoints","up","divider","rootReducer","combineReducers","action","find","PENDING","createStore","applyMiddleware","promise","logger","thunk","initStore","App","root","es","locale","defaultLocale","BrowserRouter","Route","path","flexGrow","Boolean","window","location","hostname","match","createMuiTheme","palette","primary","main","secondary","error","ReactDOM","render","core_styles","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ab0dbf19.chunk.js","sourcesContent":["export const config = {\r\n    apiAddress: process.env.NODE_ENV === \"production\" ? \"/\" : \"http://localhost:5000/\"\r\n}","import { REJECTED, PENDING, FULFILLED } from \"redux-promise-middleware\";\r\n\r\nexport const FETCHING = (a: string) => {\r\n    return a + \"_\" + PENDING;\r\n}\r\n\r\nexport const FAILURE = (a: string) => {\r\n    return a + \"_\" + REJECTED;\r\n}\r\n\r\nexport const SUCCESS = (a: string) => {\r\n    return a + \"_\" + FULFILLED;\r\n}","import ReceiptItem from \"../Models/ReceiptItem\";\r\nimport { config } from \"../config\";\r\nimport axios from \"axios\";\r\nimport { createAction } from \"redux-actions\";\r\nimport { SUCCESS } from \"../Actions/Utils\";\r\nimport { IRootState } from \"./Index\";\r\nimport Product from \"../Models/Product\";\r\n\r\nconst initialState = {\r\n    items: [] as ReceiptItem[],\r\n    selectedReceiptItem: null,\r\n    selectedReceiptItemQuantity: 1,\r\n    receiptTotal: \"0 zł\",\r\n    isLoading: false,\r\n    canCancelReceipt: false,\r\n    canRemoveItem: false,\r\n    canChangeQuantity: false,\r\n    canPay: false,\r\n    id: 0,\r\n    isCancelled: false,\r\n    isClosed: false,\r\n    isOpen: false,\r\n    showQuantityDialog: false,\r\n    showReceiptCancelDialog: false\r\n};\r\n\r\nconst ACTIONS = {\r\n    ADD_ITEM: \"receipt/ADD_ITEM\",\r\n    CREATERECEIPT_SUBMIT: \"receipt/CREATERECEIPT_SUBMIT\",\r\n    GETCURRENTRECEIPT: \"receipt/GETCURRENTRECEIPT\",\r\n    REMOVE_ITEM: \"receipt/REMOVE_ITEM\",\r\n    DELETERECEIPT_SUBMIT: \"receipt/DELETERECEIPT_SUBMIT\",\r\n    DELETERECEIPT_SHOW: \"receipt/DELETERECEIPT_SHOW\",\r\n    CHANGEQUANTITY_SUBMIT: \"receipt/CHANGEQUANTITY_SUBMIT\",\r\n    CHANGEQUANTITY_SHOW: \"receipt/CHANGEQUANTITY_SHOW\",\r\n    SELECTRECEIPTITEM: \"receipt/SELECTRECEIPTITEM\",\r\n    CHANGEQUANTITY_CANCEL: \"receipt/CHANGEQUANTITY_CANCEL\",\r\n    DELETERECEIPT_CANCEL: \"receipt/DELETERECEIPT_CANCEL\",\r\n    RESET: \"receipt/RESET\"\r\n};\r\nexport const deleteReceiptCancel = createAction(ACTIONS.DELETERECEIPT_CANCEL);\r\nexport const deleteReceiptShow = createAction(ACTIONS.DELETERECEIPT_SHOW);\r\nexport const changeQuantityShow = createAction(ACTIONS.CHANGEQUANTITY_SHOW);\r\nexport const changeQuantityCancel = createAction(ACTIONS.CHANGEQUANTITY_CANCEL);\r\nexport const selectReceiptItem = createAction(ACTIONS.SELECTRECEIPTITEM, (id: number) => id);\r\n\r\nexport const createReceiptSubmit = createAction(ACTIONS.CREATERECEIPT_SUBMIT, () => {\r\n    return axios.post(config.apiAddress + \"api/receipt\");\r\n});\r\nexport const getCurrentReceipt = createAction(ACTIONS.GETCURRENTRECEIPT, () => {\r\n    return axios.get(config.apiAddress + \"api/receipt\");\r\n});\r\nexport const removeItemFromReceipt = createAction(ACTIONS.REMOVE_ITEM, (receiptId: number, receiptItemId: number) => {\r\n    return axios.delete(config.apiAddress + \"api/receipt/\" + receiptId + \"/\" + receiptItemId);\r\n});\r\n// export const addItemToReceipt = createAction(ACTIONS.ADD_ITEM, (ean: string) => {\r\n//     return axios.post(config.apiAddress + \"api/receipt/\" + ean);\r\n// });\r\nexport const addItemToReceipt = (ean: string) => (dispatch, getState: () => IRootState) => {\r\n    var products = getState().product.products;\r\n    var found =\r\n        products.findIndex((element: Product) => {\r\n            return element.ean == ean;\r\n        }) > -1;\r\n    if (found) {\r\n        //     axios.post(config.apiAddress + \"api/receipt/\" + ean).then()\r\n        // }\r\n        dispatch({\r\n            type: ACTIONS.ADD_ITEM,\r\n            payload: axios.post(config.apiAddress + \"api/receipt/\" + ean)\r\n        });\r\n    } else {\r\n        dispatch({\r\n            type: \"products/SHOW_PRODUCTS_DIALOG\"\r\n        })\r\n    }\r\n};\r\nexport const deleteReceiptSubmit = createAction(ACTIONS.DELETERECEIPT_SUBMIT, (receiptId: number) => {\r\n    return axios.delete(config.apiAddress + \"api/receipt/\" + receiptId);\r\n});\r\nexport const changeQuantitySubmit = createAction(ACTIONS.CHANGEQUANTITY_SUBMIT, (id: number, quantity: number) => {\r\n    return axios.post(config.apiAddress + \"api/receipt/change\", { id: id, quantity: quantity });\r\n});\r\n\r\nexport type ReceiptState = Readonly<typeof initialState>;\r\n\r\nexport default (state: ReceiptState = initialState, action: any): ReceiptState => {\r\n    switch (action.type) {\r\n        case ACTIONS.CHANGEQUANTITY_SHOW:\r\n            const item = state.items.find((item: ReceiptItem) => {\r\n                return item.id == state.selectedReceiptItem\r\n            });\r\n            const q = item ? item.quantity : 1;\r\n            return {\r\n                ...state,\r\n                showQuantityDialog: true,\r\n                selectedReceiptItemQuantity: q\r\n            }\r\n            case ACTIONS.RESET:\r\n            return {\r\n                ...initialState\r\n            }\r\n            case ACTIONS.DELETERECEIPT_SHOW:\r\n            return {\r\n                ...state,\r\n                showReceiptCancelDialog: true\r\n            }\r\n            case ACTIONS.DELETERECEIPT_CANCEL:\r\n            return {\r\n                ...state,\r\n                showReceiptCancelDialog: false\r\n            }\r\n        case ACTIONS.CHANGEQUANTITY_CANCEL:\r\n            return {\r\n                ...state,\r\n                showQuantityDialog: false\r\n            }\r\n        case ACTIONS.SELECTRECEIPTITEM:\r\n            return {\r\n                ...state,\r\n                selectedReceiptItem: action.payload\r\n            }\r\n        case SUCCESS(ACTIONS.DELETERECEIPT_SUBMIT):\r\n            return {\r\n                ...initialState\r\n            };\r\n        case SUCCESS(ACTIONS.CREATERECEIPT_SUBMIT):\r\n            return {\r\n                ...state,\r\n                ...action.payload.data\r\n            };\r\n        case SUCCESS(ACTIONS.GETCURRENTRECEIPT):\r\n            var receipt = action.payload.data as ReceiptState;\r\n\r\n            var selectedReceiptItem = receipt.items && receipt.items.length > 0 ? receipt.items[receipt.items.length - 1].id : null;\r\n            return {\r\n                ...state,\r\n                ...action.payload.data,\r\n                selectedReceiptItem\r\n            };\r\n        case SUCCESS(ACTIONS.CHANGEQUANTITY_SUBMIT):\r\n            return {\r\n                ...state,\r\n                ...action.payload.data,\r\n                showQuantityDialog: false\r\n            };\r\n        case SUCCESS(ACTIONS.ADD_ITEM):\r\n            var receipt = action.payload.data as ReceiptState;\r\n            var selectedReceiptItem = receipt.items && receipt.items.length > 0 ? receipt.items[receipt.items.length - 1].id : null;\r\n            return {\r\n                ...state,\r\n                ...action.payload.data,\r\n                selectedReceiptItem\r\n            };\r\n        case SUCCESS(ACTIONS.REMOVE_ITEM):\r\n        var receipt = action.payload.data as ReceiptState;\r\n        var selectedReceiptItem = receipt.items && receipt.items.length > 0 ? receipt.items[receipt.items.length - 1].id : null;\r\n            return {\r\n                ...state,\r\n                ...action.payload.data,\r\n                selectedReceiptItem\r\n            };\r\n\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n};\r\n","import React, { createRef } from \"react\";\r\nimport { Table, TableHead, TableRow, TableCell, TableBody, Theme, createStyles, withStyles, StyledComponentProps } from \"@material-ui/core\";\r\nimport { compose } from \"recompose\";\r\nimport { connect } from \"react-redux\";\r\nimport { IRootState } from \"../Reducers/Index\";\r\nimport { selectReceiptItem } from \"../Reducers/ReceiptReducer\";\r\nimport ReceiptItem from \"../Models/ReceiptItem\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    table: {\r\n        paddingLeft: theme.spacing.unit,\r\n        paddingRight: theme.spacing.unit        \r\n    },\r\n    cell: {\r\n        fontSize: \"1rem\"\r\n    },\r\n    headerCell: { \r\n        fontSize: \"1rem\",\r\n        position: \"sticky\",\r\n        top: 0,\r\n        zIndex: 10,\r\n        backgroundColor: \"white\"\r\n    }\r\n});\r\ntype ReceiptDetailsState = {\r\n    selectedId: number | null;\r\n}\r\ntype BaseProps = {\r\n    rows: ReceiptItem[]\r\n}\r\n\r\nclass ReceiptDetails extends React.Component<ReceiptDetailsProps, ReceiptDetailsState> {\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            selectedId: this.props.rows.length || null\r\n        }\r\n    }\r\n    componentWillReceiveProps(newProps: any){\r\n        if  (newProps !== this.props){\r\n            if (this.props.rows && this.props.rows.length > 0)\r\n                this.setState({selectedId: this.props.rows.length});\r\n            else    \r\n                this.setState({selectedId: null});\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (this.el && this.el.current)\r\n            this.el.current.scrollIntoView();\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.el && this.el.current)\r\n            this.el.current.scrollIntoView();\r\n    }\r\n    selectRow(id: number) {\r\n        return (event: any) => {\r\n            this.props.selectReceiptItem(id);\r\n        }\r\n    }\r\n    el = createRef<HTMLDivElement>();\r\n    render() {\r\n        const { rows, classes } = this.props;\r\n        const c = classes || {};\r\n        return <div><Table className={c.table}>\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell className={c.headerCell}>Lp.</TableCell>\r\n                    <TableCell className={c.headerCell}>EAN</TableCell>\r\n                    <TableCell className={c.headerCell}>Nazwa</TableCell>\r\n                    <TableCell className={c.headerCell}>Ilość</TableCell>\r\n                    <TableCell className={c.headerCell}>Jm</TableCell>\r\n                    <TableCell className={c.headerCell}>Cena</TableCell>\r\n                    <TableCell className={c.headerCell}>Wartość</TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {rows && rows.map((row: any) => {\r\n                    return (\r\n                        <TableRow key={row.id} hover={true} onClick={this.selectRow(row.id).bind(this)} selected={this.props.selectedReceiptItem == row.id}>\r\n                            <TableCell className={c.cell}>{row.ordinalNumber + \".\"}</TableCell>\r\n                            <TableCell className={c.cell} component=\"th\" scope=\"row\">{row.ean}</TableCell>\r\n                            <TableCell className={c.cell}>{row.name}</TableCell>\r\n                            <TableCell className={c.cell}>{row.quantity}</TableCell>\r\n                            <TableCell className={c.cell}>{row.unit}</TableCell>\r\n                            <TableCell className={c.cell}>{row.price}</TableCell>\r\n                            <TableCell className={c.cell}>{row.value}</TableCell>\r\n                        </TableRow>\r\n                    );\r\n                })}\r\n            </TableBody>\r\n        </Table>\r\n        <div ref={this.el}/>\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store: IRootState) => ({\r\n    selectedReceiptItem: store.receipt.selectedReceiptItem\r\n});\r\n\r\nconst mapDispatchToProps = { selectReceiptItem };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\ntype ReceiptDetailsProps = StyledComponentProps & StateProps & DispatchProps & BaseProps;\r\nexport default compose<ReceiptDetailsProps, BaseProps>(\r\n    withStyles(styles),\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )\r\n)(ReceiptDetails);","import React from \"react\";\r\nimport { List, ListItem, ListItemText, createStyles, withStyles, Theme, Grid, Typography } from \"@material-ui/core\";\r\n\r\nconst styles = (theme: Theme) => createStyles({});\r\n\r\nclass ReceiptSummary extends React.Component<any> {\r\n    render() {\r\n        return <List>\r\n            <ListItem>\r\n                <Grid container>\r\n                <Grid item md={6}>\r\n                <Typography variant=\"h6\">Suma</Typography>\r\n                </Grid>\r\n                <Grid item md={6}>\r\n                <Typography variant=\"h2\">{this.props.receiptTotal}</Typography>\r\n                </Grid>\r\n                </Grid>\r\n            </ListItem>\r\n        </List>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ReceiptSummary)","import React from \"react\";\r\nimport { Grid, withStyles, Theme, createStyles, StyledComponentProps } from \"@material-ui/core\";\r\nimport ReceiptDetails from \"./ReceiptDetails\";\r\nimport ReceiptSummary from \"./ReceiptSummary\";\r\nimport { IRootState } from \"../Reducers/Index\";\r\nimport { compose } from \"recompose\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    summaryGrid: {\r\n        borderLeft: \"1px solid lightgray\"\r\n    },\r\n    detailsGrid: {\r\n        padding: theme.spacing.unit * 1,\r\n        minHeight: \"500px\",\r\n        maxHeight: \"500px\",\r\n        overflowY: \"scroll\",\r\n        backgroundColor: \"white\"\r\n    }\r\n});\r\n\r\ntype ReceiptViewState = {\r\n    selectedEan: string;\r\n}\r\nclass ReceiptView extends React.Component<ReceiptViewProps, ReceiptViewState> {\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            selectedEan: \"\"\r\n        }\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const c = classes || {};\r\n        return <Grid container >\r\n            <Grid item className={c.detailsGrid} md={9}>\r\n                <ReceiptDetails rows={this.props.items}/>\r\n            </Grid>\r\n            <Grid item md={3} className={c.summaryGrid}>\r\n                <ReceiptSummary receiptTotal={this.props.receiptTotal}/>\r\n            </Grid>\r\n        </Grid>\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {  };\r\n\r\nconst mapStateToProps = (store: IRootState) => ({\r\n    ...store.receipt\r\n});\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\ntype ReceiptViewProps = StyledComponentProps & StateProps & DispatchProps;\r\nexport default compose<ReceiptViewProps, {}>(\r\n    withStyles(styles),\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )\r\n)(ReceiptView);","import { createStyles, Theme, withStyles, Grid, Button, WithStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\ntype TopMenuButtonProps = WithStyles & {\r\n    text: string;\r\n    onClick?: (event:any) => void;\r\n    disabled?: boolean;\r\n}\r\nconst styles = (theme: Theme) => createStyles({\r\n    button: {\r\n        height: theme.spacing.unit * 14,\r\n        marginTop: theme.spacing.unit * 2,\r\n        marginBottom: theme.spacing.unit * 2\r\n      }\r\n});\r\n\r\nclass TopMenuButton extends React.Component<TopMenuButtonProps> {\r\n    render() {\r\n        const {classes} = this.props;\r\n        return <Grid item md={2}>\r\n        <Button\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          size=\"large\"\r\n          className={classes.button}\r\n          onClick={this.props.onClick}\r\n          disabled={this.props.disabled}\r\n        >\r\n          <Grid container>\r\n            <Grid item md={12}>\r\n              {this.props.children}\r\n            </Grid>\r\n            <Grid item md={12}>\r\n              {this.props.text}\r\n            </Grid>\r\n          </Grid>\r\n        </Button>\r\n      </Grid>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(TopMenuButton);","import { createAction } from \"redux-actions\";\r\nimport Axios from \"axios\";\r\nimport { config } from \"../config\";\r\nimport { SUCCESS, FAILURE } from \"../Actions/Utils\";\r\n\r\nconst initialState = {\r\n    endMoney: 0,\r\n    startMoney: 0,\r\n    startDeposit: 0,\r\n    numberOfReceipts: 0,\r\n    cancelledReceiptsCount: 0,\r\n    removedItemsCount: 0,\r\n    sales: 0,\r\n    isCreated: false,\r\n    isOpen: false,\r\n    isLoading: false,\r\n    showStartShift: false,\r\n    showEndShift: false,\r\n    showDialog: false,\r\n    canOpenShift: true,\r\n    canCloseShift: false,\r\n    id: 0\r\n};\r\n\r\nconst ACTIONS = {\r\n    STARTSHIFT_SHOW: \"shift/STARTSHIFT_SHOW\",\r\n    GETCURRENTSHIFT: \"shift/GETCURRENTSHIFT\",\r\n    CLOSESHIFT_SHOW: \"shift/CLOSESHIFT_SHOW\",\r\n    CLOSESHIFT_CANCEL: \"shift/CLOSESHIFT_CANCEL\",\r\n    CLOSESHIFT_SUBMIT: \"shift/CLOSESHIFT_SUBMIT\",\r\n    STARTSHIFT_SUBMIT: \"shift/STARTSHIFT_SUBMIT\",\r\n    STARTSHIFT_CANCEL: \"shfit/STARTSHIFT_CANCEL\",\r\n    STARTSHIFTEXISTING_SHOW: \"shift/STARTSHIFTEXISTING_SHOW\"\r\n};\r\n\r\nexport const startShiftShow = createAction(ACTIONS.STARTSHIFT_SHOW, () => {\r\n    return Axios.post(config.apiAddress + \"api/shift\");\r\n});\r\nexport const getCurrentShift = createAction(ACTIONS.GETCURRENTSHIFT, () => {\r\n    return Axios.get(config.apiAddress + \"api/shift\");\r\n});\r\n\r\nexport const startShiftSubmit = createAction(ACTIONS.STARTSHIFT_SUBMIT, (id: number, depositAmount: number) => {\r\n    return Axios.post(config.apiAddress + \"api/shift/start\", { shiftId: id, depositAmount: depositAmount });\r\n});\r\n\r\nexport const startShiftShowCancel = createAction(ACTIONS.STARTSHIFT_CANCEL);\r\nexport const endShiftShow = createAction(ACTIONS.CLOSESHIFT_SHOW);\r\nexport const endShiftShowCancel = createAction(ACTIONS.CLOSESHIFT_CANCEL);\r\nexport const endShiftSubmit = createAction(ACTIONS.CLOSESHIFT_SUBMIT, () => {\r\n    return Axios.post(config.apiAddress + \"api/shift/close\");\r\n});\r\nexport const startShiftExistingShow = createAction(ACTIONS.STARTSHIFTEXISTING_SHOW);\r\n\r\nexport type ShiftState = Readonly<typeof initialState>;\r\nexport default (state: ShiftState = initialState, action: any): ShiftState => {\r\n    switch (action.type) {\r\n        case SUCCESS(ACTIONS.CLOSESHIFT_SUBMIT):\r\n            return {\r\n                ...state,\r\n                ...action.payload.data,\r\n                showDialog: false,\r\n                canOpenShift: true\r\n            };\r\n        case ACTIONS.CLOSESHIFT_CANCEL:\r\n        case ACTIONS.STARTSHIFT_CANCEL:\r\n            return {\r\n                ...state,\r\n                showDialog: false\r\n            };\r\n        case SUCCESS(ACTIONS.STARTSHIFT_SUBMIT):\r\n            return {\r\n                ...state,\r\n                ...action.payload.data,\r\n                canOpenShift: false,\r\n                canCloseShift: true,\r\n                showDialog: false\r\n            };\r\n        case SUCCESS(ACTIONS.GETCURRENTSHIFT):\r\n            const shift = action.payload.data;\r\n            return {\r\n                ...state,\r\n                ...shift,\r\n                canCloseShift: shift.isOpen,\r\n                canOpenShift: shift.isCreated && !shift.isOpen\r\n            };\r\n        case FAILURE(ACTIONS.GETCURRENTSHIFT):\r\n            return {\r\n                ...state,\r\n                isOpen: false,\r\n                canOpenShift: true\r\n            };\r\n        case SUCCESS(ACTIONS.STARTSHIFT_SHOW):\r\n            return {\r\n                ...state,\r\n                ...action.payload.data,\r\n                showDialog: true,\r\n                showStartShift: true,\r\n                showEndShift: false\r\n            };\r\n        case ACTIONS.STARTSHIFTEXISTING_SHOW:\r\n            return {\r\n                ...state,\r\n                showDialog: true,\r\n                showStartShift: true,\r\n                showEndShift: false\r\n            };\r\n        case ACTIONS.CLOSESHIFT_SHOW:\r\n            return {\r\n                ...state,\r\n                showDialog: true,\r\n                showEndShift: true,\r\n                showStartShift: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","// tslint:disable\n/// <reference path=\"./custom.d.ts\" />\n/**\n * My Title\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as url from \"url\";\nimport { Configuration } from \"./configuration\";\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\n\nconst BASE_PATH = \"http://localhost:5000\".replace(/\\/+$/, \"\");\n\n/**\n *\n * @export\n */\nexport const COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n\n/**\n *  \n * @export\n * @interface RequestArgs\n */\nexport interface RequestArgs {\n    url: string;\n    options: any;\n}\n\n/**\n * \n * @export\n * @class BaseAPI\n */\nexport class BaseAPI {\n    protected configuration: Configuration | undefined;\n\n    constructor(configuration?: Configuration, protected basePath: string = BASE_PATH, protected axios: AxiosInstance = globalAxios) {\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = configuration.basePath || this.basePath;\n        }\n    }\n};\n\n/**\n * \n * @export\n * @class RequiredError\n * @extends {Error}\n */\nexport class RequiredError extends Error {\n    name: \"RequiredError\" = \"RequiredError\";\n    constructor(public field: string, msg?: string) {\n        super(msg);\n    }\n}\n\n/**\n * \n * @export\n * @interface ChangeQuantityRequest\n */\nexport interface ChangeQuantityRequest {\n    /**\n     * \n     * @type {number}\n     * @memberof ChangeQuantityRequest\n     */\n    id?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof ChangeQuantityRequest\n     */\n    quantity?: number;\n}\n\n/**\n * \n * @export\n * @interface PaymentInfo\n */\nexport interface PaymentInfo {\n    /**\n     * \n     * @type {number}\n     * @memberof PaymentInfo\n     */\n    id?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof PaymentInfo\n     */\n    amount?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof PaymentInfo\n     */\n    amountPayed?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof PaymentInfo\n     */\n    change?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof PaymentInfo\n     */\n    isPayed?: boolean;\n    /**\n     * \n     * @type {number}\n     * @memberof PaymentInfo\n     */\n    receiptId?: number;\n    /**\n     * \n     * @type {Date}\n     * @memberof PaymentInfo\n     */\n    dateCreated?: Date;\n    /**\n     * \n     * @type {Date}\n     * @memberof PaymentInfo\n     */\n    dateModified?: Date;\n}\n\n/**\n * \n * @export\n * @interface PaymentPayload\n */\nexport interface PaymentPayload {\n    /**\n     * \n     * @type {number}\n     * @memberof PaymentPayload\n     */\n    paymentId?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof PaymentPayload\n     */\n    amount?: number;\n}\n\n/**\n * \n * @export\n * @interface Product\n */\nexport interface Product {\n    /**\n     * \n     * @type {number}\n     * @memberof Product\n     */\n    id?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Product\n     */\n    ean?: string | null;\n    /**\n     * \n     * @type {string}\n     * @memberof Product\n     */\n    name?: string | null;\n    /**\n     * \n     * @type {number}\n     * @memberof Product\n     */\n    price?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Product\n     */\n    unit?: string | null;\n    /**\n     * \n     * @type {Tax}\n     * @memberof Product\n     */\n    tax?: Tax | null;\n    /**\n     * \n     * @type {number}\n     * @memberof Product\n     */\n    taxId?: number;\n}\n\n/**\n * \n * @export\n * @interface Receipt\n */\nexport interface Receipt {\n    /**\n     * \n     * @type {number}\n     * @memberof Receipt\n     */\n    id?: number;\n    /**\n     * \n     * @type {Array<ReceiptItem>}\n     * @memberof Receipt\n     */\n    items?: Array<ReceiptItem> | null;\n    /**\n     * \n     * @type {Array<ReceiptItem>}\n     * @memberof Receipt\n     */\n    allItems?: Array<ReceiptItem> | null;\n    /**\n     * \n     * @type {PaymentInfo}\n     * @memberof Receipt\n     */\n    payment?: PaymentInfo | null;\n    /**\n     * \n     * @type {number}\n     * @memberof Receipt\n     */\n    shiftId?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Receipt\n     */\n    isCancelled?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Receipt\n     */\n    isClosed?: boolean;\n    /**\n     * \n     * @type {number}\n     * @memberof Receipt\n     */\n    total?: number;\n    /**\n     * \n     * @type {Date}\n     * @memberof Receipt\n     */\n    dateCreated?: Date;\n    /**\n     * \n     * @type {Date}\n     * @memberof Receipt\n     */\n    dateModified?: Date;\n}\n\n/**\n * \n * @export\n * @interface ReceiptItem\n */\nexport interface ReceiptItem {\n    /**\n     * \n     * @type {number}\n     * @memberof ReceiptItem\n     */\n    id?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof ReceiptItem\n     */\n    ordinalNumber?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ReceiptItem\n     */\n    ean?: string | null;\n    /**\n     * \n     * @type {string}\n     * @memberof ReceiptItem\n     */\n    name?: string | null;\n    /**\n     * \n     * @type {number}\n     * @memberof ReceiptItem\n     */\n    price?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ReceiptItem\n     */\n    unit?: string | null;\n    /**\n     * \n     * @type {number}\n     * @memberof ReceiptItem\n     */\n    productId?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof ReceiptItem\n     */\n    quantity?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof ReceiptItem\n     */\n    value?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof ReceiptItem\n     */\n    isRemoved?: boolean;\n    /**\n     * \n     * @type {number}\n     * @memberof ReceiptItem\n     */\n    receiptId?: number;\n    /**\n     * \n     * @type {Date}\n     * @memberof ReceiptItem\n     */\n    dateCreated?: Date;\n    /**\n     * \n     * @type {Date}\n     * @memberof ReceiptItem\n     */\n    dateModified?: Date;\n    /**\n     * \n     * @type {number}\n     * @memberof ReceiptItem\n     */\n    taxValue?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof ReceiptItem\n     */\n    taxRate?: number;\n}\n\n/**\n * \n * @export\n * @interface Shift\n */\nexport interface Shift {\n    /**\n     * \n     * @type {number}\n     * @memberof Shift\n     */\n    id?: number;\n    /**\n     * \n     * @type {Date}\n     * @memberof Shift\n     */\n    startDate?: Date | null;\n    /**\n     * \n     * @type {Date}\n     * @memberof Shift\n     */\n    endDate?: Date | null;\n    /**\n     * \n     * @type {number}\n     * @memberof Shift\n     */\n    startMoney?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof Shift\n     */\n    startDeposit?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof Shift\n     */\n    numberOfReceipts?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Shift\n     */\n    isClosed?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Shift\n     */\n    isOpen?: boolean;\n    /**\n     * \n     * @type {number}\n     * @memberof Shift\n     */\n    cancelledReceiptsCount?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof Shift\n     */\n    removedItemsCount?: number;\n    /**\n     * \n     * @type {Array<Receipt>}\n     * @memberof Shift\n     */\n    receipts?: Array<Receipt> | null;\n    /**\n     * \n     * @type {number}\n     * @memberof Shift\n     */\n    endMoney?: number;\n}\n\n/**\n * \n * @export\n * @interface ShiftStartPayload\n */\nexport interface ShiftStartPayload {\n    /**\n     * \n     * @type {number}\n     * @memberof ShiftStartPayload\n     */\n    depositAmount?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof ShiftStartPayload\n     */\n    shiftId?: number;\n}\n\n/**\n * \n * @export\n * @interface Tax\n */\nexport interface Tax {\n    /**\n     * \n     * @type {number}\n     * @memberof Tax\n     */\n    id?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Tax\n     */\n    symbol?: string | null;\n    /**\n     * \n     * @type {string}\n     * @memberof Tax\n     */\n    fiscalSymbol?: string | null;\n    /**\n     * \n     * @type {number}\n     * @memberof Tax\n     */\n    value?: number;\n}\n\n\n/**\n * PaymentApi - axios parameter creator\n * @export\n */\nexport const PaymentApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Create an empty payment object for the current receipt\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        paymentCreate(options: any = {}): RequestArgs {\n            const localVarPath = `/api/Payment`;\n            const localVarUrlObj = url.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign({ method: 'POST' }, baseOptions, options);\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Get payment summary for a given receipt\n         * @param {number} receiptId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        paymentGet(receiptId: number, options: any = {}): RequestArgs {\n            // verify required parameter 'receiptId' is not null or undefined\n            if (receiptId === null || receiptId === undefined) {\n                throw new RequiredError('receiptId','Required parameter receiptId was null or undefined when calling paymentGet.');\n            }\n            const localVarPath = `/api/Payment/{receiptId}`\n                .replace(`{${\"receiptId\"}}`, encodeURIComponent(String(receiptId)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign({ method: 'GET' }, baseOptions, options);\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Confirm payment of receipt\n         * @param {PaymentPayload} paymentPayload \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        paymentPayAmount(paymentPayload: PaymentPayload, options: any = {}): RequestArgs {\n            // verify required parameter 'paymentPayload' is not null or undefined\n            if (paymentPayload === null || paymentPayload === undefined) {\n                throw new RequiredError('paymentPayload','Required parameter paymentPayload was null or undefined when calling paymentPayAmount.');\n            }\n            const localVarPath = `/api/Payment/pay`;\n            const localVarUrlObj = url.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign({ method: 'POST' }, baseOptions, options);\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = (<any>\"PaymentPayload\" !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(paymentPayload || {}) : (paymentPayload || \"\");\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * PaymentApi - functional programming interface\n * @export\n */\nexport const PaymentApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Create an empty payment object for the current receipt\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        paymentCreate(options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaymentInfo> {\n            const localVarAxiosArgs = PaymentApiAxiosParamCreator(configuration).paymentCreate(options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = Object.assign(localVarAxiosArgs.options, {url: basePath + localVarAxiosArgs.url})\n                return axios.request(axiosRequestArgs);                \n            };\n        },\n        /**\n         * \n         * @summary Get payment summary for a given receipt\n         * @param {number} receiptId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        paymentGet(receiptId: number, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaymentInfo> {\n            const localVarAxiosArgs = PaymentApiAxiosParamCreator(configuration).paymentGet(receiptId, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = Object.assign(localVarAxiosArgs.options, {url: basePath + localVarAxiosArgs.url})\n                return axios.request(axiosRequestArgs);                \n            };\n        },\n        /**\n         * \n         * @summary Confirm payment of receipt\n         * @param {PaymentPayload} paymentPayload \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        paymentPayAmount(paymentPayload: PaymentPayload, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaymentInfo> {\n            const localVarAxiosArgs = PaymentApiAxiosParamCreator(configuration).paymentPayAmount(paymentPayload, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = Object.assign(localVarAxiosArgs.options, {url: basePath + localVarAxiosArgs.url})\n                return axios.request(axiosRequestArgs);                \n            };\n        },\n    }\n};\n\n/**\n * PaymentApi - factory interface\n * @export\n */\nexport const PaymentApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @summary Create an empty payment object for the current receipt\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        paymentCreate(options?: any) {\n            return PaymentApiFp(configuration).paymentCreate(options)(axios, basePath);\n        },\n        /**\n         * \n         * @summary Get payment summary for a given receipt\n         * @param {number} receiptId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        paymentGet(receiptId: number, options?: any) {\n            return PaymentApiFp(configuration).paymentGet(receiptId, options)(axios, basePath);\n        },\n        /**\n         * \n         * @summary Confirm payment of receipt\n         * @param {PaymentPayload} paymentPayload \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        paymentPayAmount(paymentPayload: PaymentPayload, options?: any) {\n            return PaymentApiFp(configuration).paymentPayAmount(paymentPayload, options)(axios, basePath);\n        },\n    };\n};\n\n/**\n * PaymentApi - object-oriented interface\n * @export\n * @class PaymentApi\n * @extends {BaseAPI}\n */\nexport class PaymentApi extends BaseAPI {\n    /**\n     * \n     * @summary Create an empty payment object for the current receipt\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PaymentApi\n     */\n    public paymentCreate(options?: any) {\n        return PaymentApiFp(this.configuration).paymentCreate(options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @summary Get payment summary for a given receipt\n     * @param {number} receiptId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PaymentApi\n     */\n    public paymentGet(receiptId: number, options?: any) {\n        return PaymentApiFp(this.configuration).paymentGet(receiptId, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @summary Confirm payment of receipt\n     * @param {PaymentPayload} paymentPayload \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PaymentApi\n     */\n    public paymentPayAmount(paymentPayload: PaymentPayload, options?: any) {\n        return PaymentApiFp(this.configuration).paymentPayAmount(paymentPayload, options)(this.axios, this.basePath);\n    }\n\n}\n\n/**\n * ProductApi - axios parameter creator\n * @export\n */\nexport const ProductApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Get all products\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        productGetAll(options: any = {}): RequestArgs {\n            const localVarPath = `/api/Product`;\n            const localVarUrlObj = url.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign({ method: 'GET' }, baseOptions, options);\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Get product by EAN code\n         * @param {string} eanCode \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        productGetProduct(eanCode: string, options: any = {}): RequestArgs {\n            // verify required parameter 'eanCode' is not null or undefined\n            if (eanCode === null || eanCode === undefined) {\n                throw new RequiredError('eanCode','Required parameter eanCode was null or undefined when calling productGetProduct.');\n            }\n            const localVarPath = `/api/Product/ean/{eanCode}`\n                .replace(`{${\"eanCode\"}}`, encodeURIComponent(String(eanCode)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign({ method: 'GET' }, baseOptions, options);\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Find product by Id\n         * @param {number} productId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        productGetProduct2(productId: number, options: any = {}): RequestArgs {\n            // verify required parameter 'productId' is not null or undefined\n            if (productId === null || productId === undefined) {\n                throw new RequiredError('productId','Required parameter productId was null or undefined when calling productGetProduct2.');\n            }\n            const localVarPath = `/api/Product/{productId}`\n                .replace(`{${\"productId\"}}`, encodeURIComponent(String(productId)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign({ method: 'GET' }, baseOptions, options);\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Find product by EAN code\n         * @param {string} eanCode \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        productSearchProduct(eanCode: string, options: any = {}): RequestArgs {\n            // verify required parameter 'eanCode' is not null or undefined\n            if (eanCode === null || eanCode === undefined) {\n                throw new RequiredError('eanCode','Required parameter eanCode was null or undefined when calling productSearchProduct.');\n            }\n            const localVarPath = `/api/Product/ean/search/{eanCode}`\n                .replace(`{${\"eanCode\"}}`, encodeURIComponent(String(eanCode)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign({ method: 'GET' }, baseOptions, options);\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * ProductApi - functional programming interface\n * @export\n */\nexport const ProductApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Get all products\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        productGetAll(options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Product>> {\n            const localVarAxiosArgs = ProductApiAxiosParamCreator(configuration).productGetAll(options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = Object.assign(localVarAxiosArgs.options, {url: basePath + localVarAxiosArgs.url})\n                return axios.request(axiosRequestArgs);                \n            };\n        },\n        /**\n         * \n         * @summary Get product by EAN code\n         * @param {string} eanCode \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        productGetProduct(eanCode: string, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Product> {\n            const localVarAxiosArgs = ProductApiAxiosParamCreator(configuration).productGetProduct(eanCode, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = Object.assign(localVarAxiosArgs.options, {url: basePath + localVarAxiosArgs.url})\n                return axios.request(axiosRequestArgs);                \n            };\n        },\n        /**\n         * \n         * @summary Find product by Id\n         * @param {number} productId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        productGetProduct2(productId: number, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Product> {\n            const localVarAxiosArgs = ProductApiAxiosParamCreator(configuration).productGetProduct2(productId, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = Object.assign(localVarAxiosArgs.options, {url: basePath + localVarAxiosArgs.url})\n                return axios.request(axiosRequestArgs);                \n            };\n        },\n        /**\n         * \n         * @summary Find product by EAN code\n         * @param {string} eanCode \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        productSearchProduct(eanCode: string, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Product>> {\n            const localVarAxiosArgs = ProductApiAxiosParamCreator(configuration).productSearchProduct(eanCode, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = Object.assign(localVarAxiosArgs.options, {url: basePath + localVarAxiosArgs.url})\n                return axios.request(axiosRequestArgs);                \n            };\n        },\n    }\n};\n\n/**\n * ProductApi - factory interface\n * @export\n */\nexport const ProductApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @summary Get all products\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        productGetAll(options?: any) {\n            return ProductApiFp(configuration).productGetAll(options)(axios, basePath);\n        },\n        /**\n         * \n         * @summary Get product by EAN code\n         * @param {string} eanCode \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        productGetProduct(eanCode: string, options?: any) {\n            return ProductApiFp(configuration).productGetProduct(eanCode, options)(axios, basePath);\n        },\n        /**\n         * \n         * @summary Find product by Id\n         * @param {number} productId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        productGetProduct2(productId: number, options?: any) {\n            return ProductApiFp(configuration).productGetProduct2(productId, options)(axios, basePath);\n        },\n        /**\n         * \n         * @summary Find product by EAN code\n         * @param {string} eanCode \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        productSearchProduct(eanCode: string, options?: any) {\n            return ProductApiFp(configuration).productSearchProduct(eanCode, options)(axios, basePath);\n        },\n    };\n};\n\n/**\n * ProductApi - object-oriented interface\n * @export\n * @class ProductApi\n * @extends {BaseAPI}\n */\nexport class ProductApi extends BaseAPI {\n    /**\n     * \n     * @summary Get all products\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ProductApi\n     */\n    public productGetAll(options?: any) {\n        return ProductApiFp(this.configuration).productGetAll(options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @summary Get product by EAN code\n     * @param {string} eanCode \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ProductApi\n     */\n    public productGetProduct(eanCode: string, options?: any) {\n        return ProductApiFp(this.configuration).productGetProduct(eanCode, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @summary Find product by Id\n     * @param {number} productId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ProductApi\n     */\n    public productGetProduct2(productId: number, options?: any) {\n        return ProductApiFp(this.configuration).productGetProduct2(productId, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @summary Find product by EAN code\n     * @param {string} eanCode \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ProductApi\n     */\n    public productSearchProduct(eanCode: string, options?: any) {\n        return ProductApiFp(this.configuration).productSearchProduct(eanCode, options)(this.axios, this.basePath);\n    }\n\n}\n\n/**\n * ReceiptApi - axios parameter creator\n * @export\n */\nexport const ReceiptApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Add a new line item by EAN code\n         * @param {string} ean \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        receiptAdd(ean: string, options: any = {}): RequestArgs {\n            // verify required parameter 'ean' is not null or undefined\n            if (ean === null || ean === undefined) {\n                throw new RequiredError('ean','Required parameter ean was null or undefined when calling receiptAdd.');\n            }\n            const localVarPath = `/api/Receipt/{ean}`\n                .replace(`{${\"ean\"}}`, encodeURIComponent(String(ean)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign({ method: 'POST' }, baseOptions, options);\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Change the quantity of a given item on the receipt\n         * @param {ChangeQuantityRequest} changeQuantityRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        receiptChangeQuantity(changeQuantityRequest: ChangeQuantityRequest, options: any = {}): RequestArgs {\n            // verify required parameter 'changeQuantityRequest' is not null or undefined\n            if (changeQuantityRequest === null || changeQuantityRequest === undefined) {\n                throw new RequiredError('changeQuantityRequest','Required parameter changeQuantityRequest was null or undefined when calling receiptChangeQuantity.');\n            }\n            const localVarPath = `/api/Receipt/change`;\n            const localVarUrlObj = url.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign({ method: 'POST' }, baseOptions, options);\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = (<any>\"ChangeQuantityRequest\" !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(changeQuantityRequest || {}) : (changeQuantityRequest || \"\");\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Start a new receipt and return its Id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        receiptCreateReceipt(options: any = {}): RequestArgs {\n            const localVarPath = `/api/Receipt`;\n            const localVarUrlObj = url.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign({ method: 'POST' }, baseOptions, options);\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Delete the whole receipt\n         * @param {number} receiptId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        receiptDelete(receiptId: number, options: any = {}): RequestArgs {\n            // verify required parameter 'receiptId' is not null or undefined\n            if (receiptId === null || receiptId === undefined) {\n                throw new RequiredError('receiptId','Required parameter receiptId was null or undefined when calling receiptDelete.');\n            }\n            const localVarPath = `/api/Receipt/{receiptId}`\n                .replace(`{${\"receiptId\"}}`, encodeURIComponent(String(receiptId)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, baseOptions, options);\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Start a new receipt and return its Id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        receiptGetReceipt(options: any = {}): RequestArgs {\n            const localVarPath = `/api/Receipt`;\n            const localVarUrlObj = url.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign({ method: 'GET' }, baseOptions, options);\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Remove a receipt item by it's Id from a given receipt\n         * @param {number} receiptId \n         * @param {number} receiptItemId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        receiptRemove(receiptId: number, receiptItemId: number, options: any = {}): RequestArgs {\n            // verify required parameter 'receiptId' is not null or undefined\n            if (receiptId === null || receiptId === undefined) {\n                throw new RequiredError('receiptId','Required parameter receiptId was null or undefined when calling receiptRemove.');\n            }\n            // verify required parameter 'receiptItemId' is not null or undefined\n            if (receiptItemId === null || receiptItemId === undefined) {\n                throw new RequiredError('receiptItemId','Required parameter receiptItemId was null or undefined when calling receiptRemove.');\n            }\n            const localVarPath = `/api/Receipt/{receiptId}/{receiptItemId}`\n                .replace(`{${\"receiptId\"}}`, encodeURIComponent(String(receiptId)))\n                .replace(`{${\"receiptItemId\"}}`, encodeURIComponent(String(receiptItemId)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, baseOptions, options);\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * ReceiptApi - functional programming interface\n * @export\n */\nexport const ReceiptApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Add a new line item by EAN code\n         * @param {string} ean \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        receiptAdd(ean: string, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<ReceiptItem> {\n            const localVarAxiosArgs = ReceiptApiAxiosParamCreator(configuration).receiptAdd(ean, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = Object.assign(localVarAxiosArgs.options, {url: basePath + localVarAxiosArgs.url})\n                return axios.request(axiosRequestArgs);                \n            };\n        },\n        /**\n         * \n         * @summary Change the quantity of a given item on the receipt\n         * @param {ChangeQuantityRequest} changeQuantityRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        receiptChangeQuantity(changeQuantityRequest: ChangeQuantityRequest, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<ReceiptItem> {\n            const localVarAxiosArgs = ReceiptApiAxiosParamCreator(configuration).receiptChangeQuantity(changeQuantityRequest, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = Object.assign(localVarAxiosArgs.options, {url: basePath + localVarAxiosArgs.url})\n                return axios.request(axiosRequestArgs);                \n            };\n        },\n        /**\n         * \n         * @summary Start a new receipt and return its Id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        receiptCreateReceipt(options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<number> {\n            const localVarAxiosArgs = ReceiptApiAxiosParamCreator(configuration).receiptCreateReceipt(options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = Object.assign(localVarAxiosArgs.options, {url: basePath + localVarAxiosArgs.url})\n                return axios.request(axiosRequestArgs);                \n            };\n        },\n        /**\n         * \n         * @summary Delete the whole receipt\n         * @param {number} receiptId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        receiptDelete(receiptId: number, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<boolean> {\n            const localVarAxiosArgs = ReceiptApiAxiosParamCreator(configuration).receiptDelete(receiptId, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = Object.assign(localVarAxiosArgs.options, {url: basePath + localVarAxiosArgs.url})\n                return axios.request(axiosRequestArgs);                \n            };\n        },\n        /**\n         * \n         * @summary Start a new receipt and return its Id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        receiptGetReceipt(options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Receipt> {\n            const localVarAxiosArgs = ReceiptApiAxiosParamCreator(configuration).receiptGetReceipt(options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = Object.assign(localVarAxiosArgs.options, {url: basePath + localVarAxiosArgs.url})\n                return axios.request(axiosRequestArgs);                \n            };\n        },\n        /**\n         * \n         * @summary Remove a receipt item by it's Id from a given receipt\n         * @param {number} receiptId \n         * @param {number} receiptItemId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        receiptRemove(receiptId: number, receiptItemId: number, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<boolean> {\n            const localVarAxiosArgs = ReceiptApiAxiosParamCreator(configuration).receiptRemove(receiptId, receiptItemId, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = Object.assign(localVarAxiosArgs.options, {url: basePath + localVarAxiosArgs.url})\n                return axios.request(axiosRequestArgs);                \n            };\n        },\n    }\n};\n\n/**\n * ReceiptApi - factory interface\n * @export\n */\nexport const ReceiptApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @summary Add a new line item by EAN code\n         * @param {string} ean \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        receiptAdd(ean: string, options?: any) {\n            return ReceiptApiFp(configuration).receiptAdd(ean, options)(axios, basePath);\n        },\n        /**\n         * \n         * @summary Change the quantity of a given item on the receipt\n         * @param {ChangeQuantityRequest} changeQuantityRequest \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        receiptChangeQuantity(changeQuantityRequest: ChangeQuantityRequest, options?: any) {\n            return ReceiptApiFp(configuration).receiptChangeQuantity(changeQuantityRequest, options)(axios, basePath);\n        },\n        /**\n         * \n         * @summary Start a new receipt and return its Id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        receiptCreateReceipt(options?: any) {\n            return ReceiptApiFp(configuration).receiptCreateReceipt(options)(axios, basePath);\n        },\n        /**\n         * \n         * @summary Delete the whole receipt\n         * @param {number} receiptId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        receiptDelete(receiptId: number, options?: any) {\n            return ReceiptApiFp(configuration).receiptDelete(receiptId, options)(axios, basePath);\n        },\n        /**\n         * \n         * @summary Start a new receipt and return its Id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        receiptGetReceipt(options?: any) {\n            return ReceiptApiFp(configuration).receiptGetReceipt(options)(axios, basePath);\n        },\n        /**\n         * \n         * @summary Remove a receipt item by it's Id from a given receipt\n         * @param {number} receiptId \n         * @param {number} receiptItemId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        receiptRemove(receiptId: number, receiptItemId: number, options?: any) {\n            return ReceiptApiFp(configuration).receiptRemove(receiptId, receiptItemId, options)(axios, basePath);\n        },\n    };\n};\n\n/**\n * ReceiptApi - object-oriented interface\n * @export\n * @class ReceiptApi\n * @extends {BaseAPI}\n */\nexport class ReceiptApi extends BaseAPI {\n    /**\n     * \n     * @summary Add a new line item by EAN code\n     * @param {string} ean \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ReceiptApi\n     */\n    public receiptAdd(ean: string, options?: any) {\n        return ReceiptApiFp(this.configuration).receiptAdd(ean, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @summary Change the quantity of a given item on the receipt\n     * @param {ChangeQuantityRequest} changeQuantityRequest \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ReceiptApi\n     */\n    public receiptChangeQuantity(changeQuantityRequest: ChangeQuantityRequest, options?: any) {\n        return ReceiptApiFp(this.configuration).receiptChangeQuantity(changeQuantityRequest, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @summary Start a new receipt and return its Id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ReceiptApi\n     */\n    public receiptCreateReceipt(options?: any) {\n        return ReceiptApiFp(this.configuration).receiptCreateReceipt(options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @summary Delete the whole receipt\n     * @param {number} receiptId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ReceiptApi\n     */\n    public receiptDelete(receiptId: number, options?: any) {\n        return ReceiptApiFp(this.configuration).receiptDelete(receiptId, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @summary Start a new receipt and return its Id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ReceiptApi\n     */\n    public receiptGetReceipt(options?: any) {\n        return ReceiptApiFp(this.configuration).receiptGetReceipt(options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @summary Remove a receipt item by it's Id from a given receipt\n     * @param {number} receiptId \n     * @param {number} receiptItemId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ReceiptApi\n     */\n    public receiptRemove(receiptId: number, receiptItemId: number, options?: any) {\n        return ReceiptApiFp(this.configuration).receiptRemove(receiptId, receiptItemId, options)(this.axios, this.basePath);\n    }\n\n}\n\n/**\n * ShiftApi - axios parameter creator\n * @export\n */\nexport const ShiftApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary End the currently active shift\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        shiftClose(options: any = {}): RequestArgs {\n            const localVarPath = `/api/Shift/close`;\n            const localVarUrlObj = url.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign({ method: 'POST' }, baseOptions, options);\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Create and return a new Shift object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        shiftCreate(options: any = {}): RequestArgs {\n            const localVarPath = `/api/Shift`;\n            const localVarUrlObj = url.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign({ method: 'POST' }, baseOptions, options);\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Returns the active shift\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        shiftGetCurrent(options: any = {}): RequestArgs {\n            const localVarPath = `/api/Shift`;\n            const localVarUrlObj = url.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign({ method: 'GET' }, baseOptions, options);\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Start the provided shift\n         * @param {ShiftStartPayload} shiftStartPayload \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        shiftStart(shiftStartPayload: ShiftStartPayload, options: any = {}): RequestArgs {\n            // verify required parameter 'shiftStartPayload' is not null or undefined\n            if (shiftStartPayload === null || shiftStartPayload === undefined) {\n                throw new RequiredError('shiftStartPayload','Required parameter shiftStartPayload was null or undefined when calling shiftStart.');\n            }\n            const localVarPath = `/api/Shift/start`;\n            const localVarUrlObj = url.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign({ method: 'POST' }, baseOptions, options);\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = (<any>\"ShiftStartPayload\" !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(shiftStartPayload || {}) : (shiftStartPayload || \"\");\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * ShiftApi - functional programming interface\n * @export\n */\nexport const ShiftApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary End the currently active shift\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        shiftClose(options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Shift> {\n            const localVarAxiosArgs = ShiftApiAxiosParamCreator(configuration).shiftClose(options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = Object.assign(localVarAxiosArgs.options, {url: basePath + localVarAxiosArgs.url})\n                return axios.request(axiosRequestArgs);                \n            };\n        },\n        /**\n         * \n         * @summary Create and return a new Shift object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        shiftCreate(options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Shift> {\n            const localVarAxiosArgs = ShiftApiAxiosParamCreator(configuration).shiftCreate(options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = Object.assign(localVarAxiosArgs.options, {url: basePath + localVarAxiosArgs.url})\n                return axios.request(axiosRequestArgs);                \n            };\n        },\n        /**\n         * \n         * @summary Returns the active shift\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        shiftGetCurrent(options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Shift> {\n            const localVarAxiosArgs = ShiftApiAxiosParamCreator(configuration).shiftGetCurrent(options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = Object.assign(localVarAxiosArgs.options, {url: basePath + localVarAxiosArgs.url})\n                return axios.request(axiosRequestArgs);                \n            };\n        },\n        /**\n         * \n         * @summary Start the provided shift\n         * @param {ShiftStartPayload} shiftStartPayload \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        shiftStart(shiftStartPayload: ShiftStartPayload, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Shift> {\n            const localVarAxiosArgs = ShiftApiAxiosParamCreator(configuration).shiftStart(shiftStartPayload, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = Object.assign(localVarAxiosArgs.options, {url: basePath + localVarAxiosArgs.url})\n                return axios.request(axiosRequestArgs);                \n            };\n        },\n    }\n};\n\n/**\n * ShiftApi - factory interface\n * @export\n */\nexport const ShiftApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @summary End the currently active shift\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        shiftClose(options?: any) {\n            return ShiftApiFp(configuration).shiftClose(options)(axios, basePath);\n        },\n        /**\n         * \n         * @summary Create and return a new Shift object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        shiftCreate(options?: any) {\n            return ShiftApiFp(configuration).shiftCreate(options)(axios, basePath);\n        },\n        /**\n         * \n         * @summary Returns the active shift\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        shiftGetCurrent(options?: any) {\n            return ShiftApiFp(configuration).shiftGetCurrent(options)(axios, basePath);\n        },\n        /**\n         * \n         * @summary Start the provided shift\n         * @param {ShiftStartPayload} shiftStartPayload \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        shiftStart(shiftStartPayload: ShiftStartPayload, options?: any) {\n            return ShiftApiFp(configuration).shiftStart(shiftStartPayload, options)(axios, basePath);\n        },\n    };\n};\n\n/**\n * ShiftApi - object-oriented interface\n * @export\n * @class ShiftApi\n * @extends {BaseAPI}\n */\nexport class ShiftApi extends BaseAPI {\n    /**\n     * \n     * @summary End the currently active shift\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ShiftApi\n     */\n    public shiftClose(options?: any) {\n        return ShiftApiFp(this.configuration).shiftClose(options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @summary Create and return a new Shift object\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ShiftApi\n     */\n    public shiftCreate(options?: any) {\n        return ShiftApiFp(this.configuration).shiftCreate(options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @summary Returns the active shift\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ShiftApi\n     */\n    public shiftGetCurrent(options?: any) {\n        return ShiftApiFp(this.configuration).shiftGetCurrent(options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @summary Start the provided shift\n     * @param {ShiftStartPayload} shiftStartPayload \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ShiftApi\n     */\n    public shiftStart(shiftStartPayload: ShiftStartPayload, options?: any) {\n        return ShiftApiFp(this.configuration).shiftStart(shiftStartPayload, options)(this.axios, this.basePath);\n    }\n\n}\n\n","import Product from \"../Models/Product\";\r\nimport axios from \"axios\";\r\nimport { config } from \"../config\";\r\nimport { createAction } from 'redux-actions';\r\nimport { FETCHING, FAILURE, SUCCESS } from \"../Actions/Utils\";\r\nimport { ProductApi } from \"../API\";\r\n\r\nconst Api = new ProductApi({});\r\nconst initialState = {\r\n    products: [] as Product[],\r\n    showProductDialog: false,\r\n    isLoading: false,\r\n    errorMessage: \"\",\r\n    selectedProduct: \"\",\r\n    canSearchProduct: true\r\n}\r\n\r\nexport const ACTIONS = {\r\n    FETCH_PRODUCTS: 'products/FETCH_PRODUCTS',\r\n    SHOW_PRODUCTS_DIALOG: 'products/SHOW_PRODUCTS_DIALOG',\r\n    PICK_PRODUCT: 'products/PICK_PRODUCT',\r\n    CLOSE_PRODUCTS_DIALOG: 'products/CLOSE_PRODUCTS_DIALOG'\r\n}\r\n\r\nexport type ProductState = Readonly<typeof initialState>;\r\n\r\nexport default (state: ProductState = initialState, action: any): ProductState => {\r\n    switch (action.type) {\r\n        case FETCHING(ACTIONS.FETCH_PRODUCTS):\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n            break;\r\n        case SUCCESS(ACTIONS.FETCH_PRODUCTS):\r\n            return {\r\n                ...state,\r\n                products: action.payload.data,\r\n                isLoading: false\r\n            }\r\n            break;\r\n        case FAILURE(ACTIONS.FETCH_PRODUCTS):\r\n            return {\r\n                ...state,\r\n                errorMessage: action.payload,\r\n                isLoading: false\r\n            }\r\n            break;\r\n        case ACTIONS.SHOW_PRODUCTS_DIALOG:\r\n            return {\r\n                ...state,\r\n                showProductDialog: true\r\n            }\r\n            break;\r\n        case ACTIONS.CLOSE_PRODUCTS_DIALOG:\r\n            return {\r\n                ...state,\r\n                showProductDialog: false\r\n            }\r\n            break;\r\n        case ACTIONS.PICK_PRODUCT:\r\n            return {\r\n                ...state,\r\n                showProductDialog: false,\r\n                selectedProduct: action.payload\r\n            }\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport const productFetch = createAction(ACTIONS.FETCH_PRODUCTS, () => { return axios.get(config.apiAddress + \"api/product\")})\r\nexport const productDialogClose = createAction(ACTIONS.CLOSE_PRODUCTS_DIALOG);\r\nexport const productDialogShow = createAction(ACTIONS.SHOW_PRODUCTS_DIALOG);\r\n//export const productFetch = createAction(ACTIONS.FETCH_PRODUCTS, Api.productGetAll)\r\n// export const productFetch = () => {\r\n//     return {\r\n//         type: ACTIONS.FETCH_PRODUCTS,\r\n//         payload: axios.get(config.apiAddress + \"api/product\")\r\n//     };\r\n// }\r\n//export const pickProduct = createAction(ACTIONS.PICK_PRODUCT, (ean: string) => ean);\r\n// export const pickProduct = (ean: string) => {\r\n//     return {\r\n//         type: ACTIONS.PICK_PRODUCT,\r\n//         payload: ean\r\n//     }\r\n// }\r\n\r\n// export const productDialogShow = () => {\r\n//     return {\r\n//         type: ACTIONS.SHOW_PRODUCTS_DIALOG\r\n//     };\r\n// }\r\n","import { IRootState } from \"../Reducers/Index\";\r\nimport React from \"react\";\r\nimport { compose } from \"recompose\";\r\nimport { withStyles, StyledComponentProps, createStyles, Theme, Dialog, DialogTitle, DialogContent, Grid, TextField, Button, Paper } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport Product from \"../Models/Product\";\r\nimport { productFetch, productDialogClose } from \"../Reducers/ProductReducer\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { addItemToReceipt } from \"../Reducers/ReceiptReducer\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        dialog: {\r\n            minWidth: 1000\r\n        },\r\n        grid: {\r\n            marginBottom: theme.spacing.unit * 2\r\n        }\r\n    });\r\n\r\nconst initialState = {\r\n    eanValue: \"\"\r\n};\r\n\r\ntype ProductListState = typeof initialState;\r\nconst columns = [\r\n    {\r\n        name: \"ean\",\r\n        label: \"EAN\",\r\n        options: {\r\n            filter: true,\r\n            sort: true\r\n        }\r\n    },\r\n    {\r\n        name: \"name\",\r\n        label: \"Nazwa\",\r\n        options: {\r\n            filter: true,\r\n            sort: true\r\n        }\r\n    },\r\n    {\r\n        name: \"price\",\r\n        label: \"Cena\",\r\n        options: {\r\n            filter: false,\r\n            sort: false\r\n        }\r\n    },\r\n    {\r\n        name: \"tax\",\r\n        label: \"VAT\",\r\n        options: {\r\n            filter: false,\r\n            sort: false\r\n        }\r\n    },\r\n    {\r\n        name: \"unit\",\r\n        label: \"Jm\",\r\n        options: {\r\n            filter: false,\r\n            sort: false\r\n        }\r\n    }\r\n];\r\n\r\nclass ProductList extends React.Component<ProductListProps, ProductListState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.productFetch();\r\n        this.state = initialState;\r\n    }\r\n    handleTextChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>): void {\r\n        this.setState({ eanValue: event.target.value });\r\n    }\r\n    handleCancel(event: React.MouseEvent<HTMLElement, MouseEvent>): void {\r\n        this.props.productDialogClose();\r\n    }\r\n    handleSubmit(event: React.MouseEvent<HTMLElement, MouseEvent>): void {\r\n        if (this.state.eanValue && this.state.eanValue != \"\") {\r\n            this.props.addItemToReceipt(this.state.eanValue);\r\n            this.props.productDialogClose();\r\n            this.setState({eanValue: \"\"});\r\n        }\r\n    }\r\n    handleRowClick(rowData: string[], rowMeta: { dataIndex: number, rowIndex: number }) {\r\n        this.setState({ eanValue: rowData[0] });\r\n    }\r\n    options() {\r\n        return {\r\n            filterType: \"checkbox\",\r\n            responsive: \"scroll\",\r\n            download: false,\r\n            print: false,\r\n            filter: false,\r\n            sort: false,\r\n            selectableRows: false,\r\n            onRowClick: this.handleRowClick.bind(this),\r\n            elevation:0\r\n        };\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const c = classes || {};\r\n        return (\r\n            <Dialog open={this.props.showProductDialog} maxWidth=\"xl\">\r\n                <DialogTitle id=\"form-dialog-title\">Wybierz produkt</DialogTitle>\r\n                <DialogContent className={c.dialog}>\r\n                    <Grid container className={c.grid} spacing={8}>\r\n                        <Grid item md={8}>\r\n                            <TextField autoFocus margin=\"dense\" id=\"amount\" onChange={event => this.handleTextChange(event)} value={this.state.eanValue} label=\"EAN\" type=\"text\" fullWidth />\r\n                        </Grid>\r\n                        <Grid item md={2}>\r\n                            <Button color=\"primary\" size=\"large\" variant=\"contained\" fullWidth onClick={event => this.handleSubmit(event)} disabled={this.state && this.state.eanValue === \"\"}>\r\n                                Zatwierdź\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item md={2}>\r\n                            <Button color=\"secondary\" size=\"large\" variant=\"contained\" fullWidth onClick={event => this.handleCancel(event)}>\r\n                                Anuluj\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <MUIDataTable\r\n                        title={\"\"}\r\n                        data={this.props.products.map(item => {\r\n                            return [item.ean, item.name, item.price, item.tax, item.unit];\r\n                        })}\r\n                        columns={columns}\r\n                        options={this.options()}\r\n                    />\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (store: IRootState) => ({\r\n    ...store.product\r\n});\r\n\r\nconst mapDispatchToProps = { productFetch, productDialogClose, addItemToReceipt };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\ntype ProductListProps = StyledComponentProps & StateProps & DispatchProps;\r\nexport default compose<ProductListProps, {}>(\r\n    withStyles(styles),\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )\r\n)(ProductList);\r\n","import { IRootState } from \"../Reducers/Index\";\r\nimport React from \"react\";\r\nimport { compose } from \"recompose\";\r\nimport { withStyles, StyledComponentProps, createStyles, Theme, Dialog, DialogTitle, DialogContent, Grid, TextField, Button, Paper } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { changeQuantitySubmit, changeQuantityCancel } from \"../Reducers/ReceiptReducer\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        dialog: {\r\n            minWidth: 500\r\n        },\r\n        grid: {\r\n            marginBottom: theme.spacing.unit * 2\r\n        },\r\n        inputField: {\r\n            fontSize: theme.typography.h4.fontSize\r\n        }\r\n    });\r\n\r\ntype ChangeQuantityState = {\r\n    quantity: number;\r\n};\r\n\r\nclass ChangeQuantity extends React.Component<ChangeQuantityProps, ChangeQuantityState> {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {quantity:1};\r\n    }\r\n    handleTextChange(event: any): void {\r\n        const q = Number(event.target.value);\r\n        if (!isNaN(q)) this.setState({ quantity: q });\r\n    }\r\n    handleCancel(event?: React.MouseEvent<HTMLElement, MouseEvent>): void {\r\n        this.props.changeQuantityCancel();\r\n    }\r\n    handleSubmit(event?: React.MouseEvent<HTMLElement, MouseEvent>): void {\r\n        this.props.changeQuantitySubmit(this.props.selectedReceiptItem || 1, this.state.quantity);\r\n    }\r\n    handleFocus(event: any): void {\r\n        event.target.select();\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.selectedReceiptItemQuantity !== this.props.selectedReceiptItemQuantity) {\r\n            this.setState({ quantity: nextProps.selectedReceiptItemQuantity });\r\n        }\r\n    }\r\n    handleEnterKey(event: React.KeyboardEvent<HTMLDivElement>): void {\r\n        if (event.key === \"Enter\") {\r\n            event.preventDefault();\r\n            this.handleSubmit()\r\n        }\r\n        else if (event.key === \"Escape\") {\r\n            event.preventDefault();\r\n            this.handleCancel()\r\n        }\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const c = classes || {};\r\n        return (\r\n            <Dialog open={this.props.showQuantityDialog} maxWidth={false}>\r\n                <DialogTitle id=\"form-dialog-title\">Podaj ilość</DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container className={c.grid} spacing={8}>\r\n                        <Grid item md={6}>\r\n                            <TextField InputProps={{ className: c.inputField }} autoFocus margin=\"dense\" id=\"amount\" onKeyDown={event => this.handleEnterKey(event)} onChange={event => this.handleTextChange(event)} onFocus={event => this.handleFocus(event)} value={this.state.quantity} type=\"number\" fullWidth />\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n                            <Button color=\"primary\" size=\"large\" variant=\"contained\" fullWidth onClick={event => this.handleSubmit(event)} disabled={this.state.quantity <= 0}>\r\n                                Zatwierdź\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n                            <Button color=\"secondary\" size=\"large\" variant=\"contained\" fullWidth onClick={event => this.handleCancel(event)}>\r\n                                Anuluj\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (store: IRootState) => ({\r\n    ...store.receipt\r\n});\r\n\r\nconst mapDispatchToProps = { changeQuantityCancel, changeQuantitySubmit };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\ntype ChangeQuantityProps = StyledComponentProps & StateProps & DispatchProps;\r\nexport default compose<ChangeQuantityProps, {}>(\r\n    withStyles(styles),\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )\r\n)(ChangeQuantity);\r\n","import { IRootState } from \"../Reducers/Index\";\r\nimport React from \"react\";\r\nimport { compose } from \"recompose\";\r\nimport { withStyles, StyledComponentProps, createStyles, Theme, Dialog, DialogTitle, DialogContent, Grid, TextField, Button, Paper, Typography } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { changeQuantitySubmit, changeQuantityCancel, deleteReceiptSubmit, deleteReceiptCancel } from \"../Reducers/ReceiptReducer\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        dialog: {\r\n            minWidth: 500\r\n        },\r\n        grid: {\r\n            marginBottom: theme.spacing.unit * 2\r\n        },\r\n        inputField: {\r\n            fontSize: theme.typography.h4.fontSize\r\n        }\r\n    });\r\n\r\ntype ChangeQuantityState = {\r\n    quantity: number;\r\n};\r\n\r\nclass ChangeQuantity extends React.Component<ChangeQuantityProps, ChangeQuantityState> {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {quantity:1};\r\n    }\r\n    handleTextChange(event: any): void {\r\n        const q = Number(event.target.value);\r\n        if (!isNaN(q)) this.setState({ quantity: q });\r\n    }\r\n    handleCancel(event?: React.MouseEvent<HTMLElement, MouseEvent>): void {\r\n        this.props.deleteReceiptCancel();\r\n    }\r\n    handleSubmit(event?: React.MouseEvent<HTMLElement, MouseEvent>): void {\r\n        this.props.deleteReceiptSubmit(this.props.id);\r\n    }\r\n    handleFocus(event: any): void {\r\n        event.target.select();\r\n    }\r\n    handleEnterKey(event: React.KeyboardEvent<HTMLDivElement>): void {\r\n        if (event.key === \"Enter\") {\r\n            event.preventDefault();\r\n            this.handleSubmit()\r\n        }\r\n        else if (event.key === \"Escape\") {\r\n            event.preventDefault();\r\n            this.handleCancel()\r\n        }\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const c = classes || {};\r\n        return (\r\n            <Dialog open={this.props.showReceiptCancelDialog} maxWidth={false}>\r\n                <DialogContent>\r\n                    <Grid container className={c.grid}>\r\n                    <Typography variant=\"h4\">Czy na pewno usunąć paragon?</Typography>\r\n                    </Grid>\r\n                    <Grid container spacing={32}>\r\n                        <Grid item md={6}>\r\n                            <Button color=\"primary\" size=\"large\" variant=\"contained\" fullWidth onClick={event => this.handleSubmit(event)} disabled={this.state.quantity <= 0}>\r\n                                Tak\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item md={6}>\r\n                            <Button color=\"primary\" size=\"large\" variant=\"contained\" fullWidth onClick={event => this.handleCancel(event)}>\r\n                                Nie\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (store: IRootState) => ({\r\n    ...store.receipt\r\n});\r\n\r\nconst mapDispatchToProps = { deleteReceiptSubmit, deleteReceiptCancel };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\ntype ChangeQuantityProps = StyledComponentProps & StateProps & DispatchProps;\r\nexport default compose<ChangeQuantityProps, {}>(\r\n    withStyles(styles),\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )\r\n)(ChangeQuantity);\r\n","import Axios from \"axios\";\r\nimport { config } from \"../config\";\r\nimport { createAction } from \"redux-actions\";\r\nimport { SUCCESS } from \"../Actions/Utils\";\r\n\r\nconst initialState = {\r\n    showPayDialog: false,\r\n    amount: 0,\r\n    amountPayed: 0,\r\n    change: 0,\r\n    isLoading: false,\r\n    canPay: false,\r\n    id: 0\r\n}\r\nconst ACTIONS = {\r\n    PAYDIALOG_SHOW: \"payment/PAYDIALOG_SHOW\",\r\n    PAYDIALOG_CANCEL: \"payment/PAYDIALOG_CANCEL\",\r\n    PAYDIALOG_SUBMIT: \"payment/PAYDIALOG_SUBMIT\"\r\n}\r\n\r\nexport type PaymentState = Readonly<typeof initialState>;\r\n\r\nexport const payShowDialog = createAction(ACTIONS.PAYDIALOG_SHOW, (id: number) => { return Axios.post(config.apiAddress + \"api/payment\")});\r\nexport const payCancelDialog = createAction(ACTIONS.PAYDIALOG_CANCEL);\r\nexport const paySubmit = (id: number, amount: number) => (dispatch, getState) => {\r\n    Axios.post(config.apiAddress + \"api/payment/pay\", {paymentId:id, amount}).then(response => {\r\n        dispatch({\r\n            type: \"receipt/RESET\"\r\n        });\r\n\r\n        dispatch({\r\n            type: SUCCESS(ACTIONS.PAYDIALOG_SUBMIT)\r\n        });\r\n    })\r\n}\r\n//export const paySubmit = createAction(ACTIONS.PAYDIALOG_SUBMIT, (id: number, amount: number) => { return Axios.post(config.apiAddress + \"api/payment/pay\", {id, amount})});\r\n\r\nexport default (state: PaymentState = initialState, action:any): PaymentState => {\r\n    switch (action.type) {\r\n        case SUCCESS(ACTIONS.PAYDIALOG_SHOW):\r\n            return {\r\n                ...state,\r\n                ...action.payload.data,\r\n                showPayDialog: true\r\n            };\r\n        case SUCCESS(ACTIONS.PAYDIALOG_SUBMIT):\r\n            return {\r\n                ...state,\r\n                showPayDialog: false\r\n            }\r\n        case ACTIONS.PAYDIALOG_CANCEL:\r\n            return {\r\n                ...state,\r\n                showPayDialog: false\r\n            }\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n}","import { Dialog, Slide, DialogTitle, DialogContent, Grid, Typography, TextField, Button, Theme, createStyles, withStyles, StyledComponentProps } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { IRootState } from \"../Reducers/Index\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"recompose\";\r\nimport { paySubmit, payCancelDialog } from \"../Reducers/PaymentReducer\";\r\nimport { FormattedNumber} from 'react-intl';\r\n\r\nfunction Transition(props: any) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    paper: {\r\n        minWidth: 900\r\n    }\r\n});\r\n\r\nclass PaymentView extends React.Component<PaymentViewProps, any> {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { amount: 0 }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.receiptTotal !== this.props.receiptTotal || nextProps.amount !== this.props.amount) {\r\n            this.setState({ amountString: nextProps.receiptTotal, amount: nextProps.amount });\r\n        }\r\n    }\r\n    render() {\r\n        const {classes} = this.props;\r\n        const c = classes || {};\r\n        const amount = this.state && this.state.amount ? Number(this.state.amount) : 0;\r\n        return <Dialog open={this.props.showPayDialog} TransitionComponent={Transition} maxWidth=\"xl\">\r\n            <DialogTitle id=\"form-dialog-title\">Płatność</DialogTitle>\r\n            <DialogContent className={c.paper}>\r\n                <Grid container>\r\n                    <Grid item md={3}>\r\n                        <Typography variant=\"h4\">Do zapłaty: </Typography>\r\n                    </Grid>\r\n                    <Grid item md={9}>\r\n                        <Typography variant=\"h3\">{this.props.receiptTotal}</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                    <Grid item md={3}>\r\n                        <Typography variant=\"h4\">Wpłata:</Typography>\r\n                    </Grid>\r\n                    <Grid item md={9}>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"amount\"\r\n                        label=\"Kwota wpłaty\"\r\n                        type=\"number\"\r\n                        value={this.state.amount}\r\n                        onFocus={(event) => this.handleFocus(event)}\r\n                        onKeyPress={(event) => this.handleKeys(event)}\r\n                        onChange={(event) => this.handleChange(event)}\r\n                    />\r\n                </Grid>\r\n                </Grid>\r\n\r\n                <Grid container>\r\n                    <Grid item md={3}>\r\n                        <Typography variant=\"h4\">Reszta: </Typography>\r\n                    </Grid>\r\n                    <Grid item md={9}>\r\n                        <Typography variant=\"h4\"><FormattedNumber  value={amount < this.props.amount ? 0 : (amount - this.props.amount)} style=\"currency\" currency=\"PLN\"/></Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                    <Grid item md={6}>\r\n                        <Button color=\"primary\" size=\"large\" variant=\"contained\" disabled={amount < this.props.amount} onClick={(event) => this.handleSubmit(event)} >\r\n                            Zatwierdź\r\n            </Button>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                        <Button color=\"secondary\" size=\"large\" variant=\"contained\" onClick={(event) => this.handleCancel(event)}>\r\n                            Anuluj\r\n            </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n        </Dialog>;\r\n    }\r\n    handleCancel(event?: React.MouseEvent<HTMLElement, MouseEvent>): void {\r\n        this.props.payCancelDialog();\r\n    }\r\n    handleSubmit(event?: React.MouseEvent<HTMLElement, MouseEvent>): void {\r\n        this.props.paySubmit(this.props.id, this.state.amount);\r\n    }\r\n    handleChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>): void {\r\n        this.setState({amount: event.target.value})\r\n    }\r\n    handleKeys(event: React.KeyboardEvent<HTMLDivElement>): void {\r\n        if (event.key === \"Enter\") {\r\n            event.preventDefault();\r\n            this.handleSubmit()\r\n        }\r\n        else if (event.key === \"Escape\") {\r\n            event.preventDefault();\r\n            this.handleCancel()\r\n        }\r\n    }\r\n    handleFocus(event: any): void {\r\n        event.target.select();\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store: IRootState) => ({\r\n    ...store.payment,\r\n    receiptTotal: store.receipt.receiptTotal\r\n});\r\n\r\nconst mapDispatchToProps = { paySubmit, payCancelDialog  };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\ntype PaymentViewProps = StyledComponentProps & StateProps & DispatchProps;\r\nexport default compose<PaymentViewProps, {}>(\r\n    withStyles(styles),\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )\r\n)(PaymentView);","import React from \"react\";\r\nimport { Grid, withStyles, Theme, createStyles, StyledComponentProps } from \"@material-ui/core\";\r\nimport { Search, PlusOne, CheckCircle, Cancel, ExitToApp, RemoveShoppingCart } from \"@material-ui/icons\";\r\nimport TopMenuButton from \"./TopMenuButton\";\r\nimport { compose } from \"recompose\";\r\nimport { startShiftShow, endShiftShow, getCurrentShift, startShiftExistingShow } from \"../Reducers/ShiftReducer\";\r\nimport { changeQuantityShow, deleteReceiptShow, removeItemFromReceipt, getCurrentReceipt } from \"../Reducers/ReceiptReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { IRootState } from \"../Reducers/Index\";\r\nimport { productDialogShow } from \"../Reducers/ProductReducer\";\r\nimport ProductList from \"./ProductList\";\r\nimport ChangeQuantity from \"./ChangeQuantity\";\r\nimport DeleteReceipt from \"./DeleteReceipt\";\r\nimport PaymentView from \"./PaymentView\";\r\nimport { payShowDialog } from \"../Reducers/PaymentReducer\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        mainGrid: {\r\n            paddingLeft: theme.spacing.unit,\r\n            paddingRight: theme.spacing.unit\r\n        },\r\n        icon: {\r\n            marginRight: theme.spacing.unit,\r\n            fontSize: 54\r\n        }\r\n    });\r\n\r\nconst initialState = {\r\n    selectedItemId: null\r\n};\r\n\r\ntype TopMenuState = typeof initialState;\r\n\r\nclass TopMenu extends React.Component<TopMenuProps, TopMenuState> {\r\n    constructor(props){\r\n        super(props);\r\n        this.props.getCurrentShift();\r\n        this.props.getCurrentReceipt();\r\n    }\r\n    handleProductList = event => {\r\n        this.props.productDialogShow();\r\n    };\r\n    handleChangeQuantity = (event: any) => {\r\n        this.props.changeQuantityShow();\r\n    };\r\n    handlePay = (event: any) => {\r\n        this.props.payShowDialog(this.props.receipt.id);\r\n    };\r\n    handleRemoveReceiptItem = (event: any) => {\r\n        this.props.removeItemFromReceipt(this.props.receipt.id, this.props.receipt.selectedReceiptItem || 1);\r\n    };\r\n    handleCancelRecceipt = (event: any) => {\r\n        this.props.deleteReceiptShow();\r\n    };\r\n    handleCloseShift = (event: any) => {\r\n        this.props.endShiftShow();\r\n    };\r\n    handleOpenShift = (event: any) => {\r\n        if (this.props.shift.isCreated)\r\n            this.props.startShiftExistingShow();\r\n        else\r\n            this.props.startShiftShow();\r\n    };\r\n    render() {\r\n        let { classes, shift } = this.props;\r\n        classes = classes || {};\r\n        return (\r\n            <Grid container spacing={8} className={classes.mainGrid}>\r\n                <TopMenuButton text=\"Znajdź produkt\" disabled={!shift.isOpen} onClick={this.handleProductList}>\r\n                    <Search className={classes.icon} />\r\n                </TopMenuButton>\r\n                <TopMenuButton text=\"Zmień ilość\" disabled={!this.props.canChangeQuantity} onClick={this.handleChangeQuantity}>\r\n                    <PlusOne className={classes.icon} />\r\n                </TopMenuButton>\r\n                <TopMenuButton text=\"Zapłata\" disabled={!this.props.canPay} onClick={this.handlePay}>\r\n                    <CheckCircle className={classes.icon} />\r\n                </TopMenuButton>\r\n                <TopMenuButton text=\"Usuń pozycję\" disabled={!this.props.canRemoveItem} onClick={this.handleRemoveReceiptItem}>\r\n                    <RemoveShoppingCart className={classes.icon} />\r\n                </TopMenuButton>\r\n                <TopMenuButton text=\"Anuluj paragon\" disabled={!this.props.canCancelReceipt} onClick={this.handleCancelRecceipt}>\r\n                    <Cancel className={classes.icon} />\r\n                </TopMenuButton>\r\n                <TopMenuButton\r\n                    text={shift.isOpen ? \"Zamknij zmianę\" : \"Otwórz zmianę\"}\r\n                    disabled={shift.isOpen ? !shift.canCloseShift : !shift.canOpenShift}\r\n                    onClick={shift.isOpen ? this.handleCloseShift : this.handleOpenShift}\r\n                >\r\n                    <ExitToApp className={classes.icon} />\r\n                </TopMenuButton>\r\n                <ProductList />\r\n                <ChangeQuantity />\r\n                <DeleteReceipt />\r\n                <PaymentView />\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store: IRootState) => ({\r\n    shift: store.shift,\r\n    receipt: store.receipt,\r\n    canSearchProduct: store.product.canSearchProduct,\r\n    canChangeQuantity: store.receipt.canChangeQuantity,\r\n    canPay: store.receipt.canPay,\r\n    canRemoveItem: store.receipt.canRemoveItem,\r\n    canCancelReceipt: store.receipt.canCancelReceipt\r\n});\r\n\r\nconst mapDispatchToProps = { payShowDialog, productDialogShow, deleteReceiptShow, changeQuantityShow, endShiftShow, startShiftShow, getCurrentShift, startShiftExistingShow, removeItemFromReceipt, getCurrentReceipt };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\ntype TopMenuProps = StyledComponentProps & StateProps & DispatchProps;\r\nexport default compose<TopMenuProps, {}>(\r\n    withStyles(styles),\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )\r\n)(TopMenu);\r\n","import React from \"react\";\r\nimport {\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  Dialog,\r\n  DialogActions,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Slide,\r\n  Theme,\r\n  createStyles,\r\n  withStyles,\r\n  WithStyles,\r\n  StyledComponentProps\r\n} from \"@material-ui/core\";\r\nimport { IRootState } from \"../Reducers/Index\";\r\nimport { startShiftShow, endShiftShow, endShiftSubmit, endShiftShowCancel, startShiftShowCancel, startShiftSubmit } from \"../Reducers/ShiftReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport compose from \"recompose/compose\";\r\n\r\nfunction Transition(props: any) {\r\n  return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  dialog: {\r\n    minWidth: 1000\r\n  }\r\n});\r\n\r\n\r\ntype TillState = {\r\n  amount: string;\r\n};\r\nclass TillManagement extends React.Component<TillProps, TillState> {\r\n  constructor(props: TillProps) {\r\n    super(props);\r\n    this.state = { amount: \"\" };\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    const c = classes || {};\r\n    return (\r\n      <div>\r\n        {this.props.showStartShift ? (\r\n          <Dialog open={this.props.showDialog} className={c.dialog} TransitionComponent={Transition} maxWidth=\"xl\">\r\n            <DialogTitle id=\"form-dialog-title\">Otwarcie zmiany</DialogTitle>\r\n            <DialogContent>\r\n              <Grid container>\r\n                <Grid item md={9}>\r\n                  <Typography variant=\"h4\">\r\n                    Aktualna kwota na stanowisku:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item md={3}>\r\n                  <Typography variant=\"h4\">\r\n                    {this.props.startMoney}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item md={3}>\r\n                  <Typography>Wpłata początkowa</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item md={9}>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"amount\"\r\n                  label=\"Kwota początkowa\"\r\n                  type=\"number\"\r\n                  value={this.state.amount}\r\n                  onKeyDown={(event) => this.handleEnter(event)}\r\n                  onChange={(event) => this.handleChangeAmount(event)}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item md={6}>\r\n                  <Button color=\"primary\" onClick={(event) => this.handleSubmitStartShift(event)} >Zatwierdź</Button>\r\n                </Grid>\r\n                <Grid item md={6}>\r\n                  <Button color=\"primary\" onClick={(event) => this.handleCancelStartShift(event)} >Anuluj</Button>\r\n                </Grid>\r\n              </Grid>\r\n            </DialogContent>\r\n          </Dialog>\r\n        ) : (\r\n          <Dialog open={this.props.showDialog} className={c.dialog} TransitionComponent={Transition}>\r\n            <DialogTitle id=\"form-dialog-title\">Zamknięcie zmiany</DialogTitle>\r\n            <DialogContent>\r\n              <Grid container>\r\n                <Grid item md={6}>\r\n                  <Typography variant=\"h4\">Kwota z przeniesienia:</Typography>\r\n                </Grid>\r\n                <Grid item md={6}>\r\n                  <Typography variant=\"h4\">{this.props.startMoney}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item md={6}>\r\n                  <Typography variant=\"h4\">Wpłata początkowa:</Typography>\r\n                </Grid>\r\n                {/* <Grid item md={6}>\r\n                  <Typography>{this.props.amount}</Typography>\r\n                </Grid> */}\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item md={6}>\r\n                  <Typography variant=\"h4\">Ilość paragonów:</Typography>\r\n                </Grid>\r\n                <Grid item md={6}>\r\n                  <Typography variant=\"h4\">{this.props.numberOfReceipts}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item md={6}>\r\n                  <Typography variant=\"h4\">Ilość anulowanych paragonów:</Typography>\r\n                </Grid>\r\n                <Grid item md={6}>\r\n                  <Typography variant=\"h4\">\r\n                    {this.props.cancelledReceiptsCount}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item md={6}>\r\n                  <Typography variant=\"h4\">Ilość anulowanych pozycji:</Typography>\r\n                </Grid>\r\n                <Grid item md={6}>\r\n                  <Typography variant=\"h4\">\r\n                    {this.props.removedItemsCount}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item md={6}>\r\n                  <Typography variant=\"h4\">Sprzedaż:</Typography>\r\n                </Grid>\r\n                <Grid item md={6}>\r\n                  <Typography variant=\"h4\">{this.props.sales}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item md={3}>\r\n                  <Typography variant=\"h4\">Wpłata początkowa</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item md={6}>\r\n                  <Typography variant=\"h4\">Pozostaje:</Typography>\r\n                </Grid>\r\n                {/* <Grid item md={6}>\r\n                  <Typography>{this.props.}</Typography>\r\n                </Grid> */}\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item md={6}>\r\n                  <Button color=\"primary\" onClick={(event) => this.handleSubmitCloseShift(event)}>Zamknij zmianę</Button>\r\n                </Grid>\r\n                <Grid item md={6}>\r\n                  <Button color=\"primary\" onClick={(event) => this.handleCancelCloseShift(event)}>Anuluj</Button>\r\n                </Grid>\r\n              </Grid>\r\n            </DialogContent>\r\n          </Dialog>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  handleEnter(event: React.KeyboardEvent<HTMLDivElement>): void {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault();\r\n      this.handleSubmitStartShift();\r\n    }\r\n  }\r\n  handleChangeAmount(event: any): void {\r\n    this.setState({amount: event.target.value})\r\n  }\r\n  handleCancelStartShift(event: React.MouseEvent<HTMLElement, MouseEvent>): void {\r\n    this.props.startShiftShowCancel();\r\n  }\r\n  handleSubmitStartShift(event?: React.MouseEvent<HTMLElement, MouseEvent>): void {\r\n    this.props.startShiftSubmit(this.props.id, Number(this.state.amount));\r\n  }\r\n  handleSubmitCloseShift(event: React.MouseEvent<HTMLElement, MouseEvent>): void {\r\n    this.props.endShiftSubmit();\r\n  }\r\n  handleCancelCloseShift(event: React.MouseEvent<HTMLElement, MouseEvent>): void {\r\n    this.props.endShiftShowCancel();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store: IRootState) => ({\r\n    ...store.shift\r\n    // hasOpenShift: store.shift.hasOpenShift,\r\n    // previousAmount: store.shift.previousAmount,\r\n    // startAmount: store.shift.startAmount,\r\n    // isLoading: store.shift.isLoading,\r\n    // numberOfReceipts: store.shift.numberOfReceipts\r\n});\r\n\r\nconst mapDispatchToProps = { startShift: startShiftShow, endShiftShow, endShiftSubmit, endShiftShowCancel, startShiftSubmit, startShiftShowCancel}\r\n\r\ntype StateProps = ReturnType<typeof  mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\ntype TillProps = StyledComponentProps & StateProps & DispatchProps;\r\nexport default compose<TillProps, {}>(withStyles(styles),connect(mapStateToProps, mapDispatchToProps))(TillManagement);\r\n","import { Theme, createStyles, withStyles, Grid, TextField, StyledComponentProps } from \"@material-ui/core\";\r\n\r\nimport React from \"react\";\r\nimport { IRootState } from \"../Reducers/Index\";\r\nimport { compose } from \"recompose\";\r\nimport { connect } from \"react-redux\";\r\nimport { addItemToReceipt } from \"../Reducers/ReceiptReducer\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        textField: {\r\n            marginLeft: theme.spacing.unit * 4,\r\n            marginTop: theme.spacing.unit * 4,\r\n            marginBottom: theme.spacing.unit * 4\r\n        },\r\n        inputField: {\r\n            fontSize: theme.typography.h4.fontSize\r\n        },\r\n        label: {\r\n            fontSize: theme.typography.h4.fontSize\r\n        }\r\n    });\r\n\r\ntype BottomMenuState = {\r\n    name: string;\r\n};\r\n\r\nclass BottomMenu extends React.Component<BottomMenuProps, BottomMenuState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\"\r\n        };\r\n    }\r\n    handlePickProduct() {\r\n        this.props.addItemToReceipt(this.state.name);\r\n    }\r\n    handleChange(name: string) {\r\n        return (event: any) => {\r\n            if (event.key === \"Enter\") this.handlePickProduct();\r\n            else\r\n                return this.setState({\r\n                    [name]: event.target.value\r\n                } as BottomMenuState);\r\n        };\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const c = classes || {}\r\n        return (\r\n            <Grid container>\r\n                <Grid item md={8}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"standard-name\"\r\n                        label=\"Dodaj produkt\"\r\n                        variant=\"outlined\"\r\n                        className={c.textField}\r\n                        InputProps={{ className: c.inputField }}\r\n                        InputLabelProps={{ className: c.label }}\r\n                        value={this.state.name}\r\n                        onKeyPress={(event) => this.handleEnterKey(event)}\r\n                        onChange={(event) => this.handleEanChange(event)}\r\n                        margin=\"normal\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n    handleEnterKey(event: React.KeyboardEvent<HTMLDivElement>): void {\r\n        if (event.key === \"Enter\") {\r\n            event.preventDefault();\r\n            this.handlePickProduct();\r\n        }\r\n    }\r\n    handleEanChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>): void {\r\n        this.setState({\r\n            [\"name\"]: event.target.value\r\n        } as BottomMenuState);\r\n    }\r\n}\r\nconst mapStateToProps = () => ({\r\n\r\n});\r\nconst mapDispatchToProps = { addItemToReceipt };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\ntype BottomMenuProps = StyledComponentProps & StateProps & DispatchProps;\r\nexport default compose<BottomMenuProps, {}>(\r\n    withStyles(styles),\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )\r\n)(BottomMenu);\r\n","import React from \"react\";\r\nimport ReceiptView from \"./ReceiptView\";\r\nimport TopMenu from \"./TopMenu\";\r\nimport TillManagement from \"./TillManagement\";\r\nimport {\r\n  Paper,\r\n  Theme,\r\n  createStyles,\r\n  withStyles,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Divider\r\n} from \"@material-ui/core\";\r\nimport BottomMenu from \"./BottomMenu\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    layout: {\r\n      width: \"auto\",\r\n      marginLeft: theme.spacing.unit * 3,\r\n      marginRight: theme.spacing.unit * 3,\r\n      marginTop: theme.spacing.unit * 3,\r\n      [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\r\n        marginLeft: theme.spacing.unit * 2,\r\n        marginRight: theme.spacing.unit * 2\r\n      }\r\n    },\r\n    divider: {\r\n      marginTop: theme.spacing.unit * 2\r\n    },\r\n    paper: {\r\n        marginBottom: theme.spacing.unit * 2\r\n    }\r\n  });\r\n\r\nclass MainView extends React.Component<any, any> {\r\n  componentDidMount(){\r\n    \r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <AppBar position=\"static\" color=\"primary\">\r\n          <Toolbar variant=\"dense\">\r\n            <Typography variant=\"h6\" color=\"inherit\">\r\n              Biovert POS\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div className={classes.layout}>\r\n          <Paper className={classes.paper}>\r\n            <TopMenu />\r\n          </Paper>\r\n          <Paper className={classes.paper}>\r\n            <ReceiptView />\r\n          </Paper>\r\n          <Paper className={classes.paper}>\r\n            <BottomMenu />\r\n          </Paper>\r\n          <TillManagement />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MainView);\r\n","import shift, { ShiftState } from \"./ShiftReducer\";\r\nimport product, { ProductState } from \"./ProductReducer\";\r\nimport receipt, { ReceiptState } from \"./ReceiptReducer\";\r\nimport payment, { PaymentState } from \"./PaymentReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport interface IRootState {\r\n    readonly payment: PaymentState;\r\n    readonly receipt: ReceiptState;\r\n    readonly product: ProductState;\r\n    readonly shift: ShiftState;\r\n}\r\n\r\nconst rootReducer = combineReducers<IRootState>({\r\n    payment,\r\n    receipt,\r\n    product,\r\n    shift\r\n});\r\n\r\nexport default rootReducer;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport MainView from './Components/MainView';\r\nimport { createStyles, Theme, withStyles } from '@material-ui/core';\r\nimport './fonts.css';\r\nimport './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport initStore from './Stores/AppStore';\r\nimport {IntlProvider} from 'react-intl'\r\n\r\nconst store = initStore();\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  root: {\r\n    flexGrow: 1\r\n  }\r\n});\r\nclass App extends Component<any, any> {\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n        <div className={classes.root}>\r\n        <Provider store={store}>\r\n        <IntlProvider locale=\"pl\" defaultLocale=\"pl\">\r\n            <Router>\r\n                <Route path=\"/\" component={MainView} />\r\n            </Router>\r\n            </IntlProvider>\r\n            </Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(App);","import { Store, createStore, applyMiddleware, compose } from \"redux\";\r\n//import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {AppState} from \"../State/AppState\";\r\nimport promise from 'redux-promise-middleware'\r\nimport logger from \"redux-logger\";\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer, { IRootState } from \"../Reducers/Index\";\r\n\r\n// const defaultMiddlewares = [\r\n//     thunk,\r\n//     promise,\r\n//     logger\r\n//   ];\r\n\r\n// const composedMiddlewares = (middlewares: any) => compose(applyMiddleware(...defaultMiddlewares, ...middlewares))\r\n\r\nconst AppStore = (initialState?: IRootState) => createStore(rootReducer, initialState, applyMiddleware(promise(), logger, thunk))\r\nexport default AppStore;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst palette = {\r\n  primary: { main: '#2E7D32' },\r\n  secondary: { main: '#FFB300' },\r\n  error: { main: '#f44336'}\r\n};\r\n\r\nexport default createMuiTheme({ palette });","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport theme from './Theme';\n\nReactDOM.render(<MuiThemeProvider theme={theme}><App /></MuiThemeProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}