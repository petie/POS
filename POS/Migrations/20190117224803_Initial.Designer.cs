// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using POS.DataAccess;

namespace POS.Migrations
{
    [DbContext(typeof(PosDbContext))]
    [Migration("20190117224803_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("POC.Models.PaymentInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<decimal>("AmountPayed");

                    b.Property<decimal>("Change");

                    b.Property<DateTime>("DateCreated");

                    b.Property<bool>("IsPayed");

                    b.Property<int>("ReceiptId");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptId")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("POC.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Ean");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.Property<int>("TaxId");

                    b.Property<string>("Unit");

                    b.HasKey("Id");

                    b.HasIndex("TaxId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("POC.Models.Receipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<bool>("IsCancelled");

                    b.Property<int>("ShiftId");

                    b.Property<decimal>("Total");

                    b.HasKey("Id");

                    b.HasIndex("ShiftId");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("POC.Models.ReceiptItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<bool>("IsRemoved");

                    b.Property<int>("OrdinalNumber");

                    b.Property<int>("ProductId");

                    b.Property<decimal>("Quantity");

                    b.Property<int>("ReceiptId");

                    b.Property<decimal>("Value");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ReceiptId");

                    b.ToTable("ReceiptItems");
                });

            modelBuilder.Entity("POC.Models.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CancelledReceiptsCount");

                    b.Property<DateTime?>("EndDate");

                    b.Property<bool>("IsClosed");

                    b.Property<decimal>("NumberOfReceipts");

                    b.Property<int>("RemovedItemsCount");

                    b.Property<DateTime>("StartDate");

                    b.Property<decimal>("StartDeposit");

                    b.Property<decimal>("StartMoney");

                    b.HasKey("Id");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("POC.Models.Tax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FiscalSymbol");

                    b.Property<string>("Symbol");

                    b.Property<decimal>("Value");

                    b.HasKey("Id");

                    b.ToTable("Tax");
                });

            modelBuilder.Entity("POC.Models.PaymentInfo", b =>
                {
                    b.HasOne("POC.Models.Receipt", "Receipt")
                        .WithOne("Payment")
                        .HasForeignKey("POC.Models.PaymentInfo", "ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("POC.Models.Product", b =>
                {
                    b.HasOne("POC.Models.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("POC.Models.Receipt", b =>
                {
                    b.HasOne("POC.Models.Shift", "Shift")
                        .WithMany("Receipts")
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("POC.Models.ReceiptItem", b =>
                {
                    b.HasOne("POC.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("POC.Models.Receipt", "Receipt")
                        .WithMany("Items")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
